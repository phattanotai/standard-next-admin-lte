{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\n\nvar AddUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddUser, _React$Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser(props) {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChange\", function (nr) {\n      return function () {\n        var switchNumber = \"switch\".concat(nr);\n\n        _this.setState(_defineProperty({}, switchNumber, !_this.state[switchNumber]));\n      };\n    });\n\n    _this.state = {\n      auth: {\n        username: \"\",\n        password: \"\",\n        role: \"3\",\n        rolename: \"User\"\n      },\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      role: \"3\",\n      rolename: \"User\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"User\",\n      user_enable: true,\n      switch1: true,\n      userid: Cookies.get(\"userid\")\n    };\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleToggleChange = _this.handleToggleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.setErrorMsg = _this.setErrorMsg.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onConfirmClick = _this.onConfirmClick.bind(_assertThisInitialized(_this));\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this));\n    _this.onSearchLevel = _this.onSearchLevel.bind(_assertThisInitialized(_this));\n    _this.onSearchLevelname = _this.onSearchLevelname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"onSearchLevel\",\n    value: function onSearchLevel(level_name) {\n      console.log('get myrole');\n      var myrole = this.state.role_data.filter(function (role) {\n        return role.user_level_name == level_name;\n      });\n      var user_level_id = myrole.map(function (role, index) {\n        return role.user_level_id;\n      });\n      return user_level_id[0];\n    }\n  }, {\n    key: \"onSearchLevelname\",\n    value: function onSearchLevelname(level_id) {\n      console.log('get myrole');\n      var myrole = this.state.role_data.filter(function (role) {\n        return role.user_level_id == level_id;\n      });\n      var user_level_name = myrole.map(function (role, index) {\n        return role.user_level_name;\n      }); //console.log('myrole:' + myrole);\n\n      return user_level_name;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.dialog.showAlert('Hello Dialog!');\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/users\");\n    }\n  }, {\n    key: \"onConfirmClick\",\n    value: function onConfirmClick() {\n      this.dialog.show({\n        title: 'Slot Admin confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(function () {\n          dialog.hide();\n        }), Dialog.OKAction(function () {})],\n        bsSize: 'small',\n        onHide: function onHide(dialog) {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user_enable, a, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.state.username !== \"\" && this.state.user_email !== \"\")) {\n                  _context.next = 20;\n                  break;\n                }\n\n                if (!(this.state.password === this.state.confirmpassword)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                this.setState({\n                  role: this.onSearchLevel(this.state.rolename)\n                });\n                console.log('role : ' + this.state.role);\n                user_enable = 0;\n\n                if (this.state.switch1) {\n                  user_enable = 1;\n                }\n\n                a = {};\n\n                if (this.state.password !== \"\") {\n                  a = {\n                    user_name: this.state.username,\n                    user_pass: this.state.password,\n                    user_email: this.state.user_email,\n                    user_level: this.state.role,\n                    user_status: user_enable,\n                    add_date: \"\",\n                    last_login: \"\"\n                  };\n                } else {\n                  a = {\n                    user_name: this.state.username,\n                    user_email: this.state.user_email,\n                    user_level: this.state.role,\n                    user_status: user_enable\n                  };\n                }\n\n                console.log('data update : ' + a.role);\n                _context.next = 12;\n                return ServiceUser.editUser(a, this.state.userid);\n\n              case 12:\n                res = _context.sent;\n                console.log('res : ' + res.data);\n\n                if (res.data.status === 2000) {\n                  console.log('Edit User Success!!!');\n                  this.dialog.show({\n                    title: 'Spiderbot information',\n                    body: 'Edit a user : ' + a.user_name + ' is successfully.',\n                    actions: [Dialog.OKAction(function () {\n                      //action('ok button was clicked!')()\n                      Router.push(\"/users\");\n                    })]\n                  });\n                } else {\n                  this.dialog.showAlert(res.data.message);\n                  this.setErrorMsg(res.data.msg);\n                }\n\n                _context.next = 18;\n                break;\n\n              case 17:\n                this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n\n              case 18:\n                _context.next = 21;\n                break;\n\n              case 20:\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n\n              case 21:\n                _context.next = 28;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](0);\n                this.dialog.showAlert(_context.t0);\n                console.error(\"An unexpected error happened occurred:\", _context.t0);\n                this.setErrorMsg(_context.t0.message);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 23]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rolename: e.target.value\n      });\n    }\n  }, {\n    key: \"handleToggleChange\",\n    value: function handleToggleChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        user_enable: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n\n      ServiceUser.listSystemRole().then(function (res) {\n        console.log(\"res data=>\" + res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n        console.log(\"status=>\" + status);\n\n        if (status === 2000) {\n          console.log(\"data :=>\" + JSON.stringify(data));\n\n          _this2.setState({\n            role_data: data\n          });\n\n          console.log(\"userid=>\" + _this2.state.userid);\n          ServiceUser.getUserFromId(_this2.state.userid).then(function (res) {\n            //console.log(\"res data=>\" + res.data);\n            var _res$data2 = res.data,\n                data = _res$data2.data,\n                status = _res$data2.status; //console.log(\"status=>\" + status);\n\n            if (status === 2000) {\n              //this.setState({ data: data });\n              console.log(\"edit data =>\" + JSON.stringify(data));\n              var _data$ = data[0],\n                  user_name = _data$.user_name,\n                  user_email = _data$.user_email,\n                  user_level = _data$.user_level,\n                  user_status = _data$.user_status;\n              console.log(\"user_name=>\" + user_name);\n              console.log(\"user_email=>\" + user_email);\n              console.log(\"user_level=>\" + user_level);\n              console.log(\"user_status=>\" + user_status);\n\n              _this2.setState({\n                username: user_name,\n                user_email: user_email,\n                rolename: _this2.onSearchLevelname(user_level),\n                switch1: Boolean(Number(user_status))\n              });\n            } else {\n              _this2.setErrorMsg(res.data.message);\n\n              _this2.dialog.showAlert(res.data.message);\n            }\n          });\n        } else {\n          //this.setErrorMsg(res.data.msg);\n          _this2.dialog.showAlert(res.data.message);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var element = __jsx(\"div\", {\n        className: \"toggle-switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        \"data-toggle\": \"toggle\",\n        \"data-on\": \"Ready\",\n        \"data-off\": \"Not Ready\",\n        \"data-onstyle\": \"success\",\n        \"data-offstyle\": \"danger\"\n      }));\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Edit User',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-user-plus\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"offset-md-0\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"form\", {\n        className: \"form-horizontal\"\n      }, __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Username\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Username\",\n        id: \"validation-ex1\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            username: e.target.value\n          });\n        },\n        value: this.state.username,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Email\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\",\n        placeholder: \"Email\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            user_email: e.target.value\n          });\n        },\n        value: this.state.user_email,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select user level\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-1\",\n        className: \"form-control\",\n        value: this.state.rolename,\n        onChange: this.handleSelectChange\n      }, this.state.role_data.map(function (data, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: data.user_level_name\n        }, data.user_level_name);\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Password\")), __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex3\",\n        placeholder: \"Password\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            password: e.target.value\n          });\n        },\n        value: this.state.password,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Confirm Password\")), __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex4\",\n        placeholder: \"Confirm Password\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            confirmpassword: e.target.value\n          });\n        },\n        value: this.state.confirmpassword,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"label\", {\n        \"class\": \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(1),\n        checked: this.state.switch1\n      }), __jsx(\"span\", {\n        \"class\": \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"d-inline-block btn-block\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn btn-info float-right\",\n        onClick: this.handleSubmit\n      }, \"Save\")))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this3.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return AddUser;\n}(React.Component);\n\nexport { AddUser as default };","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/users/edit.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceUser","Dialog","AddUser","props","nr","switchNumber","setState","state","auth","username","password","role","rolename","confirmpassword","errorMessage","datas","role_data","mydatas","value","user_enable","switch1","userid","get","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","onClick","onConfirmClick","handleResetSubmit","onSearchLevel","onSearchLevelname","level_name","console","log","myrole","filter","user_level_name","user_level_id","map","index","level_id","dialog","showAlert","push","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","user_email","a","user_name","user_pass","user_level","user_status","add_date","last_login","editUser","res","data","status","message","msg","error","e","target","listSystemRole","then","JSON","stringify","getUserFromId","Boolean","Number","element","url","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceUser } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            username: \"\",\r\n            password: \"\",\r\n            confirmpassword: \"\",\r\n            role: \"3\",\r\n            rolename: \"User\",\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"User\",\r\n            user_enable: true,\r\n            switch1: true,\r\n            userid: Cookies.get(\"userid\"),\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchLevelname = this.onSearchLevelname.bind(this);\r\n    }\r\n\r\n    onSearchLevel(level_name) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_name == level_name;\r\n        })\r\n\r\n        const user_level_id = myrole.map((role, index) => {\r\n            return role.user_level_id\r\n        })\r\n        return user_level_id[0];\r\n    }\r\n\r\n    onSearchLevelname(level_id) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_id == level_id;\r\n        })\r\n\r\n        const user_level_name = myrole.map((role, index) => {\r\n            return role.user_level_name\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return user_level_name;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/users\");\r\n    }\r\n\r\n    onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Slot Admin confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.username !== \"\" && this.state.user_email !== \"\") {\r\n                if (this.state.password === this.state.confirmpassword) {\r\n                    this.setState({ role: this.onSearchLevel(this.state.rolename) });\r\n                    console.log('role : ' + this.state.role);\r\n\r\n                    let user_enable = 0;\r\n                    if (this.state.switch1) {\r\n                        user_enable = 1;\r\n                    }\r\n                    let a = {};\r\n                    if (this.state.password !== \"\") {\r\n                        a = { user_name: this.state.username, user_pass: this.state.password, user_email: this.state.user_email, user_level: this.state.role, user_status: user_enable, add_date: \"\", last_login: \"\" };\r\n                    } else {\r\n                        a = { user_name: this.state.username, user_email: this.state.user_email, user_level: this.state.role, user_status: user_enable };\r\n                    }\r\n\r\n                    console.log('data update : ' + a.role);\r\n                    const res = await ServiceUser.editUser(a, this.state.userid);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Edit User Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Spiderbot information',\r\n                            body: 'Edit a user : ' + a.user_name + ' is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    //action('ok button was clicked!')()\r\n                                    Router.push(\"/users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceUser.listSystemRole().then((res) => {\r\n            console.log(\"res data=>\" + res.data);\r\n            const { data, status } = res.data;\r\n            console.log(\"status=>\" + status);\r\n            if (status === 2000) {\r\n                console.log(\"data :=>\" + JSON.stringify(data));\r\n                this.setState({ role_data: data });\r\n                console.log(\"userid=>\" + this.state.userid);\r\n                ServiceUser.getUserFromId(this.state.userid).then((res) => {\r\n                    //console.log(\"res data=>\" + res.data);\r\n                    const { data, status } = res.data;\r\n                    //console.log(\"status=>\" + status);\r\n                    if (status === 2000) {\r\n                        //this.setState({ data: data });\r\n                        console.log(\"edit data =>\" + JSON.stringify(data));\r\n                        const { user_name, user_email, user_level, user_status } = data[0];\r\n                        console.log(\"user_name=>\" + user_name);\r\n                        console.log(\"user_email=>\" + user_email);\r\n                        console.log(\"user_level=>\" + user_level);\r\n                        console.log(\"user_status=>\" + user_status);\r\n\r\n                        this.setState({ username: user_name, user_email: user_email, rolename: this.onSearchLevelname(user_level), switch1: Boolean(Number(user_status)) });\r\n\r\n                    } else {\r\n                        this.setErrorMsg(res.data.message);\r\n                        this.dialog.showAlert(res.data.message);\r\n                    }\r\n                });\r\n            } else {\r\n                //this.setErrorMsg(res.data.msg);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Edit User'} contentTitleButton={<i className=\"fa fa-2x fa-user-plus\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Username\"\r\n                                            id=\"validation-ex1\"\r\n                                            onChange={(e) => this.setState({ username: e.target.value })}\r\n                                            value={this.state.username}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Email</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            placeholder=\"Email\"\r\n                                            onChange={(e) => this.setState({ user_email: e.target.value })}\r\n                                            value={this.state.user_email}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select user level</label>\r\n                                <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                    <select id=\"select-1\" className=\"form-control\" value={this.state.rolename} onChange={this.handleSelectChange}>\r\n                                        {this.state.role_data.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} value={data.user_level_name}>{data.user_level_name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                                            value={this.state.password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Confirm Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            onChange={(e) => this.setState({ confirmpassword: e.target.value })}\r\n                                            value={this.state.confirmpassword}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
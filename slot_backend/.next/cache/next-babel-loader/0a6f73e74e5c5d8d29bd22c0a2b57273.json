{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class AddAgent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      agent_code: \"\",\n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      agent: \"\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      data_agent: [],\n      role: \"3\",\n      rolename: \"User\"\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.SearchAgent = this.SearchAgent.bind(this);\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code[0];\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    const agent_code = this.SearchAgent(e.target.value);\n    Cookies.set('_Agent', e.target.value);\n    this.setState({\n      agent_code: agent_code\n    });\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onSearchAgentCode(agent_name) {\n    console.log('get Agent Code');\n    const agents = this.state.agentdata.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agentCode = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agentCode;\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/agent_users\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\n        if (this.state.user_pass === this.state.confirmpassword) {\n          //const urole = this.onSearchLevel(this.state.rolename);\n          //this.setState({ user_level: urole,role: urole });\n          let user_status = 0;\n\n          if (this.state.switch1) {\n            user_status = 1;\n          }\n\n          const a = {\n            agent_code: this.state.agent_code,\n            user_name: this.state.user_name,\n            user_email: this.state.user_email,\n            user_pass: this.state.user_pass,\n            user_level: this.state.user_level,\n            user_status: user_status\n          };\n          const res = await ServiceUserAgent.createUserAgent(a);\n          console.log('res : ' + res.data);\n\n          if (res.data.status === 2000) {\n            console.log('Add User Agent Success!!!');\n            this.dialog.show({\n              title: 'Slot Admin information',\n              body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n              actions: [Dialog.OKAction(() => {\n                Router.push(\"/agent_users\");\n              })]\n            });\n          } else {\n            this.dialog.showAlert(res.data.message);\n            this.setErrorMsg(res.data.msg);\n          }\n        } else {\n          this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n    const v = this.onSearchLevel(e.target.value);\n    this.setState({\n      role: v,\n      user_level: v\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceUser.listSystemRole().then(res => {\n      console.log(\"res data=>\" + res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      console.log(\"status=>\" + status);\n\n      if (status === 2000) {\n        console.log(\"data :=>\" + data); //setUsers(data);\n\n        this.setState({\n          role_data: data\n        }); //console.log(\"data : \" + this.state.data);\n      } else {\n        //this.setErrorMsg(res.data.msg);\n        this.dialog.showAlert(res.data.message);\n      }\n    });\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      var data_service = [];\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        });\n\n        if (Cookies.get(\"_Agent\")) {\n          this.setState({\n            agent_code: this.SearchAgent(Cookies.get(\"_Agent\"))\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Add Agent Users',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-address-card\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Agent\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.agent,\n      onChange: this.handleSelectAgentChange\n    }, this.state.data_agent.map((agent, index) => {\n      return __jsx(\"option\", {\n        value: agent.agent_name,\n        key: index\n      }, agent.agent_name);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"agent code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        agent_code: e.target.value\n      }),\n      value: this.state.agent_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"user name\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"agent name\"\n      ,\n      onChange: e => this.setState({\n        user_name: e.target.value\n      }),\n      value: this.state.user_name,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"user email\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"agent detail\"\n      ,\n      onChange: e => this.setState({\n        user_email: e.target.value\n      }),\n      value: this.state.user_email,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"Password\"\n      ,\n      onChange: e => this.setState({\n        user_pass: e.target.value\n      }),\n      value: this.state.user_pass,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Confirm Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"Confirm Password\"\n      ,\n      onChange: e => this.setState({\n        confirmpassword: e.target.value\n      }),\n      value: this.state.confirmpassword,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select user level\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rolename,\n      onChange: this.handleSelectChange\n    }, this.state.role_data.map((data, index) => {\n      return __jsx(\"option\", {\n        key: index,\n        value: data.user_level_name\n      }, data.user_level_name);\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n//import \"../styles/styles.scss\"\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { useUser } from \"../components/functions/useUser\";\nimport { ServiceUser } from \"../service\";\nimport { ServiceImage } from \"../service\"; //import Dialog from 'react-bootstrap-dialog';\n\nexport default (() => {\n  useUser('/', true);\n  const {\n    0: auth,\n    1: setAuth\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    0: errorMessage,\n    1: setErrorMsg\n  } = useState(\"\");\n  const {\n    0: show,\n    1: setShow\n  } = useState(false); //let dialog;\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (errorMessage) setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceUser.login(auth);\n      console.log(\"login : \" + auth);\n\n      if (res.data.status === 2000) {\n        const {\n          data\n        } = res.data;\n        console.log(\"res data id=> \" + data.id);\n        Cookies.set(\"userid\", data.id);\n        Cookies.set(\"user\", auth.username);\n        const levelId = data.level;\n        ServiceUser.listSystemRole().then(res => {\n          console.log(res.data);\n          const {\n            data,\n            status\n          } = res.data;\n          const data_role = data;\n\n          if (status === 2000) {\n            ServiceUser.listMenu().then(res => {\n              console.log(res.data);\n              const {\n                data,\n                status\n              } = res.data;\n\n              if (status === 2000) {\n                var i;\n                var perm_arr = [];\n\n                for (i = 0; i < data_role.length; i++) {\n                  if (data_role[i].user_level_id == levelId) {\n                    console.log('user role : ' + data_role[i].user_level_name);\n                    console.log('user perm : ' + data_role[i].user_level_permission);\n                    var perm = data_role[i].user_level_permission;\n\n                    if (perm) {\n                      perm_arr = perm.split('-');\n                    }\n                  }\n                }\n\n                console.log('data length : ' + data.length);\n                console.log('perm length : ' + perm_arr.length);\n\n                if (data.length == perm_arr.length) {\n                  var j;\n\n                  for (j = 0; j < data.length; j++) {\n                    console.log('perm [' + j + ']: ' + Number(perm_arr[j]));\n                    Cookies.set(data[j].menu_name.split(' ').join(''), Number(perm_arr[j]));\n                    console.log('menu ' + data[j].menu_name.split(' ').join('') + ':' + Cookies.get(data[j].menu_name.split(' ').join('')));\n                  }\n                } else {\n                  var j;\n\n                  for (j = 0; j < data.length; j++) {\n                    if (j >= perm_arr.length) {\n                      Cookies.set(data[j].menu_name.split(' ').join(''), 0);\n                    } else {\n                      console.log('perm [' + j + ']: ' + Number(perm_arr[j]));\n                      Cookies.set(data[j].menu_name.split(' ').join(''), Number(perm_arr[j]));\n                      console.log('menu ' + data[j].menu_name.split(' ').join('') + ':' + Cookies.get(data[j].menu_name.split(' ').join('')));\n                    }\n                  }\n                }\n\n                console.log(\"go to admin page\");\n                Router.push(\"/admin\", {\n                  data: data\n                });\n              } else {\n                this.setErrorMsg(res.data.msg);\n              }\n            });\n          } else {\n            this.setErrorMsg(res.data.msg);\n          }\n        });\n      } else {\n        console.log(res);\n        setErrorMsg(res.data.message + '!!!');\n        setShow(true); //this.dialog.showAlert(res_role.data.msg);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      setErrorMsg(error.message); //this.dialog.showAlert(error.message);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"login\",\n    className: \"login\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    id: \"login-row\",\n    className: \"row justify-content-center align-items-center\"\n  }, __jsx(\"div\", {\n    id: \"login-column\",\n    className: \"col-md-6\"\n  }, __jsx(\"div\", {\n    id: \"login-box\",\n    className: \"col-md-12\"\n  }, __jsx(\"h1\", {\n    className: \"text-center text-white pt-5\"\n  }, \"BigWin\"), __jsx(\"div\", {\n    className: \"form-group text-center\"\n  }, __jsx(\"img\", {\n    src: ServiceImage.imageshow('backend_logo.png'),\n    id: \"icon\",\n    alt: \"User Icon\",\n    className: \"logo\"\n  }), __jsx(\"h3\", {\n    className: \"text-center text-white pt-0\"\n  }, \"Web Admin\")), __jsx(\"form\", {\n    id: \"login-form\",\n    className: \"form-group\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    className: \"form-control\",\n    placeholder: \"Username\",\n    onChange: e => {\n      setAuth({\n        username: e.target.value,\n        password: auth.password\n      });\n      setShow(false);\n    },\n    value: auth.username\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    onChange: e => {\n      setAuth({\n        password: e.target.value,\n        username: auth.username\n      });\n      setShow(false);\n    },\n    value: auth.password\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    name: \"submit\",\n    className: \"btn btn-info btn-md\",\n    defaultValue: \"submit\"\n  })), show ? __jsx(\"div\", {\n    className: \"p-3 mb-2 bg-danger text-white\"\n  }, errorMessage) : null)))))));\n});","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class AddUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      auth: {\n        username: \"\",\n        password: \"\",\n        role: \"3\",\n        rolename: \"User\"\n      },\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      role: \"3\",\n      rolename: \"User\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"User\",\n      user_enable: true,\n      switch1: true,\n      userid: Cookies.get(\"userid\")\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.onSearchLevelname = this.onSearchLevelname.bind(this);\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onSearchLevelname(level_id) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_id == level_id;\n    });\n    const user_level_name = myrole.map((role, index) => {\n      return role.user_level_name;\n    }); //console.log('myrole:' + myrole);\n\n    return user_level_name;\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/users\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Slot Admin confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.username !== \"\" && this.state.user_email !== \"\") {\n        if (this.state.password === this.state.confirmpassword) {\n          this.setState({\n            role: this.onSearchLevel(this.state.rolename)\n          });\n          console.log('role : ' + this.state.role);\n          let user_enable = 0;\n\n          if (this.state.switch1) {\n            user_enable = 1;\n          }\n\n          let a = {};\n\n          if (this.state.password !== \"\") {\n            a = {\n              user_name: this.state.username,\n              user_pass: this.state.password,\n              user_email: this.state.user_email,\n              user_level: this.state.role,\n              user_status: user_enable,\n              add_date: \"\",\n              last_login: \"\"\n            };\n          } else {\n            a = {\n              user_name: this.state.username,\n              user_email: this.state.user_email,\n              user_level: this.state.role,\n              user_status: user_enable\n            };\n          }\n\n          console.log('data update : ' + a.role);\n          const res = await ServiceUser.editUser(a, this.state.userid);\n          console.log('res : ' + res.data);\n\n          if (res.data.status === 2000) {\n            console.log('Edit User Success!!!');\n            this.dialog.show({\n              title: 'Spiderbot information',\n              body: 'Edit a user : ' + a.user_name + ' is successfully.',\n              actions: [Dialog.OKAction(() => {\n                //action('ok button was clicked!')()\n                Router.push(\"/users\");\n              })]\n            });\n          } else {\n            this.dialog.showAlert(res.data.message);\n            this.setErrorMsg(res.data.msg);\n          }\n        } else {\n          this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceUser.listSystemRole().then(res => {\n      console.log(\"res data=>\" + res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      console.log(\"status=>\" + status);\n\n      if (status === 2000) {\n        console.log(\"data :=>\" + JSON.stringify(data));\n        this.setState({\n          role_data: data\n        });\n        console.log(\"userid=>\" + this.state.userid);\n        ServiceUser.getUserFromId(this.state.userid).then(res => {\n          //console.log(\"res data=>\" + res.data);\n          const {\n            data,\n            status\n          } = res.data; //console.log(\"status=>\" + status);\n\n          if (status === 2000) {\n            //this.setState({ data: data });\n            console.log(\"edit data =>\" + JSON.stringify(data));\n            const {\n              user_name,\n              user_email,\n              user_level,\n              user_status\n            } = data[0];\n            console.log(\"user_name=>\" + user_name);\n            console.log(\"user_email=>\" + user_email);\n            console.log(\"user_level=>\" + user_level);\n            console.log(\"user_status=>\" + user_status);\n            this.setState({\n              username: user_name,\n              user_email: user_email,\n              rolename: this.onSearchLevelname(user_level),\n              switch1: Boolean(Number(user_status))\n            });\n          } else {\n            this.setErrorMsg(res.data.message);\n            this.dialog.showAlert(res.data.message);\n          }\n        });\n      } else {\n        //this.setErrorMsg(res.data.msg);\n        this.dialog.showAlert(res.data.message);\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Edit User',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-user-plus\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Username\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Username\",\n      id: \"validation-ex1\",\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      value: this.state.username,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Email\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\",\n      placeholder: \"Email\",\n      onChange: e => this.setState({\n        user_email: e.target.value\n      }),\n      value: this.state.user_email,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select user level\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rolename,\n      onChange: this.handleSelectChange\n    }, this.state.role_data.map((data, index) => {\n      return __jsx(\"option\", {\n        key: index,\n        value: data.user_level_name\n      }, data.user_level_name);\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex3\",\n      placeholder: \"Password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      value: this.state.password,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Confirm Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex4\",\n      placeholder: \"Confirm Password\",\n      onChange: e => this.setState({\n        confirmpassword: e.target.value\n      }),\n      value: this.state.confirmpassword,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/users/edit.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceUser","Dialog","AddUser","constructor","props","nr","switchNumber","setState","state","auth","username","password","role","rolename","confirmpassword","errorMessage","datas","role_data","mydatas","value","user_enable","switch1","userid","get","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","onClick","onConfirmClick","handleResetSubmit","onSearchLevel","onSearchLevelname","level_name","console","log","myrole","filter","user_level_name","user_level_id","map","index","level_id","dialog","showAlert","push","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","user_email","a","user_name","user_pass","user_level","user_status","add_date","last_login","res","editUser","data","status","message","msg","error","e","target","componentDidMount","listSystemRole","then","JSON","stringify","getUserFromId","Boolean","Number","render","element","url","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceUser } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            username: \"\",\r\n            password: \"\",\r\n            confirmpassword: \"\",\r\n            role: \"3\",\r\n            rolename: \"User\",\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"User\",\r\n            user_enable: true,\r\n            switch1: true,\r\n            userid: Cookies.get(\"userid\"),\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchLevelname = this.onSearchLevelname.bind(this);\r\n    }\r\n\r\n    onSearchLevel(level_name) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_name == level_name;\r\n        })\r\n\r\n        const user_level_id = myrole.map((role, index) => {\r\n            return role.user_level_id\r\n        })\r\n        return user_level_id[0];\r\n    }\r\n\r\n    onSearchLevelname(level_id) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_id == level_id;\r\n        })\r\n\r\n        const user_level_name = myrole.map((role, index) => {\r\n            return role.user_level_name\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return user_level_name;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/users\");\r\n    }\r\n\r\n    onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Slot Admin confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.username !== \"\" && this.state.user_email !== \"\") {\r\n                if (this.state.password === this.state.confirmpassword) {\r\n                    this.setState({ role: this.onSearchLevel(this.state.rolename) });\r\n                    console.log('role : ' + this.state.role);\r\n\r\n                    let user_enable = 0;\r\n                    if (this.state.switch1) {\r\n                        user_enable = 1;\r\n                    }\r\n                    let a = {};\r\n                    if (this.state.password !== \"\") {\r\n                        a = { user_name: this.state.username, user_pass: this.state.password, user_email: this.state.user_email, user_level: this.state.role, user_status: user_enable, add_date: \"\", last_login: \"\" };\r\n                    } else {\r\n                        a = { user_name: this.state.username, user_email: this.state.user_email, user_level: this.state.role, user_status: user_enable };\r\n                    }\r\n\r\n                    console.log('data update : ' + a.role);\r\n                    const res = await ServiceUser.editUser(a, this.state.userid);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Edit User Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Spiderbot information',\r\n                            body: 'Edit a user : ' + a.user_name + ' is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    //action('ok button was clicked!')()\r\n                                    Router.push(\"/users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceUser.listSystemRole().then((res) => {\r\n            console.log(\"res data=>\" + res.data);\r\n            const { data, status } = res.data;\r\n            console.log(\"status=>\" + status);\r\n            if (status === 2000) {\r\n                console.log(\"data :=>\" + JSON.stringify(data));\r\n                this.setState({ role_data: data });\r\n                console.log(\"userid=>\" + this.state.userid);\r\n                ServiceUser.getUserFromId(this.state.userid).then((res) => {\r\n                    //console.log(\"res data=>\" + res.data);\r\n                    const { data, status } = res.data;\r\n                    //console.log(\"status=>\" + status);\r\n                    if (status === 2000) {\r\n                        //this.setState({ data: data });\r\n                        console.log(\"edit data =>\" + JSON.stringify(data));\r\n                        const { user_name, user_email, user_level, user_status } = data[0];\r\n                        console.log(\"user_name=>\" + user_name);\r\n                        console.log(\"user_email=>\" + user_email);\r\n                        console.log(\"user_level=>\" + user_level);\r\n                        console.log(\"user_status=>\" + user_status);\r\n\r\n                        this.setState({ username: user_name, user_email: user_email, rolename: this.onSearchLevelname(user_level), switch1: Boolean(Number(user_status)) });\r\n\r\n                    } else {\r\n                        this.setErrorMsg(res.data.message);\r\n                        this.dialog.showAlert(res.data.message);\r\n                    }\r\n                });\r\n            } else {\r\n                //this.setErrorMsg(res.data.msg);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Edit User'} contentTitleButton={<i className=\"fa fa-2x fa-user-plus\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\"\r\n                                            placeholder=\"Username\"\r\n                                            id=\"validation-ex1\"\r\n                                            onChange={(e) => this.setState({ username: e.target.value })}\r\n                                            value={this.state.username}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Email</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            placeholder=\"Email\"\r\n                                            onChange={(e) => this.setState({ user_email: e.target.value })}\r\n                                            value={this.state.user_email}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select user level</label>\r\n                                <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                    <select id=\"select-1\" className=\"form-control\" value={this.state.rolename} onChange={this.handleSelectChange}>\r\n                                        {this.state.role_data.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} value={data.user_level_name}>{data.user_level_name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                                            value={this.state.password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Confirm Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            onChange={(e) => this.setState({ confirmpassword: e.target.value })}\r\n                                            value={this.state.confirmpassword}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
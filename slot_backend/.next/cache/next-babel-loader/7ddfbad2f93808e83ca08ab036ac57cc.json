{"ast":null,"code":"var __jsx = React.createElement;\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies, { getJSON } from \"js-cookie\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\nexport default class Brand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: [],\n      rawdata: [],\n      errorMessage: \"\",\n      role_data: [],\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\"\n    };\n    this.deleteBrand = this.deleteBrand.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this); //this.onClick = this.onClick.bind(this);\n    //this.onConfirmClick = this.onConfirmClick.bind(this);\n\n    this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\n    this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this); //this.onSearchLevel = this.onSearchLevel.bind(this);\n  }\n  /* onSearchLevel(level_id) {\r\n      console.log('get myrole');\r\n      const myrole = this.state.role_data.filter((role) => {\r\n          return role.user_level_id == level_id;\r\n      })\r\n        const user_level_name = myrole.map((role, index) => {\r\n          return role.user_level_name\r\n      })\r\n      //console.log('myrole:' + myrole);\r\n      return user_level_name;\r\n  } */\n\n  /* onClick() {\r\n      this.dialog.showAlert('Hello Dialog!')\r\n  } */\n\n  /* onConfirmClick() {\r\n      this.dialog.show({\r\n          title: 'Spiderbot confirm',\r\n          body: 'Are you sure?',\r\n          actions: [\r\n              Dialog.CancelAction(() => {\r\n                  this.dialog.hide();\r\n              }),\r\n              Dialog.OKAction(() => {\r\n                })\r\n          ],\r\n          bsSize: 'small',\r\n          onHide: (dialog) => {\r\n              this.dialog.hide()\r\n              console.log('closed by clicking background.')\r\n          }\r\n      })\r\n  } */\n\n  /* fetchUsers() {\r\n      console.log(\"fetchUsers\");\r\n      ServiceUser.listUserrole().then((res) => {\r\n          console.log(res.data);\r\n          const { data, status } = res.data;\r\n          if (status === 2000) {\r\n              console.log(data);\r\n              //setUsers(data);\r\n              this.state.data = data;\r\n          } else {\r\n              setErrorMsg(res.data.msg);\r\n          }\r\n      });\r\n  } */\n\n  /* clickButton() {\r\n      Router.push(\"/user/create\");\r\n  } */\n\n\n  async deleteBrand(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceBrand.deleteBrands(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete brand successfully.');\n        this.setState({\n          data: this.state.data.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  onSearchClick() {\n    var name = this.state.searchtxt;\n    var datalength = this.state.rawdata.length;\n\n    if (name != \"\") {\n      this.setState({\n        data: this.state.rawdata.filter(brand => {\n          return brand.brand_name.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata.filter(brand => {\n        return brand.brand_name.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data: this.state.rawdata\n      });\n    }\n\n    var page_remain = Math.floor(datalength / this.state.rowperpage);\n    var num = datalength % this.state.rowperpage;\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      recordtotal: datalength,\n      pagetotal: page_remain,\n      pagenumber: pagenum,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data: data\n        });\n        this.setState({\n          rawdata: data\n        });\n        var page_remain = Math.floor(data.length / this.state.rowperpage);\n        var num = data.length % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: data.length,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  setErrorMsg(msg) {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  handleSelectRowPerPageChange(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data: this.state.data,\n      pagetotal: page_remain,\n      pagenumber: 1,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Game Brand',\n      contentTitleButton: __jsx(Link, {\n        href: \"/game_bands/add\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\"\n      }, __jsx(\"i\", {\n        className: \"fa fa fa-cubes fa-fw\"\n      }), \" Add a new brand\")),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage,\n      onChange: this.handleSelectRowPerPageChange\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber,\n      onChange: this.handleSelectPageNumberChange\n    }, this.state.pagearr.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search\",\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value; //console.log(name);\n\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          //console.log('rawdata' + JSON.stringify(this.state.rawdata));\n          this.setState({\n            data: this.state.rawdata.filter(data => {\n              return data.brand_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(data => {\n            return data.brand_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\n        var num = datalength % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: datalength,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      },\n      value: this.state.searchtxt\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Stauts\"), __jsx(\"th\", null, \"Img\"), __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Key\"), __jsx(\"th\", null, \"Play URL\"), __jsx(\"th\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, \"AddGame / Edit / Delete\"))), __jsx(\"tbody\", null, this.state.data.map((brand, index) => {\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (brand.brand_status === '1') {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) {\n        //console.log(\"userid\" + user.id);\n        let tr_class = 'success';\n\n        if (index % 2 > 0) {\n          tr_class = 'warning';\n        }\n\n        return __jsx(\"tr\", {\n          key: index,\n          className: tr_class\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"label\", {\n          className: `badge badge-${classBadge}`\n        }, mystatus)), __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"img\", {\n          src: brand.brand_img ? ServiceImage.imageshow(brand.brand_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n          style: {\n            flex: 1,\n            width: \"100px\",\n            height: null,\n            resizeMode: 'contain'\n          }\n        })), __jsx(\"td\", {\n          className: \"py-1\"\n        }, brand.brand_code), __jsx(\"td\", {\n          className: \"py-1\"\n        }, brand.brand_name), __jsx(\"td\", {\n          className: \"py-1\"\n        }, brand.brand_key), __jsx(\"td\", {\n          className: \"py-1\"\n        }, brand.play_url), __jsx(\"td\", {\n          className: \"py-1\",\n          style: {\n            textAlign: \"right\"\n          }\n        }, __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info btn-icon-text\",\n          onClick: () => {\n            console.log(\"Add Game in Brand name:\" + brand.brand_name);\n            Cookies.set(\"brand\", brand.brand_name);\n            Router.push(\"/game_lists/add\");\n          } //onClick={this.onClick}\n\n        }, \"Add Game\"), \"\\xA0\", __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning btn-icon-text\",\n          onClick: () => {\n            console.log(\"edit Brand id:\" + brand._id);\n            Cookies.set(\"brandId\", brand._id);\n            Router.push(\"/game_bands/edit\");\n          } //onClick={this.onClick}\n\n        }, \"Edit\"), __jsx(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            this.dialog.show({\n              title: 'Slot Admin confirm',\n              body: 'Are you sure?',\n              actions: [Dialog.CancelAction(() => {\n                this.dialog.hide();\n              }), Dialog.OKAction(() => {\n                console.log(\"delete Brand id:\" + brand._id);\n                this.deleteBrand(brand._id);\n              })],\n              bsSize: 'small',\n              onHide: dialog => {\n                this.dialog.hide();\n                console.log('closed by clicking background.');\n              }\n            });\n          },\n          style: {\n            marginLeft: 5\n          },\n          className: \"btn btn-danger btn-icon-text\"\n        }, \"Delete\")));\n      }\n    })))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/game_bands/index.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Router","Cookies","getJSON","ServiceBrand","ServiceImage","Dialog","MDBContainer","Brand","Component","constructor","props","state","isLoading","data","rawdata","errorMessage","role_data","pagetotal","pagenumber","recordtotal","rowperpage","pagearr","startrow","endrow","searchtxt","deleteBrand","bind","setErrorMsg","handleSelectRowPerPageChange","handleSelectPageNumberChange","onSearchClick","id","res","deleteBrands","status","console","log","setState","filter","brand","_id","message","dialog","showAlert","error","name","datalength","length","brand_name","indexOf","page_remain","Math","floor","num","arr","i","push","pagenum","componentDidMount","get","listBrands","then","msg","e","preventDefault","target","value","forceUpdate","render","url","map","p","index","width","textAlign","classBadge","mystatus","brand_status","tr_class","brand_img","imageshow","flex","height","resizeMode","brand_code","brand_key","play_url","set","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","marginLeft","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies, { getJSON } from \"js-cookie\";\r\nimport { ServiceBrand } from \"../../service\";\r\nimport { ServiceImage } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nimport { MDBContainer } from 'mdbreact';\r\n\r\nexport default class Brand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            rawdata: [],\r\n            errorMessage: \"\",\r\n\r\n            role_data: [],\r\n\r\n            pagetotal: 0,\r\n            pagenumber: 0,\r\n            recordtotal: 0,\r\n            rowperpage: 10,\r\n            pagearr: [],\r\n            startrow: 0,\r\n            endrow: 0,\r\n            searchtxt: \"\",\r\n\r\n        };\r\n        this.deleteBrand = this.deleteBrand.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        //this.onClick = this.onClick.bind(this);\r\n        //this.onConfirmClick = this.onConfirmClick.bind(this);\r\n\r\n        this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\r\n        this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\r\n\r\n\r\n        this.onSearchClick = this.onSearchClick.bind(this);\r\n\r\n        //this.onSearchLevel = this.onSearchLevel.bind(this);\r\n    }\r\n\r\n    /* onSearchLevel(level_id) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_id == level_id;\r\n        })\r\n\r\n        const user_level_name = myrole.map((role, index) => {\r\n            return role.user_level_name\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return user_level_name;\r\n    } */\r\n\r\n    /* onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    } */\r\n\r\n    /* onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Spiderbot confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    this.dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                this.dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    } */\r\n\r\n\r\n    /* fetchUsers() {\r\n        console.log(\"fetchUsers\");\r\n        ServiceUser.listUserrole().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(data);\r\n                //setUsers(data);\r\n                this.state.data = data;\r\n            } else {\r\n                setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n    } */\r\n\r\n    /* clickButton() {\r\n        Router.push(\"/user/create\");\r\n    } */\r\n\r\n    async deleteBrand(id) {\r\n        if (this.state.errorMessage) this.setErrorMsg(\"\");\r\n        try {\r\n            const res = await ServiceBrand.deleteBrands(id);\r\n            if (res.data.status === 2000) {\r\n                console.log('delete brand successfully.');\r\n                this.setState({\r\n                    data: this.state.data.filter((brand) => {\r\n                        return brand._id !== id;\r\n                    })\r\n                });\r\n                this.setState({\r\n                    rawdata: this.state.rawdata.filter((brand) => {\r\n                        return brand._id !== id;\r\n                    })\r\n                });\r\n            } else {\r\n                this.setErrorMsg(res.data.message);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n            this.dialog.showAlert(error);\r\n        }\r\n    }\r\n\r\n    onSearchClick() {\r\n         var name = this.state.searchtxt;\r\n         var datalength = this.state.rawdata.length;\r\n         if (name != \"\") {\r\n             this.setState({\r\n                 data: this.state.rawdata.filter((brand) => {\r\n                     return brand.brand_name.indexOf(name) !== -1;\r\n                 })\r\n             });\r\n             datalength = this.state.rawdata.filter((brand) => {\r\n                 return brand.brand_name.indexOf(name) !== -1;\r\n             }).length;\r\n         } else {\r\n             this.setState({\r\n                 data: this.state.rawdata\r\n             });\r\n         }\r\n \r\n         var page_remain = Math.floor(datalength / this.state.rowperpage);\r\n         var num = datalength % this.state.rowperpage;\r\n         if (num > 0) {\r\n             page_remain++;\r\n         }\r\n \r\n         var arr = [];\r\n         var i;\r\n         for (i = 0; i < page_remain; i++) {\r\n             arr.push(i + 1);\r\n         }\r\n         var pagenum = 1;\r\n         var startrow = (pagenum - 1) * this.state.rowperpage;\r\n         var endrow = startrow + this.state.rowperpage;\r\n         this.setState({ recordtotal: datalength, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n     } \r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data: data });\r\n                this.setState({ rawdata: data });\r\n\r\n                var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                var num = data.length % this.state.rowperpage;\r\n                if (num > 0) {\r\n                    page_remain++;\r\n                }\r\n\r\n                var arr = [];\r\n                var i;\r\n                for (i = 0; i < page_remain; i++) {\r\n                    arr.push(i + 1);\r\n                }\r\n                var pagenum = 1;\r\n                var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                var endrow = startrow + this.state.rowperpage;\r\n                this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    handleSelectRowPerPageChange(e) {\r\n        e.preventDefault();\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rowperpage: e.target.value });\r\n        var page_remain = Math.floor(this.state.recordtotal / e.target.value);\r\n        console.log(\"pagetotal : \" + page_remain);\r\n        var num = this.state.recordtotal % e.target.value;\r\n        console.log(\"num : \" + num);\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        console.log(\"arr : \" + arr);\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * e.target.value;\r\n        var endrow = startrow + e.target.value;\r\n        this.setState({ pagearr: [] });\r\n        console.log(\"startrow : \" + startrow);\r\n        console.log(\"endrow : \" + endrow);\r\n        this.setState({ data: this.state.data, pagetotal: page_remain, pagenumber: 1, pagearr: arr, startrow: startrow, endrow: endrow });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSelectPageNumberChange(e) {\r\n        e.preventDefault();\r\n        this.setState({ pagenumber: e.target.value });\r\n        var pagenum = e.target.value;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n        var endrow = startrow + this.state.rowperpage;\r\n        this.setState({ startrow: startrow, endrow: endrow });\r\n    }\r\n\r\n    render() {\r\n        return <AdminLayoutHoc\r\n            contentTitle={'Game Brand'}\r\n            contentTitleButton={<Link href=\"/game_bands/add\">\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm\"><i className=\"fa fa fa-cubes fa-fw\" /> Add a new brand</button>\r\n            </Link>}\r\n            url={this.props.url}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {/* <h3 className=\"card-title\">Current users</h3> */}\r\n                            <MDBContainer>\r\n                                <div className=\"wrapper\">\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Row per page\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.rowperpage} onChange={this.handleSelectRowPerPageChange}>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='35'>35</option>\r\n                                            <option value='40'>40</option>\r\n                                            <option value='45'>45</option>\r\n                                            <option value='50'>50</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        PageNumber\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.pagenumber} onChange={this.handleSelectPageNumberChange}>\r\n                                            {\r\n                                                this.state.pagearr.map((p, index) => {\r\n                                                    return (\r\n                                                        <option value={p} key={index}>{p}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"card-tools d-inline-block\">\r\n                                        <div className=\"input-group input-group-sm\" style={{ width: '100%' }}>\r\n                                            <input type=\"text\" name=\"table_search\"\r\n                                                className=\"form-control float-right\"\r\n                                                placeholder=\"Search\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ searchtxt: e.target.value });\r\n                                                    var name = e.target.value;\r\n                                                    //console.log(name);\r\n                                                    var datalength = this.state.rawdata.length;\r\n                                                    if (name != \"\") {\r\n                                                        //console.log('rawdata' + JSON.stringify(this.state.rawdata));\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata.filter((data) => {\r\n                                                                return data.brand_name.indexOf(name) !== -1;\r\n                                                            })\r\n                                                        });\r\n                                                        datalength = this.state.rawdata.filter((data) => {\r\n                                                            return data.brand_name.indexOf(name) !== -1;\r\n                                                        }).length;\r\n                                                    } else {\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata\r\n                                                        });\r\n                                                    }\r\n\r\n                                                    var page_remain = Math.floor(datalength / this.state.rowperpage);\r\n                                                    var num = datalength % this.state.rowperpage;\r\n                                                    if (num > 0) {\r\n                                                        page_remain++;\r\n                                                    }\r\n\r\n                                                    var arr = [];\r\n                                                    var i;\r\n                                                    for (i = 0; i < page_remain; i++) {\r\n                                                        arr.push(i + 1);\r\n                                                    }\r\n                                                    var pagenum = 1;\r\n                                                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                                                    var endrow = startrow + this.state.rowperpage;\r\n                                                    this.setState({ recordtotal: datalength, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                                                }}\r\n                                                value={this.state.searchtxt} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-default\"><i className=\"fa fa-search\" onClick={this.onSearchClick} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBContainer>\r\n\r\n                        </div>\r\n                        <div className=\"card-body table-responsive p-0\">\r\n                            <table className=\"table table-hover\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th>Stauts</th>\r\n                                        <th>Img</th>\r\n                                        <th>Code</th>\r\n                                        <th>Name</th>\r\n                                        {/* <th>Banner</th> */}\r\n                                        <th>Key</th>\r\n                                        <th>Play URL</th>\r\n                                        <th style={{ textAlign: \"right\" }}>AddGame / Edit / Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.data.map((brand, index) => {\r\n                                        let classBadge = 'danger';\r\n                                        let mystatus = 'disable';\r\n                                        if (brand.brand_status === '1') {\r\n                                            classBadge = 'success';\r\n                                            mystatus = 'enable';\r\n                                        }\r\n                                        if (index >= this.state.startrow && index < this.state.endrow) {\r\n                                            //console.log(\"userid\" + user.id);\r\n                                            let tr_class= 'success';\r\n                                            if (index%2>0) {\r\n                                                tr_class= 'warning'\r\n                                            }\r\n                                            return (\r\n                                                <tr key={index} className={tr_class}>\r\n                                                    <td className=\"py-1\"><label className={`badge badge-${classBadge}`}>{mystatus}</label></td>\r\n                                                    <td className=\"py-1\">\r\n                                                        <img\r\n                                                            src={brand.brand_img ? ServiceImage.imageshow(brand.brand_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\")}\r\n                                                            style={{flex: 1,\r\n                                                                width: \"100px\", \r\n                                                                height: null, \r\n                                                                resizeMode: 'contain' }} \r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">{brand.brand_code}</td>\r\n                                                    <td className=\"py-1\">{brand.brand_name}</td>\r\n                                                    {/* <td className=\"py-1\">{brand.brand_banner}</td> */}\r\n                                                    <td className=\"py-1\">{brand.brand_key}</td>\r\n                                                    <td className=\"py-1\">{brand.play_url}</td>\r\n                                                    <td className=\"py-1\" style={{ textAlign: \"right\" }}>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-info btn-icon-text\"\r\n                                                            onClick={() => {\r\n                                                                console.log(\"Add Game in Brand name:\" + brand.brand_name);\r\n                                                                Cookies.set(\"brand\", brand.brand_name);\r\n                                                                Router.push(\"/game_lists/add\");\r\n                                                            }}\r\n\r\n                                                        //onClick={this.onClick}\r\n                                                        >\r\n                                                            Add Game\r\n                                                        </button>&nbsp;\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-warning btn-icon-text\"\r\n                                                            onClick={() => {\r\n                                                                console.log(\"edit Brand id:\" + brand._id);\r\n                                                                Cookies.set(\"brandId\", brand._id);\r\n                                                                Router.push(\"/game_bands/edit\");\r\n\r\n                                                            }}\r\n                                                        //onClick={this.onClick}\r\n                                                        >\r\n                                                            Edit\r\n                                                        </button>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => {\r\n                                                                this.dialog.show({\r\n                                                                    title: 'Slot Admin confirm',\r\n                                                                    body: 'Are you sure?',\r\n                                                                    actions: [\r\n                                                                        Dialog.CancelAction(() => {\r\n                                                                            this.dialog.hide();\r\n                                                                        }),\r\n                                                                        Dialog.OKAction(() => {\r\n                                                                            console.log(\"delete Brand id:\" + brand._id);\r\n                                                                            this.deleteBrand(brand._id);\r\n                                                                        })\r\n                                                                    ],\r\n                                                                    bsSize: 'small',\r\n                                                                    onHide: (dialog) => {\r\n                                                                        this.dialog.hide()\r\n                                                                        console.log('closed by clicking background.')\r\n                                                                    }\r\n                                                                })\r\n                                                            }}\r\n                                                            style={{ marginLeft: 5 }}\r\n                                                            className=\"btn btn-danger btn-icon-text\"\r\n                                                        >\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n\r\n        </AdminLayoutHoc>\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}
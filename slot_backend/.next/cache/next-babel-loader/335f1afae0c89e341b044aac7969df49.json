{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\"; //import '../styles/styles.scss';\n\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceGameService } from \"../../service\";\nimport { ServiceAgent } from \"../../service\";\nimport { ServiceGameList } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\n\nvar Description = /*#__PURE__*/function (_React$Component) {\n  _inherits(Description, _React$Component);\n\n  var _super = _createSuper(Description);\n\n  function Description(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, Description);\n\n    _this = _super.call(this, props);\n    _this.state = (_this$state = {\n      id: Cookies.get(\"serid\"),\n      ser_code: \"\",\n      brand_code: \"\",\n      agent_code: \"\",\n      ser_api_key: \"\",\n      ser_api_secret: \"\",\n      ser_api_username: \"\",\n      ser_api_password: \"\",\n      //1=enable , 0=disable\n      startpass_string: \"\",\n      startuser_string: \"\",\n      ser_date: \"\",\n      ser_status: \"\",\n      user_process: \"\",\n      ser_percent: \"\",\n      ser_comm: \"\",\n      last_turn_date: \"\",\n      last_turn_hour: \"\",\n\n      /* agent_code: \"\",\r\n      agent_lineup: \"\",\r\n      agent_name: \"\",\r\n      agent_detail: \"\",\r\n      agent_website: \"\",\r\n      agent_master: \"Master\",\r\n      agent_type: \"\", // Master or Agent\r\n      agent_percent: \"\",\r\n      agent_percent_aff: \"\",\r\n      agent_percent_aff2: \"\",\r\n      agent_percent_aff3: \"\",\r\n      agent_percent_aff4: \"\",\r\n      agent_percent_aff5: \"\",\r\n      agent_comm: \"\",\r\n      agent_line_ad: \"\",\r\n      agent_line_token1: \"\",\r\n      agent_line_token2: \"\",\r\n      agent_line_token3: \"\",\r\n      agent_api_user: \"\",\r\n      agent_api_password: \"\",\r\n      agent_api_key: \"\",\r\n      withdraw_auto: \"\",\r\n      agent_status: \"\", //1=enable , 0=disable */\n\n      /* , created_at: \"\", userFake: \"\", ref: \"\", message: \"\",\r\n      status: \"\", web_name: \"\", url: \"\", api: \"\", imei: \"\", description: \"\", name: \"\",\r\n      mobile_number: \"\", save_place: \"\", mobile_status: \"\", */\n      errorMessage: \"\",\n      data: [],\n      classBadge: \"danger\",\n      servicestatus: 'Off',\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\"\n    }, _defineProperty(_this$state, \"data\", []), _defineProperty(_this$state, \"rawdata\", []), _defineProperty(_this$state, \"serid\", Cookies.get('serid')), _this$state);\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this)); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    /* this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setErrorMsg = this.setErrorMsg.bind(this);\r\n      this.onClick = this.onClick.bind(this);\r\n    this.onConfirmClick = this.onConfirmClick.bind(this) */\n\n    return _this;\n  }\n  /* onClick() {\r\n      this.dialog.showAlert('Hello Dialog!')\r\n  } */\n\n\n  _createClass(Description, [{\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/game_service\");\n    }\n  }, {\n    key: \"getGamelistFromBrand\",\n    value: function getGamelistFromBrand(Brand) {\n      var _this2 = this;\n\n      ServiceGameList.listGamesFromBrand(Brand).then(function (res) {\n        console.log(res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n\n        if (status === 2000) {\n          console.log(\"data game list length : \" + data.length);\n\n          _this2.setState({\n            data: data\n          });\n\n          _this2.setState({\n            rawdata: data\n          });\n\n          var page_remain = Math.floor(data.length / _this2.state.rowperpage);\n          var num = data.length % _this2.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * _this2.state.rowperpage;\n          var endrow = startrow + _this2.state.rowperpage;\n\n          _this2.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          _this2.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }, {\n    key: \"handleSelectRowPerPageChange\",\n    value: function handleSelectRowPerPageChange(e) {\n      e.preventDefault();\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rowperpage: e.target.value\n      });\n      var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n      console.log(\"pagetotal : \" + page_remain);\n      var num = this.state.recordtotal % e.target.value;\n      console.log(\"num : \" + num);\n\n      if (num > 0) {\n        page_remain++;\n      }\n\n      var arr = [];\n      var i;\n\n      for (i = 0; i < page_remain; i++) {\n        arr.push(i + 1);\n      }\n\n      console.log(\"arr : \" + arr);\n      var pagenum = 1;\n      var startrow = (pagenum - 1) * e.target.value;\n      var endrow = startrow + e.target.value;\n      this.setState({\n        pagearr: []\n      });\n      console.log(\"startrow : \" + startrow);\n      console.log(\"endrow : \" + endrow);\n      this.setState({\n        data: this.state.data,\n        pagetotal: page_remain,\n        pagenumber: 1,\n        pagearr: arr,\n        startrow: startrow,\n        endrow: endrow\n      });\n      this.forceUpdate();\n    }\n  }, {\n    key: \"handleSelectPageNumberChange\",\n    value: function handleSelectPageNumberChange(e) {\n      e.preventDefault();\n      this.setState({\n        pagenumber: e.target.value\n      });\n      var pagenum = e.target.value;\n      var startrow = (pagenum - 1) * this.state.rowperpage;\n      var endrow = startrow + this.state.rowperpage;\n      this.setState({\n        startrow: startrow,\n        endrow: endrow\n      });\n    }\n  }, {\n    key: \"onConfirmClick\",\n    value: function onConfirmClick() {\n      this.dialog.show({\n        title: 'Spiderbot confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(function () {\n          dialog.hide();\n        }), Dialog.OKAction(function () {})],\n        bsSize: 'small',\n        onHide: function onHide(dialog) {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    }\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rolename: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n\n      ServiceGameService.getService(this.state.id).then(function (res) {\n        console.log(res.data);\n        var _res$data2 = res.data,\n            data = _res$data2.data,\n            status = _res$data2.status;\n\n        if (status === 2000) {\n          var _data$ = data[0],\n              ser_code = _data$.ser_code,\n              brand_code = _data$.brand_code,\n              agent_code = _data$.agent_code,\n              ser_api_key = _data$.ser_api_key,\n              ser_api_secret = _data$.ser_api_secret,\n              ser_api_username = _data$.ser_api_username,\n              ser_api_password = _data$.ser_api_password,\n              startpass_string = _data$.startpass_string,\n              startuser_string = _data$.startuser_string,\n              ser_date = _data$.ser_date,\n              user_process = _data$.user_process,\n              ser_percent = _data$.ser_percent,\n              ser_comm = _data$.ser_comm,\n              last_turn_date = _data$.last_turn_date,\n              last_turn_hour = _data$.last_turn_hour,\n              ser_status = _data$.ser_status;\n          var m_ser_percent = '0',\n              m_ser_comm = '0';\n\n          if (ser_percent != '') {\n            m_ser_percent = ser_percent.$numberDecimal;\n          }\n\n          if (ser_comm != '') {\n            m_ser_comm = ser_comm.$numberDecimal;\n          }\n\n          _this3.setState({\n            ser_code: ser_code,\n            brand_code: brand_code,\n            agent_code: agent_code,\n            ser_api_key: ser_api_key,\n            ser_api_secret: ser_api_secret,\n            ser_api_username: ser_api_username,\n            ser_api_password: ser_api_password,\n            startpass_string: startpass_string,\n            startuser_string: startuser_string,\n            ser_date: ser_date,\n            user_process: user_process,\n            ser_percent: m_ser_percent,\n            ser_comm: m_ser_comm,\n            last_turn_date: last_turn_date,\n            last_turn_hour: last_turn_hour,\n            ser_status: ser_status\n          });\n\n          var brand_name = Cookies.get('ser_brandname');\n          console.log('brand name 417=> ' + brand_name);\n\n          _this3.setState({\n            brand: brand_name\n          }); //console.log('brand name 417=> ' + brand_name);\n\n\n          _this3.getGamelistFromBrand(brand_name);\n\n          if (ser_status == 'On') {\n            _this3.setState({\n              classBadge: \"success\",\n              servicestatus: \"On\"\n            });\n          } else {\n            _this3.setState({\n              classBadge: \"danger\",\n              servicestatus: \"Off\"\n            });\n          }\n          /* if (ser_status == \"On\") {\r\n              this.setState({ switch1: true });\r\n          } else {\r\n              this.setState({ switch1: false });\r\n          } */\n\n        } else {\n          _this3.setErrorMsg(res.data.msg);\n\n          Router.push(\"/game_service\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Agent Description',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-id-badge\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"col-6\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"div\", {\n        className: \"col-12\"\n      }, __jsx(\"div\", {\n        className: \"card-body table-responsive p-0\"\n      }, __jsx(\"table\", {\n        className: \"table table-hover \"\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(\"h5\", null, \"ITEMS\")), __jsx(\"th\", null, __jsx(\"h5\", null, \"DESCRIPTION\")))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service Status\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"label\", {\n        className: \"badge badge-\".concat(this.state.classBadge)\n      }, this.state.ser_status), \" \")), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1 \"\n      }, __jsx(\"h5\", null, \"Brand code\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.brand_code)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Agent Code\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.agent_code)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service API Key\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_api_key)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service API Secret\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_api_secret)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service API Username\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_api_username)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service API Password\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_api_password)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Start User String\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.startuser_string)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Start Password String\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.startpass_string)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"User Process\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.user_process)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service Percent\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_percent)), __jsx(\"tr\", null, __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"h5\", null, \"Service Commission\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.state.ser_comm)))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"bt-tb-page\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger w-25\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"))))), __jsx(\"div\", {\n        className: \"col-6\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }, __jsx(MDBContainer, null, __jsx(\"div\", {\n        className: \"wrapper\"\n      }, __jsx(\"h4\", null, \" Games List for brand : \", this.state.brand, \" \"), __jsx(\"div\", {\n        className: \"wrapper\"\n      }, __jsx(\"div\", {\n        className: \"w-auto h-25 p-3  d-inline-block\"\n      }, \"Row per page\", __jsx(\"select\", {\n        id: \"select-1\",\n        className: \"form-control\",\n        value: this.state.rowperpage,\n        onChange: this.handleSelectRowPerPageChange\n      }, __jsx(\"option\", {\n        value: \"10\"\n      }, \"10\"), __jsx(\"option\", {\n        value: \"15\"\n      }, \"15\"), __jsx(\"option\", {\n        value: \"20\"\n      }, \"20\"), __jsx(\"option\", {\n        value: \"25\"\n      }, \"25\"), __jsx(\"option\", {\n        value: \"30\"\n      }, \"30\"), __jsx(\"option\", {\n        value: \"35\"\n      }, \"35\"), __jsx(\"option\", {\n        value: \"40\"\n      }, \"40\"), __jsx(\"option\", {\n        value: \"45\"\n      }, \"45\"), __jsx(\"option\", {\n        value: \"50\"\n      }, \"50\"))), __jsx(\"div\", {\n        className: \"w-auto h-25 p-3  d-inline-block\"\n      }, \"PageNumber\", __jsx(\"select\", {\n        id: \"select-1\",\n        className: \"form-control\",\n        value: this.state.pagenumber,\n        onChange: this.handleSelectPageNumberChange\n      }, this.state.pagearr.map(function (p, index) {\n        return __jsx(\"option\", {\n          value: p,\n          key: index\n        }, p);\n      }))), __jsx(\"div\", {\n        className: \"card-tools d-inline-block\"\n      }, __jsx(\"div\", {\n        className: \"input-group input-group-sm\",\n        style: {\n          width: '100%'\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        name: \"table_search\",\n        className: \"form-control float-right\",\n        placeholder: \"Search\",\n        onChange: function onChange(e) {\n          _this4.setState({\n            searchtxt: e.target.value\n          });\n\n          var name = e.target.value;\n          var datalength = _this4.state.rawdata.length;\n\n          if (name != \"\") {\n            _this4.setState({\n              data: _this4.state.rawdata.filter(function (data) {\n                return data.brand_name.indexOf(name) !== -1;\n              })\n            });\n\n            datalength = _this4.state.rawdata.filter(function (data) {\n              return data.brand_name.indexOf(name) !== -1;\n            }).length;\n          } else {\n            _this4.setState({\n              data: _this4.state.rawdata\n            });\n          }\n\n          var page_remain = Math.floor(datalength / _this4.state.rowperpage);\n          var num = datalength % _this4.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * _this4.state.rowperpage;\n          var endrow = startrow + _this4.state.rowperpage;\n\n          _this4.setState({\n            recordtotal: datalength,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        },\n        value: this.state.searchtxt\n      }), __jsx(\"div\", {\n        className: \"input-group-append\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-default\"\n      }, __jsx(\"i\", {\n        className: \"fa fa-search\",\n        onClick: this.onSearchClick\n      }))))))))), __jsx(\"div\", {\n        className: \"card-body table-responsive p-0\"\n      }, __jsx(\"table\", {\n        className: \"table table-hover\"\n      }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Type\"))), __jsx(\"tbody\", null, this.state.data.map(function (game, index) {\n        var classBadge = 'danger';\n        var mystatus = 'disable';\n\n        if (game.game_status == 1) {\n          classBadge = 'success';\n          mystatus = 'enable';\n        }\n\n        if (index >= _this4.state.startrow && index < _this4.state.endrow) //console.log(\"userid\" + user.id);\n          return __jsx(\"tr\", {\n            key: index\n          }, __jsx(\"td\", {\n            className: \"py-1\"\n          }, __jsx(\"label\", {\n            className: \"badge badge-info\",\n            style: {\n              display: game.game_new === 'Yes' ? 'block' : 'none'\n            }\n          }, \"new\"), \" \", __jsx(\"label\", {\n            className: \"badge badge-\".concat(classBadge),\n            style: {\n              display: 'block'\n            }\n          }, mystatus)), __jsx(\"td\", {\n            className: \"py-1\"\n          }, __jsx(\"img\", {\n            src: game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n            style: {\n              flex: 1,\n              width: \"80px\",\n              height: null,\n              resizeMode: 'contain'\n            }\n          })), __jsx(\"td\", {\n            className: \"py-1\"\n          }, game.game_code), __jsx(\"td\", {\n            className: \"py-1\"\n          }, game.game_name), __jsx(\"td\", {\n            className: \"py-1\"\n          }, game.game_type));\n      })))))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this4.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return Description;\n}(React.Component);\n\nexport { Description as default };","map":null,"metadata":{},"sourceType":"module"}
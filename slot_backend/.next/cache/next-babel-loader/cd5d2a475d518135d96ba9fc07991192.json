{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class AddWallets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      agent_code: \"\",\n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      data_agent: [],\n      data_brand: [],\n      data_member: [],\n      brand: \"\",\n      mem: \"\",\n      agent: \"\" // role: \"3\",\n      // rolename: \"User\",\n\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.SearchAgent = this.SearchAgent.bind(this);\n    this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\n  }\n\n  handleSelectBrandChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      brand: e.target.value\n    });\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code[0];\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    const agent_code = this.SearchAgent(e.target.value);\n    Cookies.set('_Agent', e.target.value);\n    this.setState({\n      agent_code: agent_code\n    });\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onSearchAgentCode(agent_name) {\n    console.log('get Agent Code');\n    const agents = this.state.agentdata.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agentCode = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agentCode;\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/agent_users\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\n        if (this.state.user_pass === this.state.confirmpassword) {\n          //const urole = this.onSearchLevel(this.state.rolename);\n          //this.setState({ user_level: urole,role: urole });\n          let user_status = 0;\n\n          if (this.state.switch1) {\n            user_status = 1;\n          }\n\n          const a = {\n            agent_code: this.state.agent_code,\n            user_name: this.state.user_name,\n            user_email: this.state.user_email,\n            user_pass: this.state.user_pass,\n            user_level: this.state.user_level,\n            user_status: user_status\n          };\n          const res = await ServiceUserAgent.createUserAgent(a);\n          console.log('res : ' + res.data);\n\n          if (res.data.status === 2000) {\n            console.log('Add User Agent Success!!!');\n            this.dialog.show({\n              title: 'Slot Admin information',\n              body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n              actions: [Dialog.OKAction(() => {\n                Router.push(\"/agent_users\");\n              })]\n            });\n          } else {\n            this.dialog.showAlert(res.data.message);\n            this.setErrorMsg(res.data.msg);\n          }\n        } else {\n          this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n    const v = this.onSearchLevel(e.target.value);\n    this.setState({\n      role: v,\n      user_level: v\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceMember.listMember().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data_member: data\n        });\n\n        if (data.length > 0) {\n          const {\n            mem_name,\n            agent_code\n          } = data[0];\n          this.setState({\n            mem: mem_name,\n            agent_code: agent_code\n          });\n          console.log('Brand name:' + mem_name); //this.state({});\n        }\n\n        if (Cookies.get(\"brand\")) {\n          this.setState({\n            brand: Cookies.get(\"brand\")\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data_brand: data\n        });\n\n        if (data.length > 0) {\n          const {\n            brand_name\n          } = data[0];\n          this.setState({\n            brand: brand_name\n          });\n          console.log('Brand name:' + brand_name);\n        }\n\n        if (Cookies.get(\"brand\")) {\n          this.setState({\n            brand: Cookies.get(\"brand\")\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      var data_service = [];\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        });\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Add Wallets',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-money\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Member\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.mem,\n      onChange: this.handleSelectAgentChange\n    }, this.state.data_member.map((member, index) => {\n      return __jsx(\"option\", {\n        value: member.mem_username,\n        key: index\n      }, member.mem_username);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"agent code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        agent_code: e.target.value\n      }),\n      value: this.state.agent_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-2 col-sm-6\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Brand\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.brand,\n      onChange: this.handleSelectBrandChange\n    }, this.state.data_brand.map((brand, index) => {\n      return __jsx(\"option\", {\n        value: brand.brand_name,\n        key: index\n      }, brand.brand_name);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"brand code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        brand_code: e.target.value\n      }),\n      value: this.state.brand_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game username\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"agent name\"\n      ,\n      onChange: e => this.setState({\n        game_username: e.target.value\n      }),\n      value: this.state.game_username,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game password\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"agent detail\"\n      ,\n      onChange: e => this.setState({\n        game_password: e.target.value\n      }),\n      value: this.state.game_password,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"Password\"\n      ,\n      onChange: e => this.setState({\n        user_pass: e.target.value\n      }),\n      value: this.state.user_pass,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Confirm Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"Confirm Password\"\n      ,\n      onChange: e => this.setState({\n        confirmpassword: e.target.value\n      }),\n      value: this.state.confirmpassword,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/wallets/add.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceBrand","ServiceMember","Dialog","AddWallets","constructor","props","nr","switchNumber","setState","state","agent_code","user_name","user_email","user_pass","add_date","user_level","user_status","switch1","errorMessage","datas","role_data","mydatas","value","data_agent","data_brand","data_member","brand","mem","agent","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","onClick","onConfirmClick","handleResetSubmit","onSearchLevel","onSearchAgentCode","handleSelectAgentChange","SearchAgent","handleSelectBrandChange","e","preventDefault","console","log","target","agent_name","agents","filter","map","index","set","level_name","myrole","role","user_level_name","user_level_id","agentdata","agentCode","dialog","showAlert","push","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","confirmpassword","a","res","createUserAgent","data","status","message","msg","error","rolename","v","user_enable","componentDidMount","get","listMember","then","length","mem_name","listBrands","brand_name","listAgent","data_service","render","element","url","member","mem_username","brand_code","game_username","game_password","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddWallets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            agent_code: \"\",\r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            user_level: \"3\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,            \r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"Master\",\r\n            data_agent: [],\r\n            data_brand: [],\r\n            data_member: [],\r\n            brand: \"\",\r\n            mem: \"\",\r\n            agent: \"\",\r\n\r\n            // role: \"3\",\r\n            // rolename: \"User\",\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\r\n        this.SearchAgent = this.SearchAgent.bind(this);\r\n        this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\r\n    }\r\n\r\n    handleSelectBrandChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ brand: e.target.value });\r\n    }\r\n\r\n    SearchAgent(agent_name) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agent_code = agents.map((agent, index) => {\r\n            return agent.agent_code;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_code[0];\r\n    }\r\n\r\n    handleSelectAgentChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ agent: e.target.value });\r\n        const agent_code = this.SearchAgent(e.target.value);\r\n        Cookies.set('_Agent', e.target.value);\r\n        this.setState({ agent_code: agent_code });\r\n    }\r\n\r\n    onSearchLevel(level_name) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_name == level_name;\r\n        })\r\n\r\n        const user_level_id = myrole.map((role, index) => {\r\n            return role.user_level_id\r\n        })\r\n        return user_level_id[0];\r\n    }\r\n\r\n    onSearchAgentCode(agent_name) {\r\n        console.log('get Agent Code');\r\n        const agents = this.state.agentdata.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agentCode = agents.map((agent, index) => {\r\n            return agent.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/agent_users\");\r\n    }\r\n\r\n    onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Spiderbot confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\r\n                if (this.state.user_pass === this.state.confirmpassword) {\r\n                    //const urole = this.onSearchLevel(this.state.rolename);\r\n                    //this.setState({ user_level: urole,role: urole });\r\n\r\n                    let user_status = 0;\r\n                    if (this.state.switch1) {\r\n                        user_status = 1;\r\n                    }\r\n\r\n                    const a = {\r\n                        agent_code: this.state.agent_code, user_name: this.state.user_name,\r\n                        user_email: this.state.user_email, user_pass: this.state.user_pass, user_level: this.state.user_level,\r\n                        user_status: user_status\r\n                    };\r\n                    const res = await ServiceUserAgent.createUserAgent(a);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Add User Agent Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/agent_users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n        const v = this.onSearchLevel(e.target.value);\r\n        this.setState({ role: v, user_level: v });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceMember.listMember().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_member: data });\r\n                if (data.length > 0) {\r\n                    const { mem_name,agent_code } = data[0];\r\n                    this.setState({ mem: mem_name,agent_code: agent_code });\r\n                    console.log('Brand name:' + mem_name);\r\n                    //this.state({});\r\n                }\r\n\r\n                if (Cookies.get(\"brand\")) {\r\n                    this.setState({ brand: Cookies.get(\"brand\") });\r\n                }\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_brand: data });\r\n                if (data.length > 0) {\r\n                    const { brand_name } = data[0];\r\n                    this.setState({ brand: brand_name });\r\n                    console.log('Brand name:' + brand_name);\r\n                }\r\n\r\n                if (Cookies.get(\"brand\")) {\r\n                    this.setState({ brand: Cookies.get(\"brand\") });\r\n                }\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n        ServiceAgent.listAgent().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            var data_service = [];\r\n            if (status === 2000) {\r\n                console.log(\"data agent length : \" + data.length);\r\n                this.setState({ data_agent: data });\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Wallets'} contentTitleButton={<i className=\"fa fa-2x fa-money\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Member</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.mem} onChange={this.handleSelectAgentChange}>\r\n                                            {\r\n                                                this.state.data_member.map((member, index) => {\r\n                                                    return (\r\n                                                        <option value={member.mem_username} key={index}>{member.mem_username}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Agent</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.agent} onChange={this.handleSelectAgentChange}>\r\n                                            {\r\n                                                this.state.data_agent.map((agent, index) => {\r\n                                                    return (\r\n                                                        <option value={agent.agent_name} key={index}>{agent.agent_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div> */}\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-2 col-sm-6\">                                    \r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Brand</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.brand} onChange={this.handleSelectBrandChange}>\r\n                                            {\r\n                                                this.state.data_brand.map((brand, index) => {\r\n                                                    return (\r\n                                                        <option value={brand.brand_name} key={index}>{brand.brand_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">brand code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ brand_code: e.target.value })}\r\n                                            value={this.state.brand_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ game_username: e.target.value })}\r\n                                            value={this.state.game_username}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game password</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ game_password: e.target.value })}\r\n                                            value={this.state.game_password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ user_pass: e.target.value })}\r\n                                            value={this.state.user_pass}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Confirm Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"Confirm Password\"\r\n                                            onChange={(e) => this.setState({ confirmpassword: e.target.value })}\r\n                                            value={this.state.confirmpassword}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent } from \"../../service\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceGameList } from \"../../service\";\nimport { ServiceGameService } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog'; //import FilesUploadComponent from '../../components/files-upload-component';\n\nimport { MDBContainer } from 'mdbreact';\nexport default class AddService extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n\n      if (!this.state[switchNumber] == false) {\n        this.setState({\n          data: []\n        });\n      }\n    });\n\n    this.state = {\n      data_agent: [],\n      data_brand: [],\n      //data_service: [],\n      rawdata: [],\n      ser_code: \"\",\n      brand_code: \"\",\n      agent_code: \"\",\n      ser_api_key: \"\",\n      ser_api_secret: \"\",\n      ser_api_username: \"\",\n      ser_api_password: \"\",\n      //1=enable , 0=disable\n      startpass_string: \"\",\n      startuser_string: \"\",\n      ser_date: \"\",\n      ser_status: \"\",\n      user_process: \"\",\n      ser_percent: \"\",\n      ser_comm: \"\",\n      ser_url: \"\",\n      last_turn_date: \"\",\n      last_turn_hour: \"\",\n      switch1: true,\n      switch_arr: [],\n      errorMessage: \"\",\n      data: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      image: \"\",\n      imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      file: \"\",\n      agent: \"\",\n      brand: \"\",\n      save_row: \"\",\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\",\n      serid: Cookies.get('serid')\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this); //this.onSearchLevel = this.onSearchLevel.bind(this);\n\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\n    this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\n  }\n\n  handleSelectRowPerPageChange(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data: this.state.data,\n      pagetotal: page_remain,\n      pagenumber: 1,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      this.setState({\n        imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n      });\n    }\n  }\n\n  /*     handleSwitchChangeArr = nr => () => {\r\n          let arr = this.state.switch_arr;\r\n          arr[nr] = !arr[nr];\r\n          //console.log('switch arr = >' + arr)\r\n          this.setState({ switch_arr: arr });\r\n          console.log('state switch arr = >' + this.state.switch_arr);\r\n      } */\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/game_service\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async EditService() {\n    let ser_status = \"Off\";\n\n    if (this.state.switch1) {\n      ser_status = \"On\";\n    }\n\n    const brandcode = this.SearchBrand(this.state.brand);\n    const agentcode = this.SearchAgent(this.state.agent);\n    var ser_percent = '0',\n        ser_comm = '0';\n\n    if (this.state.ser_percent != '') {\n      ser_percent = this.state.ser_percent;\n    }\n\n    if (this.state.ser_comm != '') {\n      ser_comm = this.state.ser_comm;\n    }\n\n    const a = {\n      ser_code: agentcode + '-' + brandcode,\n      brand_code: brandcode,\n      agent_code: agentcode,\n      ser_api_key: this.state.ser_api_key,\n      ser_api_secret: this.state.ser_api_secret,\n      ser_api_username: this.state.ser_api_username,\n      ser_api_password: this.state.ser_api_password,\n      startpass_string: this.state.startpass_string,\n      startuser_string: this.state.startuser_string,\n      ser_date: \"\",\n      user_process: this.state.user_process,\n      ser_percent: ser_percent,\n      ser_comm: ser_comm,\n      last_turn_date: this.state.last_turn_date,\n      last_turn_hour: this.state.last_turn_hour,\n      ser_status: ser_status,\n      ser_url: this.state.ser_url\n    };\n    console.log('Add service start...');\n    const res2 = await ServiceGameService.editService(a, this.state.serid);\n    console.log('res : ' + res2.data);\n\n    if (res2.data.status === 2000) {\n      console.log('Add service Success!!!');\n      this.dialog.show({\n        title: 'Slot Admin information',\n        body: 'บันทึก service : ' + agentcode + '-' + brandcode + ' เรียบร้อยแล้ว',\n        actions: [Dialog.OKAction(() => {\n          Router.push(\"/game_service\");\n        })]\n      });\n    } else {\n      this.dialog.showAlert(res2.data.message + ' กรุณาเช็ครูปแบบของข้อมูลให้ถูกต้อง(ตัวอักษร/ตัวเลข)');\n      this.setErrorMsg(res2.data.msg);\n    }\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.brand !== \"\" && this.state.agent !== \"\" && this.state.ser_api_key !== \"\" && this.state.ser_api_secret !== \"\" && this.state.ser_api_username !== \"\" && this.state.ser_api_password !== \"\") {\n        this.EditService();\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      //this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  getGamelistFromBrand(Brand) {\n    ServiceGameList.listGamesFromBrand(Brand).then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data game list length : \" + data.length);\n        this.setState({\n          data: data\n        });\n        this.setState({\n          rawdata: data\n        });\n        var page_remain = Math.floor(data.length / this.state.rowperpage);\n        var num = data.length % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: data.length,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  handleSelectBrandChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      brand: e.target.value\n    });\n    this.getGamelistFromBrand(e.target.value);\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      agent_type: e.target.value\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    if (!Cookies.get(\"serid\")) {\n      this.dialog.show({\n        title: 'Slot Admin information',\n        body: 'ไม่สามารถแก้ไข service ได้เนื่องจากไม่ได้ระบุ service id ที่จะแก้ไข',\n        actions: [Dialog.OKAction(() => {\n          Router.push(\"/game_service\");\n        })]\n      });\n    } else {\n      ServiceGameService.getService(Cookies.get(\"serid\")).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          const {\n            ser_code,\n            brand_code,\n            agent_code,\n            ser_api_key,\n            ser_api_secret,\n            ser_api_username,\n            ser_api_password,\n            startpass_string,\n            startuser_string,\n            ser_date,\n            user_process,\n            ser_percent,\n            ser_comm,\n            last_turn_date,\n            last_turn_hour,\n            ser_status,\n            ser_url\n          } = data[0];\n          var m_ser_percent = '0',\n              m_ser_comm = '0';\n\n          if (ser_percent != '') {\n            m_ser_percent = ser_percent.$numberDecimal;\n          }\n\n          if (ser_comm != '') {\n            m_ser_comm = ser_comm.$numberDecimal;\n          }\n\n          this.setState({\n            ser_code: ser_code,\n            brand_code: brand_code,\n            agent_code: agent_code,\n            ser_api_key: ser_api_key,\n            ser_api_secret: ser_api_secret,\n            ser_api_username: ser_api_username,\n            ser_api_password: ser_api_password,\n            startpass_string: startpass_string,\n            startuser_string: startuser_string,\n            ser_date: ser_date,\n            user_process: Cookies.get(\"user\"),\n            ser_percent: m_ser_percent,\n            ser_comm: m_ser_comm,\n            last_turn_date: last_turn_date,\n            last_turn_hour: last_turn_hour,\n            ser_status: ser_status,\n            ser_url: ser_url\n          });\n          const brand_name = Cookies.get('ser_brandname');\n          console.log('brand name 417=> ' + brand_name);\n          this.setState({\n            brand: brand_name\n          }); //console.log('brand name 417=> ' + brand_name);\n\n          this.getGamelistFromBrand(brand_name);\n\n          if (ser_status == \"On\") {\n            this.setState({\n              switch1: true\n            });\n          } else {\n            this.setState({\n              switch1: false\n            });\n          }\n        } else {\n          this.setErrorMsg(res.data.msg);\n          Router.push(\"/game_service\");\n        }\n      });\n    }\n\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      var data_service = [];\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        });\n        console.log(\"serviceagent=>\" + Cookies.get('serviceagent'));\n\n        if (Cookies.get('serviceagent')) {\n          const agent_code = Cookies.get('serviceagent');\n          this.setState({\n            agent: this.SearchAgentName(agent_code)\n          });\n          ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n            console.log(res.data);\n            const {\n              data,\n              status\n            } = res.data;\n\n            if (status === 2000) {\n              console.log(\"data service length : \" + data.length);\n              data_service = data;\n              ServiceBrand.listBrands().then(res => {\n                console.log(res.data);\n                const {\n                  data,\n                  status\n                } = res.data;\n\n                if (status === 2000) {\n                  var data_brand = [];\n                  var i = 0,\n                      j = 0;\n                  console.log(\"data length : \" + data.length);\n                  console.log(\"data service length : \" + data_service.length);\n\n                  if (data_service.length > 0) {\n                    for (i = 0; i < data.length; i++) {\n                      //console.log('i:' + i);\n                      loop1: for (j = 0; j < data_service.length; j++) {\n                        //console.log('j:' + j);\n                        const brand_code = data_service[j].brand_code;\n\n                        if (brand_code == data[i].brand_code) {\n                          if (data_service[j]._id == this.state.serid) {\n                            console.log('data(' + i + ') push');\n                            data_brand.push(data[i]);\n                          }\n\n                          j = data_service.length;\n                          continue loop1;\n                        } else {\n                          if (j == data_service.length - 1 && brand_code != data[i].brand_code) {\n                            console.log('data(' + i + ') push');\n                            data_brand.push(data[i]);\n                          }\n                        }\n                      }\n                    }\n                  } else {\n                    data_brand = data;\n                  }\n\n                  this.setState({\n                    data_brand: data_brand\n                  });\n                  /* if (data_brand.length > 0) {\r\n                      const { brand_name } = data_brand[0];\r\n                      this.setState({ brand: brand_name });\r\n                      console.log('brand name 417=> ' + brand_name);\r\n                      this.getGamelistFromBrand(brand_name);\r\n                  } else {\r\n                      this.dialog.show({\r\n                          title: 'Slot Admin information',\r\n                          body: 'ไม่สามารถ add service agent:' + agent_code + ' ได้เนื่องจากมี service ครบทุก brand แล้ว',\r\n                          actions: [\r\n                              Dialog.OKAction(() => {\r\n                                  Router.push(\"/game_service\");\r\n                              })\r\n                          ]\r\n                      })\r\n                  } */\n                } else {\n                  this.setErrorMsg(res.data.msg);\n                }\n              });\n            } else {\n              this.setErrorMsg(res.data.msg);\n            }\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code[0];\n  }\n\n  SearchAgentName(agentcode) {\n    console.log('get agent_name');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_code == agentcode;\n    });\n    const agent_name = agents.map((agent, index) => {\n      return agent.agent_name;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_name[0];\n  }\n\n  SearchBrand(brandname) {\n    console.log('get brand code');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_name == brandname;\n    });\n    const brand_code = brands.map((brand, index) => {\n      return brand.brand_code;\n    });\n    return brand_code[0];\n  }\n\n  SearchBrandName(brandcode) {\n    console.log('get brand name');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_code == brandcode;\n    });\n    const brand_name = brands.map((brand, index) => {\n      return brand.brand_name;\n    });\n    return brand_name[0];\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    const agent_code = this.SearchAgent(e.target.value);\n    Cookies.set('serviceagent', agent_code);\n    ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data service length : \" + data.length);\n        const data_service = data;\n        ServiceBrand.listBrands().then(res => {\n          console.log(res.data);\n          const {\n            data,\n            status\n          } = res.data;\n\n          if (status === 2000) {\n            var data_brand = [];\n            var i, j;\n            console.log(\"data length : \" + data.length);\n\n            for (i = 0; i < data.length; i++) {\n              for (j = 0; j < data_service.length; j++) {\n                if (data_service[i].brand_code == data[j].brand_code) {\n                  return;\n                } else {\n                  if (j == data_service.length - 1) {\n                    data_brand.push(data[j]);\n                  }\n                }\n              }\n            }\n\n            this.setState({\n              data_brand: data_brand\n            });\n\n            if (data_brand.length > 0) {\n              /* const { brand_name } = data_brand[0];\r\n              this.setState({ brand: brand_name });\r\n              this.getGamelistFromBrand(brand_name); */\n            }\n          } else {\n            this.setErrorMsg(res.data.msg);\n          }\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  addSwitchArr() {\n    if (!this.state.switch_arr) {\n      let arr = [];\n      console.log('arr => ' + arr);\n      return arr.push(false);\n    } else {\n      let arr = [this.state.switch_arr];\n      console.log('arr => ' + arr);\n      return arr.push(false);\n    }\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Edit Service',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-exchange\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Agent\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.agent,\n      onChange: this.handleSelectAgentChange\n    }, this.state.data_agent.map((agent, index) => {\n      return __jsx(\"option\", {\n        value: agent.agent_name,\n        key: index\n      }, agent.agent_name);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Brand\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.brand,\n      onChange: this.handleSelectBrandChange\n    }, this.state.data_brand.map((brand, index) => {\n      return __jsx(\"option\", {\n        value: brand.brand_name,\n        key: index\n      }, brand.brand_name);\n    }))))), __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service api key\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\" //placeholder=\"service api key\"\n      ,\n      id: \"validation-ex1\",\n      onChange: e => this.setState({\n        ser_api_key: e.target.value\n      }),\n      value: this.state.ser_api_key,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service api secret\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"service api secret\"\n      ,\n      onChange: e => this.setState({\n        ser_api_secret: e.target.value\n      }),\n      value: this.state.ser_api_secret,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service api username\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"service api username\"\n      ,\n      onChange: e => this.setState({\n        ser_api_username: e.target.value\n      }),\n      value: this.state.ser_api_username,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service api password\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"service api password\"\n      ,\n      onChange: e => this.setState({\n        ser_api_password: e.target.value\n      }),\n      value: this.state.ser_api_password,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"start user\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex7\" //placeholder=\"start user\"\n      ,\n      onChange: e => this.setState({\n        startuser_string: e.target.value\n      }),\n      value: this.state.startuser_string,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"start password\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex6\" //placeholder=\"start password\"\n      ,\n      onChange: e => this.setState({\n        startpass_string: e.target.value\n      }),\n      value: this.state.startpass_string,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service percent\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex9\" //placeholder=\"service percent\"\n      ,\n      onChange: e => this.setState({\n        ser_percent: e.target.value\n      }),\n      value: this.state.ser_percent,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service commission\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex10\" //placeholder=\"service commission\"\n      ,\n      onChange: e => this.setState({\n        ser_comm: e.target.value\n      }),\n      value: this.state.ser_comm,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"service URL\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex10\" //placeholder=\"service URL\"\n      ,\n      onChange: e => this.setState({\n        ser_url: e.target.value\n      }),\n      value: this.state.ser_url,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"user process\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex8\" //placeholder=\"user process\"\n      ,\n      onChange: e => this.setState({\n        user_process: e.target.value\n      }),\n      value: this.state.user_process,\n      required: true,\n      disabled: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Service status\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0ON\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\"))))), __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"h4\", null, \" Games List for brand : \", this.state.brand, \" \"), __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage,\n      onChange: this.handleSelectRowPerPageChange\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber,\n      onChange: this.handleSelectPageNumberChange\n    }, this.state.pagearr.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\" //placeholder=\"Search\"\n      ,\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          this.setState({\n            data: this.state.rawdata.filter(data => {\n              return data.brand_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(data => {\n            return data.brand_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\n        var num = datalength % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: datalength,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      },\n      value: this.state.searchtxt\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick\n    }))))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover table-striped table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Type\"))), __jsx(\"tbody\", null, this.state.data.map((game, index) => {\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (game.game_status == 1) {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"label\", {\n          className: `badge badge-info`,\n          style: {\n            display: game.game_new === 'Yes' ? 'block' : 'none'\n          }\n        }, \"new\"), \" \", __jsx(\"label\", {\n          className: `badge badge-${classBadge}`,\n          style: {\n            display: 'block'\n          }\n        }, mystatus)), __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"img\", {\n          src: game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n          style: {\n            flex: 1,\n            width: \"80px\",\n            height: null,\n            resizeMode: 'contain'\n          }\n        })), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_code), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_name), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_type));\n    }))))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
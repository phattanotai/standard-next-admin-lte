{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class AddWallets extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },            \n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      credit: \"0\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      data_service: [],\n      data_agent: [],\n      data_brand: [],\n      data_member: [],\n      brand: \"\",\n      mem: \"\",\n      agent: \"\",\n      isDownLine: false,\n      game_username: \"\",\n      game_password: \"\",\n      agent_code: \"\",\n      brand_code: \"\" // role: \"3\",\n      // rolename: \"User\",\n\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this); //this.onClick = this.onClick.bind(this);\n    //this.onConfirmClick = this.onConfirmClick.bind(this)\n\n    this.handleResetSubmit = this.handleResetSubmit.bind(this); //this.onSearchLevel = this.onSearchLevel.bind(this);\n\n    this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\n    this.handleSelectMemberChange = this.handleSelectMemberChange.bind(this); //this.SearchAgent = this.SearchAgent.bind(this);\n\n    this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\n  }\n\n  handleSelectBrandChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      brand: e.target.value\n    });\n  }\n\n  handleSelectMemberChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    const agent_code = this.onSearchAgentCode(e.target.value);\n    this.setState({\n      mem: e.target.value,\n      agent_code: agent_code\n    });\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length); //this.setState({ data_brand: data });\n\n        let data_brand = data;\n        const agent_lineup = this.SearchAgent_LineUp(agent_code)[0];\n        console.log('agent_lineup =>' + agent_lineup);\n        console.log('agent_code =>' + agent_code);\n        Cookies.set(\"serviceagent\", agent_code);\n        var agent_param = \"\";\n\n        if (agent_lineup === \"\" || agent_lineup === \"-\") {\n          this.setState({\n            isDownLine: false\n          });\n          agent_param = agent_code;\n        } else {\n          this.setState({\n            isDownLine: true\n          });\n          agent_param = agent_lineup;\n        }\n\n        ServiceGameService.listServiceFromAgent(agent_param).then(res => {\n          console.log(res.data);\n          const {\n            data,\n            status\n          } = res.data;\n\n          if (status === 2000) {\n            console.log(\"data service length : \" + data.length);\n            this.setState({\n              data_service: data\n            });\n            let my_data_brand = [];\n            var i;\n\n            for (i = 0; i < data.length; i++) {\n              //data_brand.filter()\n              const brands = data_brand.filter(brand => {\n                return brand.brand_code == data[i].brand_code;\n              }); //console.log('brands : ' + brands);\n\n              const brand_name = brands.map((brand, index) => {\n                return brand.brand_name;\n              });\n              console.log('brand_name : ' + brand_name[0]);\n              my_data_brand.push({\n                brand_name: brand_name[0],\n                brand_code: data[i].brand_code\n              });\n            }\n\n            console.log('data_brand : ' + JSON.stringify(my_data_brand));\n            this.setState({\n              data_brand: my_data_brand\n            });\n            this.setState({\n              brand: my_data_brand[0].brand_name\n            });\n            this.setState({\n              brand_code: my_data_brand[0].brand_code\n            });\n          } else {\n            this.setErrorMsg(res.data.msg);\n          }\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  onSearchAgentCode(mem_username) {\n    console.log('get Agent Code');\n    const mems = this.state.data_member.filter(mem => {\n      return mem.mem_username == mem_username;\n    });\n    const agentCode = mems.map((mem, index) => {\n      return mem.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agentCode;\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/wallets\");\n  }\n\n  SearchAgent_LineUp(agent_code) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_code == agent_code;\n    });\n    const agent_lineup = agents.map((agent, index) => {\n      return agent.agent_lineup;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_lineup;\n  }\n\n  SearchAgent_LineUp2(data_agent, agent_code) {\n    console.log('get agent_code');\n    const agents = data_agent.filter(agent => {\n      return agent.agent_code == agent_code;\n    });\n    console.log('agents : ' + JSON.stringify(agents));\n    const agent_lineup = agents.map((agent, index) => {\n      return agent.agent_lineup;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_lineup;\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\n        if (this.state.user_pass === this.state.confirmpassword) {\n          //const urole = this.onSearchLevel(this.state.rolename);\n          //this.setState({ user_level: urole,role: urole });\n          let user_status = 0;\n\n          if (this.state.switch1) {\n            user_status = 1;\n          }\n\n          const a = {\n            agent_code: this.state.agent_code,\n            user_name: this.state.user_name,\n            user_email: this.state.user_email,\n            user_pass: this.state.user_pass,\n            user_level: this.state.user_level,\n            user_status: user_status\n          };\n          const res = await ServiceUserAgent.createUserAgent(a);\n          console.log('res : ' + res.data);\n\n          if (res.data.status === 2000) {\n            console.log('Add User Agent Success!!!');\n            this.dialog.show({\n              title: 'Slot Admin information',\n              body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n              actions: [Dialog.OKAction(() => {\n                Router.push(\"/agent_users\");\n              })]\n            });\n          } else {\n            this.dialog.showAlert(res.data.message);\n            this.setErrorMsg(res.data.msg);\n          }\n        } else {\n          this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n    const v = this.onSearchLevel(e.target.value);\n    this.setState({\n      role: v,\n      user_level: v\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceMember.listMember().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data_member: data\n        });\n\n        if (data.length > 0) {\n          const {\n            mem_name,\n            agent_code\n          } = data[0];\n          this.setState({\n            mem: mem_name,\n            agent_code: agent_code\n          });\n          console.log('Brand name:' + mem_name);\n          ServiceBrand.listBrands().then(res => {\n            console.log(res.data);\n            const {\n              data,\n              status\n            } = res.data;\n\n            if (status === 2000) {\n              console.log(\"data length : \" + data.length); //this.setState({ data_brand: data });\n\n              let data_brand = data;\n              ServiceAgent.listAgent().then(res => {\n                console.log(res.data);\n                const {\n                  data,\n                  status\n                } = res.data; //var data_service = [];\n\n                if (status === 2000) {\n                  console.log(\"data agent length : \" + data.length);\n                  console.log(\"data agent : \" + JSON.stringify(data));\n                  this.setState({\n                    data_agent: data\n                  }); //const {agent_code} = data[0];\n\n                  const agent_lineup = this.SearchAgent_LineUp2(data, agent_code)[0];\n                  console.log('agent_lineup =>' + agent_lineup);\n                  console.log('agent_code =>' + agent_code);\n                  Cookies.set(\"serviceagent\", agent_code);\n\n                  if (agent_lineup === \"\" || agent_lineup === \"-\") {\n                    this.setState({\n                      isDownLine: false\n                    });\n                    ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n                      console.log(res.data);\n                      const {\n                        data,\n                        status\n                      } = res.data;\n\n                      if (status === 2000) {\n                        console.log(\"data length : \" + data.length);\n                        this.setState({\n                          data_service: data\n                        });\n                        let my_data_brand = [];\n                        var i;\n\n                        for (i = 0; i < data.length; i++) {\n                          //data_brand.filter()\n                          const brands = data_brand.filter(brand => {\n                            return brand.brand_code == data[i].brand_code;\n                          }); //console.log('brands : ' + brands);\n\n                          const brand_name = brands.map((brand, index) => {\n                            return brand.brand_name;\n                          });\n                          console.log('brand_name : ' + brand_name[0]);\n                          my_data_brand.push({\n                            brand_name: brand_name[0],\n                            brand_code: data[i].brand_code\n                          });\n                        }\n\n                        console.log('data_brand : ' + JSON.stringify(my_data_brand));\n                        this.setState({\n                          data_brand: my_data_brand\n                        });\n                        this.setState({\n                          brand: my_data_brand[0].brand_name\n                        });\n                        this.setState({\n                          brand_code: my_data_brand[0].brand_code\n                        });\n                      } else {\n                        this.setErrorMsg(res.data.msg);\n                      }\n                    });\n                  } else {\n                    this.setState({\n                      isDownLine: true\n                    });\n                    ServiceGameService.listServiceFromAgent(agent_lineup).then(res => {\n                      console.log(res.data);\n                      const {\n                        data,\n                        status\n                      } = res.data;\n\n                      if (status === 2000) {\n                        console.log(\"data service length : \" + data.length);\n                        this.setState({\n                          data_service: data\n                        });\n                        let my_data_brand = [];\n                        var i;\n\n                        for (i = 0; i < data.length; i++) {\n                          //data_brand.filter()\n                          const brands = data_brand.filter(brand => {\n                            return brand.brand_code == data[i].brand_code;\n                          }); //console.log('brands : ' + brands);\n\n                          const brand_name = brands.map((brand, index) => {\n                            return brand.brand_name;\n                          });\n                          console.log('brand_name : ' + brand_name[0]);\n                          my_data_brand.push({\n                            brand_name: brand_name[0],\n                            brand_code: data[i].brand_code\n                          });\n                        }\n\n                        console.log('data_brand : ' + JSON.stringify(my_data_brand));\n                        this.setState({\n                          data_brand: my_data_brand\n                        });\n                        this.setState({\n                          brand: my_data_brand[0].brand_name\n                        });\n                        this.setState({\n                          brand_code: my_data_brand[0].brand_code\n                        });\n                      } else {\n                        this.setErrorMsg(res.data.msg);\n                      }\n                    });\n                  }\n                }\n              });\n            } else {\n              this.setErrorMsg(res.data.msg);\n            }\n          });\n        }\n\n        if (Cookies.get(\"brand\")) {\n          this.setState({\n            brand: Cookies.get(\"brand\")\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Add Wallets',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-money\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group row\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-5\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Member\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.mem,\n      onChange: this.handleSelectMemberChange\n    }, this.state.data_member.map((member, index) => {\n      return __jsx(\"option\", {\n        value: member.mem_username,\n        key: index\n      }, member.mem_username);\n    })))), __jsx(\"div\", {\n      className: \"col-sm-5\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"\\xA0\"), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"agent code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        agent_code: e.target.value\n      }),\n      value: this.state.agent_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group row\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-5\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Brand\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.brand,\n      onChange: this.handleSelectBrandChange\n    }, this.state.data_brand.map((brand, index) => {\n      return __jsx(\"option\", {\n        value: brand.brand_name,\n        key: index\n      }, brand.brand_name);\n    })))), __jsx(\"div\", {\n      className: \"col-sm-5\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"\\xA0\"), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"brand code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        brand_code: e.target.value\n      }),\n      value: this.state.brand_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-10\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game username\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"agent name\"\n      ,\n      onChange: e => this.setState({\n        game_username: e.target.value\n      }),\n      value: this.state.game_username,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-10\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game password\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"agent detail\"\n      ,\n      onChange: e => this.setState({\n        game_password: e.target.value\n      }),\n      value: this.state.game_password,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-10\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"credit\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"Password\"\n      ,\n      onChange: e => this.setState({\n        credit: e.target.value\n      }),\n      value: this.state.credit,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/wallets/add.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceBrand","ServiceMember","ServiceGameService","Dialog","AddWallets","constructor","props","nr","switchNumber","setState","state","user_name","user_email","user_pass","add_date","credit","user_level","user_status","switch1","errorMessage","datas","role_data","mydatas","value","data_service","data_agent","data_brand","data_member","brand","mem","agent","isDownLine","game_username","game_password","agent_code","brand_code","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","handleResetSubmit","onSearchAgentCode","handleSelectMemberChange","handleSelectBrandChange","e","preventDefault","console","log","target","listBrands","then","res","data","status","length","agent_lineup","SearchAgent_LineUp","set","agent_param","listServiceFromAgent","my_data_brand","i","brands","filter","brand_name","map","index","push","JSON","stringify","msg","mem_username","mems","agentCode","agents","SearchAgent_LineUp2","confirmpassword","a","createUserAgent","dialog","show","title","body","actions","OKAction","showAlert","message","error","rolename","v","onSearchLevel","role","user_enable","componentDidMount","get","listMember","mem_name","listAgent","render","element","url","member","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddWallets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },            \r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            credit: \"0\",\r\n            user_level: \"3\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,\r\n            \r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"Master\",\r\n            data_service: [],\r\n            data_agent: [],\r\n            data_brand: [],\r\n            data_member: [],\r\n            brand: \"\",\r\n            mem: \"\",\r\n            agent: \"\",\r\n            isDownLine: false,\r\n            game_username: \"\",\r\n            game_password: \"\",\r\n            agent_code: \"\",\r\n            brand_code: \"\",\r\n            // role: \"3\",\r\n            // rolename: \"User\",\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        //this.onClick = this.onClick.bind(this);\r\n        //this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        //this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectMemberChange = this.handleSelectMemberChange.bind(this);\r\n        //this.SearchAgent = this.SearchAgent.bind(this);\r\n        this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\r\n    }\r\n\r\n    handleSelectBrandChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ brand: e.target.value });\r\n    }\r\n\r\n    handleSelectMemberChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        const agent_code = this.onSearchAgentCode(e.target.value)\r\n        this.setState({ mem: e.target.value, agent_code: agent_code });\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                //this.setState({ data_brand: data });\r\n                let data_brand = data;\r\n                const agent_lineup = this.SearchAgent_LineUp(agent_code)[0];\r\n\r\n                console.log('agent_lineup =>' + agent_lineup);\r\n                console.log('agent_code =>' + agent_code);\r\n                Cookies.set(\"serviceagent\", agent_code);\r\n                var agent_param = \"\";\r\n                if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                    this.setState({ isDownLine: false });\r\n                    agent_param = agent_code;\r\n                } else {\r\n                    this.setState({ isDownLine: true });\r\n                    agent_param = agent_lineup;\r\n                }\r\n                ServiceGameService.listServiceFromAgent(agent_param).then((res) => {\r\n                    console.log(res.data);\r\n                    const { data, status } = res.data;\r\n                    if (status === 2000) {\r\n                        console.log(\"data service length : \" + data.length);\r\n                        this.setState({ data_service: data });\r\n\r\n                        let my_data_brand = [];\r\n                        var i;\r\n                        for (i = 0; i < data.length; i++) {\r\n                            //data_brand.filter()\r\n                            const brands = data_brand.filter((brand) => {\r\n                                return brand.brand_code == data[i].brand_code;\r\n                            })\r\n                            //console.log('brands : ' + brands);\r\n                            const brand_name = brands.map((brand, index) => {\r\n                                return brand.brand_name;\r\n                            })\r\n                            console.log('brand_name : ' + brand_name[0]);\r\n                            my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                        }\r\n                        console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                        this.setState({ data_brand: my_data_brand });\r\n                        this.setState({ brand: my_data_brand[0].brand_name });\r\n                        this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onSearchAgentCode(mem_username) {\r\n        console.log('get Agent Code');\r\n        const mems = this.state.data_member.filter((mem) => {\r\n            return mem.mem_username == mem_username;\r\n        })\r\n\r\n        const agentCode = mems.map((mem, index) => {\r\n            return mem.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/wallets\");\r\n    }\r\n\r\n    SearchAgent_LineUp(agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n    SearchAgent_LineUp2(data_agent, agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n        console.log('agents : ' + JSON.stringify(agents));\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\r\n                if (this.state.user_pass === this.state.confirmpassword) {\r\n                    //const urole = this.onSearchLevel(this.state.rolename);\r\n                    //this.setState({ user_level: urole,role: urole });\r\n\r\n                    let user_status = 0;\r\n                    if (this.state.switch1) {\r\n                        user_status = 1;\r\n                    }\r\n\r\n                    const a = {\r\n                        agent_code: this.state.agent_code, user_name: this.state.user_name,\r\n                        user_email: this.state.user_email, user_pass: this.state.user_pass, user_level: this.state.user_level,\r\n                        user_status: user_status\r\n                    };\r\n                    const res = await ServiceUserAgent.createUserAgent(a);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Add User Agent Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/agent_users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n        const v = this.onSearchLevel(e.target.value);\r\n        this.setState({ role: v, user_level: v });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceMember.listMember().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_member: data });\r\n                if (data.length > 0) {\r\n                    const { mem_name, agent_code } = data[0];\r\n                    this.setState({ mem: mem_name, agent_code: agent_code });\r\n                    console.log('Brand name:' + mem_name);\r\n\r\n                    ServiceBrand.listBrands().then((res) => {\r\n                        console.log(res.data);\r\n                        const { data, status } = res.data;\r\n                        if (status === 2000) {\r\n                            console.log(\"data length : \" + data.length);\r\n                            //this.setState({ data_brand: data });\r\n                            let data_brand = data;\r\n\r\n                            ServiceAgent.listAgent().then((res) => {\r\n                                console.log(res.data);\r\n                                const { data, status } = res.data;\r\n                                //var data_service = [];\r\n                                if (status === 2000) {\r\n                                    console.log(\"data agent length : \" + data.length);\r\n                                    console.log(\"data agent : \" + JSON.stringify(data));\r\n                                    this.setState({ data_agent: data });\r\n                                    //const {agent_code} = data[0];\r\n                                    const agent_lineup = this.SearchAgent_LineUp2(data, agent_code)[0];\r\n\r\n                                    console.log('agent_lineup =>' + agent_lineup);\r\n                                    console.log('agent_code =>' + agent_code);\r\n                                    Cookies.set(\"serviceagent\", agent_code);\r\n                                    if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                                        this.setState({ isDownLine: false });\r\n                                        ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({ isDownLine: true });\r\n                                        ServiceGameService.listServiceFromAgent(agent_lineup).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data service length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        } else {\r\n                            this.setErrorMsg(res.data.msg);\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n                if (Cookies.get(\"brand\")) {\r\n                    this.setState({ brand: Cookies.get(\"brand\") });\r\n                }\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Wallets'} contentTitleButton={<i className=\"fa fa-2x fa-money\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Member</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.mem} onChange={this.handleSelectMemberChange}>\r\n                                            {\r\n                                                this.state.data_member.map((member, index) => {\r\n                                                    return (\r\n                                                        <option value={member.mem_username} key={index}>{member.mem_username}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Brand</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.brand} onChange={this.handleSelectBrandChange}>\r\n                                            {\r\n                                                this.state.data_brand.map((brand, index) => {\r\n                                                    return (\r\n                                                        <option value={brand.brand_name} key={index}>{brand.brand_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">brand code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ brand_code: e.target.value })}\r\n                                            value={this.state.brand_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ game_username: e.target.value })}\r\n                                            value={this.state.game_username}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game password</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ game_password: e.target.value })}\r\n                                            value={this.state.game_password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">credit</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ credit: e.target.value })}\r\n                                            value={this.state.credit}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class EditAgent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      agent_code: \"\",\n      agent_lineup: \"\",\n      agent_name: \"\",\n      agent_detail: \"\",\n      agent_website: \"\",\n      agent_master: \"\",\n      agent_type: \"\",\n      // Master or Agent\n      agent_percent: \"\",\n      agent_percent_aff: \"\",\n      agent_percent_aff2: \"\",\n      agent_percent_aff3: \"\",\n      agent_percent_aff4: \"\",\n      agent_percent_aff5: \"\",\n      agent_comm: \"\",\n      agent_line_ad: \"\",\n      agent_line_token1: \"\",\n      agent_line_token2: \"\",\n      agent_line_token3: \"\",\n      agent_api_user: \"\",\n      agent_api_password: \"\",\n      agent_api_key: \"\",\n      withdraw_auto: \"\",\n      agent_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      agentid: Cookies.get(\"agentid\"),\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\"\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/agents\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.agent_code !== \"\" && this.state.agent_name) {\n        /* this.setState({ role: this.onSearchLevel(this.state.rolename) });\r\n        console.log('role : ' + this.state.role); */\n        let agent_status = 0;\n\n        if (this.state.switch1) {\n          agent_status = 1;\n        }\n\n        const a = {\n          agent_code: this.state.agent_code,\n          agent_lineup: this.state.agent_lineup,\n          agent_name: this.state.agent_name,\n          agent_detail: this.state.agent_detail,\n          agent_website: this.state.agent_website,\n          agent_master: this.state.agent_master,\n          agent_type: this.state.agent_type,\n          agent_percent: this.state.agent_percent,\n          agent_percent_aff: this.state.agent_percent_aff,\n          agent_percent_aff2: this.state.agent_percent_aff2,\n          agent_percent_aff3: this.state.agent_percent_aff3,\n          agent_percent_aff4: this.state.agent_percent_aff4,\n          agent_percent_aff5: this.state.agent_percent_aff5,\n          agent_comm: this.state.agent_comm,\n          agent_line_ad: this.state.agent_line_ad,\n          agent_line_token1: this.state.agent_line_token1,\n          agent_line_token2: this.state.agent_line_token2,\n          agent_line_token3: this.state.agent_line_token3,\n          agent_api_user: this.state.agent_api_user,\n          agent_api_password: this.state.agent_api_password,\n          agent_api_key: this.state.agent_api_key,\n          agent_status: agent_status\n        }; //console.log('auth : ' + a.role);\n\n        const res = await ServiceAgent.editAgent(a, this.state.agentid);\n        console.log('res : ' + res.data);\n\n        if (res.data.status === 2000) {\n          console.log('Edit Agent Success!!!');\n          this.dialog.show({\n            title: 'Slot Admin information',\n            body: 'Edit a agent : ' + a.agent_code + ' to system is successfully.',\n            actions: [Dialog.OKAction(() => {\n              //action('ok button was clicked!')()\n              Router.push(\"/agents\");\n            })]\n          });\n        } else {\n          this.dialog.showAlert(res.data.message);\n          this.setErrorMsg(res.data.msg);\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      agent_type: e.target.value\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceAgent.getAgentFromId(this.state.agentid).then(res => {\n      //console.log(\"res data=>\" + res.data);\n      const {\n        data,\n        status\n      } = res.data; //console.log(\"status=>\" + status);\n\n      if (status === 2000) {\n        //this.setState({ data: data });\n        console.log(\"edit data =>\" + JSON.stringify(data));\n        const {\n          agent_code,\n          agent_lineup,\n          agent_name,\n          agent_detail,\n          agent_website,\n          agent_master,\n          agent_type,\n          agent_percent,\n          agent_percent_aff,\n          agent_percent_aff2,\n          agent_percent_aff3,\n          agent_percent_aff4,\n          agent_percent_aff5,\n          agent_comm,\n          agent_line_ad,\n          agent_line_token1,\n          agent_line_token2,\n          agent_line_token3,\n          agent_api_user,\n          agent_api_password,\n          agent_api_key,\n          agent_status\n        } = data[0];\n        this.setState({\n          agent_code: agent_code,\n          agent_lineup: agent_lineup,\n          agent_name: agent_name,\n          agent_detail: agent_detail,\n          agent_website: agent_website,\n          agent_master: agent_master,\n          agent_type: agent_type,\n          agent_percent: agent_percent,\n          agent_percent_aff: agent_percent_aff,\n          agent_percent_aff2: agent_percent_aff2,\n          agent_percent_aff3: agent_percent_aff3,\n          agent_percent_aff4: agent_percent_aff4,\n          agent_percent_aff5: agent_percent_aff5,\n          agent_comm: agent_comm,\n          agent_line_ad: agent_line_ad,\n          agent_line_token1: agent_line_token1,\n          agent_line_token2: agent_line_token2,\n          agent_line_token3: agent_line_token3,\n          agent_api_user: agent_api_user,\n          agent_api_password: agent_api_password,\n          agent_api_key: agent_api_key,\n          switch1: Boolean(Number(agent_status))\n        }); //this.setState({ username: user_name, user_email: user_email, rolename: this.onSearchLevelname(user_level), switch1: Boolean(Number(user_status)) });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Edit Agents',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-id-badge\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"agent code\",\n      id: \"validation-ex1\",\n      onChange: e => this.setState({\n        agent_code: e.target.value\n      }),\n      value: this.state.agent_code,\n      required: true,\n      disabled: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\",\n      placeholder: \"agent lineup\",\n      onChange: e => this.setState({\n        agent_lineup: e.target.value\n      }),\n      value: this.state.agent_lineup,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\",\n      placeholder: \"agent name\",\n      onChange: e => this.setState({\n        agent_name: e.target.value\n      }),\n      value: this.state.agent_name,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\",\n      placeholder: \"agent detail\",\n      onChange: e => this.setState({\n        agent_detail: e.target.value\n      }),\n      value: this.state.agent_detail,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\",\n      placeholder: \"agent website\",\n      onChange: e => this.setState({\n        agent_website: e.target.value\n      }),\n      value: this.state.agent_website,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex6\",\n      placeholder: \"agent master\",\n      onChange: e => this.setState({\n        agent_master: e.target.value\n      }),\n      value: this.state.agent_master,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select agent type\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.agent_type,\n      onChange: this.handleSelectChange\n    }, __jsx(\"option\", {\n      value: \"Master\"\n    }, \"Master\"), __jsx(\"option\", {\n      value: \"Agent\"\n    }, \"Agent\")))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex7\",\n      placeholder: \"agent percent\",\n      onChange: e => this.setState({\n        agent_percent: e.target.value\n      }),\n      value: this.state.agent_percent,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex8\",\n      placeholder: \"agent percent aff\",\n      onChange: e => this.setState({\n        agent_percent_aff: e.target.value\n      }),\n      value: this.state.agent_percent_aff,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex9\",\n      placeholder: \"agent percent aff2\",\n      onChange: e => this.setState({\n        agent_percent_aff2: e.target.value\n      }),\n      value: this.state.agent_percent_aff2,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex10\",\n      placeholder: \"agent percent aff3\",\n      onChange: e => this.setState({\n        agent_percent_aff3: e.target.value\n      }),\n      value: this.state.agent_percent_aff3,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex11\",\n      placeholder: \"agent percent aff4\",\n      onChange: e => this.setState({\n        agent_percent_aff4: e.target.value\n      }),\n      value: this.state.agent_percent_aff4,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex12\",\n      placeholder: \"agent percent aff5\",\n      onChange: e => this.setState({\n        agent_percent_aff5: e.target.value\n      }),\n      value: this.state.agent_percent_aff5,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex13\",\n      placeholder: \"agent comm\",\n      onChange: e => this.setState({\n        agent_comm: e.target.value\n      }),\n      value: this.state.agent_comm,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex14\",\n      placeholder: \"agent line ad\",\n      onChange: e => this.setState({\n        agent_line_ad: e.target.value\n      }),\n      value: this.state.agent_line_ad,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex15\",\n      placeholder: \"agent line token1\",\n      onChange: e => this.setState({\n        agent_line_token1: e.target.value\n      }),\n      value: this.state.agent_line_token1,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex16\",\n      placeholder: \"agent line token2\",\n      onChange: e => this.setState({\n        agent_line_token2: e.target.value\n      }),\n      value: this.state.agent_line_token2,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex16\",\n      placeholder: \"agent line token3\",\n      onChange: e => this.setState({\n        agent_line_token3: e.target.value\n      }),\n      value: this.state.agent_line_token3,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex17\",\n      placeholder: \"agent api user\",\n      onChange: e => this.setState({\n        agent_api_user: e.target.value\n      }),\n      value: this.state.agent_api_user,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex18\",\n      placeholder: \"agent api password\",\n      onChange: e => this.setState({\n        agent_api_password: e.target.value\n      }),\n      value: this.state.agent_api_password,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex19\",\n      placeholder: \"agent api key\",\n      onChange: e => this.setState({\n        agent_api_key: e.target.value\n      }),\n      value: this.state.agent_api_key,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Agent status\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
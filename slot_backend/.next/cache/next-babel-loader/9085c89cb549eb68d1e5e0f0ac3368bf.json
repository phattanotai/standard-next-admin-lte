{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies, { getJSON } from \"js-cookie\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceGameService } from \"../../service\";\nimport { ServiceAgent } from \"../../service\";\nimport { ServiceGameList } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\nexport default class Brand extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      Cookies.set('service_index', nr);\n      this.dialog.show({\n        title: 'Slot Admin confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(() => {\n          this.dialog.hide();\n        }), Dialog.OKAction(() => {\n          const ind = Cookies.get('service_index');\n          Cookies.remove('service_index');\n          console.log('ind=>' + ind);\n          var arr = this.state.switch_arr;\n          arr[ind] = !arr[ind];\n          this.setState({\n            switch_arr: arr\n          });\n          console.log('handleSwitchChange=>' + arr);\n          var arr2 = this.state.brandname_arr;\n          console.log('this.state.brandname_arr=>' + arr2);\n          this.ListGame(arr2, arr);\n          this.editservice(arr, ind);\n        })],\n        bsSize: 'small',\n        onHide: dialog => {\n          this.dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    });\n\n    this.state = {\n      isLoading: true,\n      data_agent: [],\n      data_brand: [],\n      data: [],\n      rawdata: [],\n      data2: [],\n      rawdata2: [],\n      errorMessage: \"\",\n      role_data: [],\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\",\n      pagetotal2: 0,\n      pagenumber2: 0,\n      recordtotal2: 0,\n      rowperpage2: 10,\n      pagearr2: [],\n      startrow2: 0,\n      endrow2: 0,\n      searchtxt2: \"\",\n      agent: \"\",\n      switch_arr: [],\n      brandname_arr: [],\n      isDownLine: false\n    };\n    this.deleteBrand = this.deleteBrand.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\n    this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\n    this.handleSelectRowPerPageChange2 = this.handleSelectRowPerPageChange2.bind(this);\n    this.handleSelectPageNumberChange2 = this.handleSelectPageNumberChange2.bind(this);\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.handleSelectServiceRow = this.handleSelectServiceRow.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this);\n    this.onSearchClick2 = this.onSearchClick2.bind(this);\n    this.deleteService = this.deleteService.bind(this);\n  }\n\n  onSearchClick() {\n    this.setState({\n      searchtxt: e.target.value\n    });\n    var name = e.target.value;\n    var datalength = this.state.rawdata.length;\n\n    if (name != \"\") {\n      this.setState({\n        data: this.state.rawdata.filter(data => {\n          return data.brand_name.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata.filter(data => {\n        return data.brand_name.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data: this.state.rawdata\n      });\n    }\n\n    var page_remain = Math.floor(datalength / this.state.rowperpage);\n    var num = datalength % this.state.rowperpage;\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      recordtotal: datalength,\n      pagetotal: page_remain,\n      pagenumber: pagenum,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  onSearchClick2() {\n    this.setState({\n      searchtxt2: e.target.value\n    });\n    var name = e.target.value;\n    var datalength = this.state.rawdata2.length;\n\n    if (name != \"\") {\n      this.setState({\n        data2: this.state.rawdata2.filter(data => {\n          return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata2.filter(data => {\n        return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data2: this.state.rawdata2\n      });\n    }\n\n    var page_remain = Math.floor(datalength / this.state.rowperpage2);\n    var num = datalength % this.state.rowperpage2;\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * this.state.rowperpage2;\n    var endrow = startrow + this.state.rowperpage2;\n    this.setState({\n      recordtotal2: datalength,\n      pagetotal2: page_remain,\n      pagenumber2: pagenum,\n      pagearr2: arr,\n      startrow2: startrow,\n      endrow2: endrow\n    });\n  }\n\n  async editservice(switch_arr, index) {\n    let ser_status = 'Off';\n\n    if (switch_arr[index]) {\n      ser_status = 'On';\n    }\n\n    const {\n      _id\n    } = this.state.data[index];\n    console.log('service_id :' + _id);\n    const a = {\n      ser_status: ser_status\n    };\n    console.log('Set service status start...');\n    const res = await ServiceGameService.editService(a, _id);\n    console.log('res : ' + res.data);\n\n    if (res.data.status === 2000) {\n      console.log('Edit Service Success!!!');\n    } else {\n      this.dialog.showAlert(res.data.message);\n      this.setErrorMsg(res.data.msg);\n    }\n  }\n\n  async deleteService(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceGameService.deleteService(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete Service successfully.');\n        this.setState({\n          data: this.state.data.filter(game => {\n            return game._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(game => {\n            return game._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  async deleteBrand(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceBrand.deleteBrands(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete brand successfully.');\n        this.setState({\n          data: this.state.data.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    } //var data_agent_tmp = [];\n\n\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        }); //data_agent_tmp = data;\n\n        if (Cookies.get('serviceagent')) {\n          const agent_code = Cookies.get('serviceagent');\n          console.log('agent_code:' + agent_code);\n          var agent_name = \"\",\n              m;\n\n          for (m = 0; m < data.length; m++) {\n            console.log('tmp agent_code:' + data[m].agent_code);\n\n            if (data[m].agent_code == agent_code) {\n              agent_name = data[m].agent_name;\n            }\n          }\n\n          console.log('agent name:' + agent_name);\n          this.setState({\n            agent: agent_name\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data brand length : \" + data.length);\n        this.setState({\n          data_brand: data\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n\n    if (Cookies.get('serviceagent')) {\n      const agent_code = Cookies.get('serviceagent');\n      console.log('agent_code:' + agent_code);\n      ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data service length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var brandname_arr = [];\n          var sw_arr = [];\n          var j;\n\n          for (j = 0; j < data.length; j++) {\n            const {\n              ser_status\n            } = data[j];\n\n            if (ser_status == 'On') {\n              sw_arr.push(true);\n            } else {\n              sw_arr.push(false);\n            }\n\n            brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\n          }\n\n          console.log('sw_arr : ' + sw_arr);\n          this.setState({\n            switch_arr: sw_arr\n          });\n          this.setState({\n            brandname_arr: brandname_arr\n          });\n          this.ListGame(brandname_arr, sw_arr);\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }\n\n  setErrorMsg(msg) {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code;\n  }\n\n  SearchAgent_LineUp(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_lineup = agents.map((agent, index) => {\n      return agent.agent_lineup;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_lineup;\n  }\n\n  SearchAgentName(agentcode) {\n    console.log('get agent_name');\n    console.log('agent_code : ' + agentcode);\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_code == agentcode;\n    });\n    console.log('agents : ' + agents);\n    const agent_name = agents.map((agent, index) => {\n      return agent.agent_name;\n    });\n    console.log('agent_name:' + agent_name);\n    return agent_name;\n  }\n\n  handleSelectServiceRow(bandname) {\n    /* ServiceGameList.listGamesFromBrand(bandname).then((res) => {\r\n        console.log(res.data);\r\n        const { data, status } = res.data;\r\n        if (status === 2000) {\r\n            console.log(\"data game list length : \" + data.length);\r\n            this.setState({ data2: data });\r\n            \r\n        } else {\r\n            this.setErrorMsg(res.data.msg);\r\n        }\r\n    });  */\n  }\n\n  ListGame(brandname_arr, switch_arr) {\n    console.log('start list game');\n    ServiceGameList.listGames().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data game list length : \" + data.length);\n        var arr_data = [];\n        var i, j;\n\n        for (i = 0; i < data.length; i++) {\n          console.log('data[' + i + '].game_brand=>' + data[i].game_brand);\n\n          for (j = 0; j < brandname_arr.length; j++) {\n            console.log('brandname_arr[' + j + ']=>' + brandname_arr[j]);\n\n            if (brandname_arr[j] == data[i].game_brand) {\n              if (switch_arr[j]) {\n                arr_data.push(data[i]);\n              }\n            }\n          }\n        }\n\n        console.log('arr_data=>' + arr_data);\n        this.setState({\n          data2: arr_data\n        });\n        this.setState({\n          rawdata2: arr_data\n        });\n        var page_remain = Math.floor(arr_data.length / this.state.rowperpage2);\n        var num = arr_data.length % this.state.rowperpage2;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\n        var endrow = startrow + this.state.rowperpage2;\n        this.setState({\n          recordtotal2: arr_data.length,\n          pagetotal2: page_remain,\n          pagenumber2: pagenum,\n          pagearr2: arr,\n          startrow2: startrow,\n          endrow2: endrow\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  SearchBrand(brandcode) {\n    console.log('get brand name');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_code == brandcode;\n    });\n    const brand_name = brands.map((brand, index) => {\n      return brand.brand_name;\n    });\n    const brand_img = brands.map((brand, index) => {\n      return brand.brand_img;\n    });\n    return [brand_name, brand_img];\n  }\n\n  SearchBrandName(brandcode) {\n    console.log('get brand name');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_code == brandcode;\n    });\n    const brand_name = brands.map((brand, index) => {\n      return brand.brand_name;\n    });\n    return brand_name;\n  }\n\n  SearchBrandcode(brandname) {\n    console.log('get brand code');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_name == brandname;\n    });\n    const brand_code = brands.map((brand, index) => {\n      return brand.brand_code;\n    });\n    return brand_code;\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    this.setState({\n      data: []\n    });\n    this.setState({\n      rawdata: []\n    });\n    this.setState({\n      data2: []\n    });\n\n    if (e.target.value !== '---- Select Agent ----') {\n      const agent_lineup = this.SearchAgent_LineUp(e.target.value)[0];\n      const agent_code = this.SearchAgent(e.target.value)[0];\n      console.log('agent_lineup =>' + agent_lineup);\n      console.log('agent_code =>' + agent_code);\n      Cookies.set(\"serviceagent\", agent_code);\n\n      if (agent_lineup === \"\" || agent_lineup === \"-\") {\n        this.setState({\n          isDownLine: false\n        });\n        ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n          console.log(res.data);\n          const {\n            data,\n            status\n          } = res.data;\n\n          if (status === 2000) {\n            console.log(\"data length : \" + data.length);\n            this.setState({\n              data: data\n            });\n            this.setState({\n              rawdata: data\n            });\n            var brandname_arr = [];\n            var sw_arr = [];\n            var j;\n\n            for (j = 0; j < data.length; j++) {\n              const {\n                ser_status\n              } = data[j];\n\n              if (ser_status == 'On') {\n                sw_arr.push(true);\n              } else {\n                sw_arr.push(false);\n              }\n\n              brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\n            }\n\n            console.log('sw_arr : ' + sw_arr);\n            this.setState({\n              switch_arr: sw_arr\n            });\n            this.setState({\n              brandname_arr: brandname_arr\n            });\n            console.log('brandname_arr : ' + brandname_arr);\n            this.ListGame(brandname_arr, sw_arr);\n            var page_remain = Math.floor(data.length / this.state.rowperpage);\n            var num = data.length % this.state.rowperpage;\n\n            if (num > 0) {\n              page_remain++;\n            }\n\n            var arr = [];\n            var i;\n\n            for (i = 0; i < page_remain; i++) {\n              arr.push(i + 1);\n            }\n\n            var pagenum = 1;\n            var startrow = (pagenum - 1) * this.state.rowperpage;\n            var endrow = startrow + this.state.rowperpage;\n            this.setState({\n              recordtotal: data.length,\n              pagetotal: page_remain,\n              pagenumber: pagenum,\n              pagearr: arr,\n              startrow: startrow,\n              endrow: endrow\n            });\n          } else {\n            this.setErrorMsg(res.data.msg);\n          }\n        });\n      } else {\n        this.setState({\n          isDownLine: true\n        });\n        ServiceGameService.listServiceFromAgent(agent_lineup).then(res => {\n          console.log(res.data);\n          const {\n            data,\n            status\n          } = res.data;\n\n          if (status === 2000) {\n            console.log(\"data length : \" + data.length);\n            this.setState({\n              data: data\n            });\n            this.setState({\n              rawdata: data\n            });\n            var brandname_arr = [];\n            var sw_arr = [];\n            var j;\n\n            for (j = 0; j < data.length; j++) {\n              const {\n                ser_status\n              } = data[j];\n\n              if (ser_status == 'On') {\n                sw_arr.push(true);\n              } else {\n                sw_arr.push(false);\n              }\n\n              brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\n            }\n\n            console.log('sw_arr : ' + sw_arr);\n            this.setState({\n              switch_arr: sw_arr\n            });\n            this.setState({\n              brandname_arr: brandname_arr\n            });\n            console.log('brandname_arr : ' + brandname_arr);\n            this.ListGame(brandname_arr, sw_arr);\n            var page_remain = Math.floor(data.length / this.state.rowperpage);\n            var num = data.length % this.state.rowperpage;\n\n            if (num > 0) {\n              page_remain++;\n            }\n\n            var arr = [];\n            var i;\n\n            for (i = 0; i < page_remain; i++) {\n              arr.push(i + 1);\n            }\n\n            var pagenum = 1;\n            var startrow = (pagenum - 1) * this.state.rowperpage;\n            var endrow = startrow + this.state.rowperpage;\n            this.setState({\n              recordtotal: data.length,\n              pagetotal: page_remain,\n              pagenumber: pagenum,\n              pagearr: arr,\n              startrow: startrow,\n              endrow: endrow\n            });\n          } else {\n            this.setErrorMsg(res.data.msg);\n          }\n        });\n      }\n    } else {\n      Cookies.remove('serviceagent');\n    }\n  }\n\n  handleSelectRowPerPageChange(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data: this.state.data,\n      pagetotal: page_remain,\n      pagenumber: 1,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  handleSelectRowPerPageChange2(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage2: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal2 / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal2 % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data2: this.state.data2,\n      pagetotal2: page_remain,\n      pagenumber2: 1,\n      pagearr2: arr,\n      startrow2: startrow,\n      endrow2: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange2(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber2: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage2;\n    var endrow = startrow + this.state.rowperpage2;\n    this.setState({\n      startrow2: startrow,\n      endrow2: endrow\n    });\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Game Service',\n      contentTitleButton: __jsx(Link, {\n        href: \"/game_service/add\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\"\n      }, __jsx(\"i\", {\n        className: \"fa fa fa-exchange fa-fw\"\n      }), \" Add a new Service\")),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Select Agents\", __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.agent,\n      onChange: this.handleSelectAgentChange\n    }, __jsx(\"option\", {\n      value: \"All\"\n    }, \"---- Select Agent ----\"), this.state.data_agent.map((agent, index) => {\n      return __jsx(\"option\", {\n        value: agent.agent_name,\n        key: index\n      }, agent.agent_name);\n    }))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage,\n      onChange: this.handleSelectRowPerPageChange\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber,\n      onChange: this.handleSelectPageNumberChange\n    }, this.state.pagearr.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search brand\",\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          this.setState({\n            data: this.state.rawdata.filter(data => {\n              return data.brand_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(data => {\n            return data.brand_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\n        var num = datalength % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: datalength,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      },\n      value: this.state.searchtxt\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover table-striped table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"ON/OFF\"), __jsx(\"th\", null, \"Logo\"), __jsx(\"th\", null, \"Brand\"), __jsx(\"th\", null, \"Agent\"), __jsx(\"th\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, \" Detail / Edit / Delete \"))), __jsx(\"tbody\", null, this.state.data.map((ser, index) => {\n      let brand = this.SearchBrand(ser.brand_code);\n      console.log('brand : ' + brand);\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (ser.ser_status === 'On') {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) return __jsx(\"tr\", {\n        key: index,\n        onClick: this.handleSelectServiceRow(ser.brand_code)\n      }, __jsx(\"td\", null, __jsx(\"div\", {\n        style: {\n          display: !this.state.isDownLine ? 'block' : 'none'\n        }\n      }, __jsx(\"label\", {\n        class: \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(index),\n        checked: this.state.switch_arr[index]\n      }), __jsx(\"span\", {\n        class: \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0On\"))), __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"img\", {\n        src: brand[1] ? ServiceImage.imageshow(brand[1]) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n        style: {\n          flex: 1,\n          width: \"100px\",\n          height: null,\n          resizeMode: 'contain'\n        }\n      })), __jsx(\"td\", {\n        className: \"py-1\"\n      }, brand[0]), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.SearchAgentName(ser.agent_code)), __jsx(\"td\", {\n        className: \"py-1\",\n        style: {\n          textAlign: \"right\"\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success btn-icon-text\",\n        onClick: () => {\n          Cookies.set(\"serid\", ser._id);\n          const brand = this.SearchBrandName(ser.brand_code);\n          console.log('brand name => ' + [0]);\n          Cookies.set(\"ser_brandname\", brand[0]);\n          Router.push(\"/game_service/description\");\n        },\n        style: {\n          marginLeft: 5,\n          width: 80\n        }\n      }, \"Detail\"), \"\\xA0\", __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning btn-icon-text\",\n        onClick: () => {\n          Cookies.set(\"serid\", ser._id);\n          const brand = this.SearchBrandName(ser.brand_code);\n          console.log('brand name => ' + [0]);\n          Cookies.set(\"ser_brandname\", brand[0]);\n          Router.push(\"/game_service/edit\");\n        },\n        style: {\n          width: 80,\n          display: this.state.isDownLine ? 'none' : ''\n        }\n      }, \"Edit\"), __jsx(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.dialog.show({\n            title: 'Slot Admin confirm',\n            body: 'Are you sure?',\n            actions: [Dialog.CancelAction(() => {\n              this.dialog.hide();\n            }), Dialog.OKAction(() => {\n              ///console.log(\"delete userid\" + agent._id);\n              this.deleteService(ser._id);\n            })],\n            bsSize: 'small',\n            onHide: dialog => {\n              this.dialog.hide();\n              console.log('closed by clicking background.');\n            }\n          });\n        },\n        style: {\n          marginLeft: 5,\n          width: 80,\n          display: !this.state.isDownLine ? 'block' : 'none'\n        },\n        className: \"btn btn-danger btn-icon-text\"\n      }, \"Delete\")));\n    })))))), __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"h4\", null, \"Games List for Agent : \", this.state.agent), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage2,\n      onChange: this.handleSelectRowPerPageChange2\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber2,\n      onChange: this.handleSelectPageNumberChange2\n    }, this.state.pagearr2.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search game code / name\",\n      onChange: e => {\n        this.setState({\n          searchtxt2: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata2.length;\n\n        if (name != \"\") {\n          this.setState({\n            data2: this.state.rawdata2.filter(data => {\n              return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata2.filter(data => {\n            return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data2: this.state.rawdata2\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage2);\n        var num = datalength % this.state.rowperpage2;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\n        var endrow = startrow + this.state.rowperpage2;\n        this.setState({\n          recordtotal2: datalength,\n          pagetotal2: page_remain,\n          pagenumber2: pagenum,\n          pagearr2: arr,\n          startrow2: startrow,\n          endrow2: endrow\n        });\n      },\n      value: this.state.searchtxt2\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick2\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover table-striped table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Type\"))), __jsx(\"tbody\", null, this.state.data2.map((game, index) => {\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (game.game_status == 1) {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"label\", {\n          className: `badge badge-info`,\n          style: {\n            display: game.game_new === 'Yes' ? 'block' : 'none'\n          }\n        }, \"new\"), \" \", __jsx(\"label\", {\n          className: `badge badge-${classBadge}`,\n          style: {\n            display: 'block'\n          }\n        }, mystatus)), __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"img\", {\n          src: game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n          style: {\n            flex: 1,\n            width: \"80px\",\n            height: null,\n            resizeMode: 'contain'\n          }\n        })), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_code), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_name), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_type));\n    })))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/game_service/index.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Router","Cookies","getJSON","ServiceBrand","ServiceImage","ServiceGameService","ServiceAgent","ServiceGameList","Dialog","MDBContainer","Brand","Component","constructor","props","nr","set","dialog","show","title","body","actions","CancelAction","hide","OKAction","ind","get","remove","console","log","arr","state","switch_arr","setState","arr2","brandname_arr","ListGame","editservice","bsSize","onHide","isLoading","data_agent","data_brand","data","rawdata","data2","rawdata2","errorMessage","role_data","pagetotal","pagenumber","recordtotal","rowperpage","pagearr","startrow","endrow","searchtxt","pagetotal2","pagenumber2","recordtotal2","rowperpage2","pagearr2","startrow2","endrow2","searchtxt2","agent","isDownLine","deleteBrand","bind","setErrorMsg","handleSelectRowPerPageChange","handleSelectPageNumberChange","handleSelectRowPerPageChange2","handleSelectPageNumberChange2","handleSelectAgentChange","handleSelectServiceRow","handleSwitchChange","onSearchClick","onSearchClick2","deleteService","e","target","value","name","datalength","length","filter","brand_name","indexOf","page_remain","Math","floor","num","i","push","pagenum","game_name","game_code","index","ser_status","_id","a","res","editService","status","showAlert","message","msg","id","game","error","deleteBrands","brand","componentDidMount","listAgent","then","agent_code","agent_name","m","listBrands","listServiceFromAgent","sw_arr","j","SearchBrand","brand_code","SearchAgent","agents","map","SearchAgent_LineUp","agent_lineup","SearchAgentName","agentcode","bandname","listGames","arr_data","game_brand","brandcode","brands","brand_img","SearchBrandName","SearchBrandcode","brandname","preventDefault","forceUpdate","render","url","p","width","textAlign","ser","classBadge","mystatus","display","imageshow","flex","height","resizeMode","marginLeft","game_status","game_new","game_img","game_type","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies, { getJSON } from \"js-cookie\";\r\nimport { ServiceBrand } from \"../../service\";\r\nimport { ServiceImage } from \"../../service\";\r\nimport { ServiceGameService } from \"../../service\";\r\nimport { ServiceAgent } from \"../../service\";\r\nimport { ServiceGameList } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nimport { MDBContainer } from 'mdbreact';\r\n\r\nexport default class Brand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data_agent: [],\r\n            data_brand: [],\r\n\r\n            data: [],\r\n            rawdata: [],\r\n\r\n            data2: [],\r\n            rawdata2: [],\r\n\r\n            errorMessage: \"\",\r\n\r\n            role_data: [],\r\n\r\n            pagetotal: 0,\r\n            pagenumber: 0,\r\n            recordtotal: 0,\r\n            rowperpage: 10,\r\n            pagearr: [],\r\n            startrow: 0,\r\n            endrow: 0,\r\n            searchtxt: \"\",\r\n\r\n            pagetotal2: 0,\r\n            pagenumber2: 0,\r\n            recordtotal2: 0,\r\n            rowperpage2: 10,\r\n            pagearr2: [],\r\n            startrow2: 0,\r\n            endrow2: 0,\r\n            searchtxt2: \"\",\r\n\r\n            agent: \"\",\r\n\r\n            switch_arr: [],\r\n            brandname_arr: [],\r\n            isDownLine: false,\r\n\r\n        };\r\n        this.deleteBrand = this.deleteBrand.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\r\n        this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\r\n\r\n        this.handleSelectRowPerPageChange2 = this.handleSelectRowPerPageChange2.bind(this);\r\n        this.handleSelectPageNumberChange2 = this.handleSelectPageNumberChange2.bind(this);\r\n\r\n        this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\r\n\r\n        this.handleSelectServiceRow = this.handleSelectServiceRow.bind(this);\r\n\r\n\r\n        this.handleSwitchChange = this.handleSwitchChange.bind(this);\r\n\r\n        this.onSearchClick = this.onSearchClick.bind(this);\r\n\r\n        this.onSearchClick2 = this.onSearchClick2.bind(this);\r\n\r\n        this.deleteService = this.deleteService.bind(this);\r\n\r\n    }\r\n\r\n    onSearchClick() {\r\n        this.setState({ searchtxt: e.target.value });\r\n        var name = e.target.value;\r\n        var datalength = this.state.rawdata.length;\r\n        if (name != \"\") {\r\n            this.setState({\r\n                data: this.state.rawdata.filter((data) => {\r\n                    return data.brand_name.indexOf(name) !== -1;\r\n                })\r\n            });\r\n            datalength = this.state.rawdata.filter((data) => {\r\n                return data.brand_name.indexOf(name) !== -1;\r\n            }).length;\r\n        } else {\r\n            this.setState({\r\n                data: this.state.rawdata\r\n            });\r\n        }\r\n\r\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\r\n        var num = datalength % this.state.rowperpage;\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n        var endrow = startrow + this.state.rowperpage;\r\n        this.setState({ recordtotal: datalength, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n    }\r\n\r\n    onSearchClick2() {\r\n        this.setState({ searchtxt2: e.target.value });\r\n        var name = e.target.value;\r\n        var datalength = this.state.rawdata2.length;\r\n        if (name != \"\") {\r\n            this.setState({\r\n                data2: this.state.rawdata2.filter((data) => {\r\n                    return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\r\n                })\r\n            });\r\n            datalength = this.state.rawdata2.filter((data) => {\r\n                return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\r\n            }).length;\r\n        } else {\r\n            this.setState({\r\n                data2: this.state.rawdata2\r\n            });\r\n        }\r\n\r\n        var page_remain = Math.floor(datalength / this.state.rowperpage2);\r\n        var num = datalength % this.state.rowperpage2;\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\r\n        var endrow = startrow + this.state.rowperpage2;\r\n        this.setState({ recordtotal2: datalength, pagetotal2: page_remain, pagenumber2: pagenum, pagearr2: arr, startrow2: startrow, endrow2: endrow });\r\n    }\r\n\r\n    async editservice(switch_arr, index) {\r\n        let ser_status = 'Off';\r\n        if (switch_arr[index]) {\r\n            ser_status = 'On';\r\n        }\r\n        const { _id } = this.state.data[index];\r\n        console.log('service_id :' + _id)\r\n        const a = { ser_status: ser_status };\r\n        console.log('Set service status start...');\r\n        const res = await ServiceGameService.editService(a, _id);\r\n        console.log('res : ' + res.data);\r\n        if (res.data.status === 2000) {\r\n            console.log('Edit Service Success!!!');\r\n        } else {\r\n            this.dialog.showAlert(res.data.message);\r\n            this.setErrorMsg(res.data.msg);\r\n        }\r\n    }\r\n\r\n    async deleteService(id) {\r\n        if (this.state.errorMessage) this.setErrorMsg(\"\");\r\n        try {\r\n            const res = await ServiceGameService.deleteService(id);\r\n            if (res.data.status === 2000) {\r\n                console.log('delete Service successfully.');\r\n                this.setState({\r\n                    data: this.state.data.filter((game) => {\r\n                        return game._id !== id;\r\n                    })\r\n                });\r\n                this.setState({\r\n                    rawdata: this.state.rawdata.filter((game) => {\r\n                        return game._id !== id;\r\n                    })\r\n                });\r\n            } else {\r\n                this.setErrorMsg(res.data.message);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n            this.dialog.showAlert(error);\r\n        }\r\n    }\r\n\r\n\r\n    handleSwitchChange = nr => () => {\r\n        Cookies.set('service_index', nr);\r\n        this.dialog.show({\r\n            title: 'Slot Admin confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    this.dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n                    const ind = Cookies.get('service_index');\r\n                    Cookies.remove('service_index');\r\n                    console.log('ind=>' + ind);\r\n                    var arr = this.state.switch_arr;\r\n                    arr[ind] = !arr[ind];\r\n                    this.setState({ switch_arr: arr });\r\n                    console.log('handleSwitchChange=>' + arr);\r\n                    var arr2 = this.state.brandname_arr;\r\n                    console.log('this.state.brandname_arr=>' + arr2);\r\n                    this.ListGame(arr2, arr);\r\n\r\n                    this.editservice(arr, ind);\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                this.dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    async deleteBrand(id) {\r\n        if (this.state.errorMessage) this.setErrorMsg(\"\");\r\n        try {\r\n            const res = await ServiceBrand.deleteBrands(id);\r\n            if (res.data.status === 2000) {\r\n                console.log('delete brand successfully.');\r\n                this.setState({\r\n                    data: this.state.data.filter((brand) => {\r\n                        return brand._id !== id;\r\n                    })\r\n                });\r\n                this.setState({\r\n                    rawdata: this.state.rawdata.filter((brand) => {\r\n                        return brand._id !== id;\r\n                    })\r\n                });\r\n            } else {\r\n                this.setErrorMsg(res.data.message);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n            this.dialog.showAlert(error);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        //var data_agent_tmp = [];\r\n\r\n        ServiceAgent.listAgent().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data agent length : \" + data.length);\r\n                this.setState({ data_agent: data });\r\n                //data_agent_tmp = data;\r\n                if (Cookies.get('serviceagent')) {\r\n                    const agent_code = Cookies.get('serviceagent');\r\n                    console.log('agent_code:' + agent_code);\r\n                    var agent_name = \"\", m;\r\n                    for (m = 0; m < data.length; m++) {\r\n                        console.log('tmp agent_code:' + data[m].agent_code);\r\n                        if (data[m].agent_code == agent_code) {\r\n                            agent_name = data[m].agent_name;\r\n                        }\r\n                    }\r\n                    console.log('agent name:' + agent_name);\r\n                    this.setState({ agent: agent_name });\r\n                }\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data brand length : \" + data.length);\r\n                this.setState({ data_brand: data });\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n        if (Cookies.get('serviceagent')) {\r\n            const agent_code = Cookies.get('serviceagent');\r\n            console.log('agent_code:' + agent_code);\r\n            ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                console.log(res.data);\r\n                const { data, status } = res.data;\r\n                if (status === 2000) {\r\n                    console.log(\"data service length : \" + data.length);\r\n                    this.setState({ data: data });\r\n                    this.setState({ rawdata: data });\r\n\r\n                    var brandname_arr = [];\r\n                    var sw_arr = [];\r\n                    var j;\r\n                    for (j = 0; j < data.length; j++) {\r\n                        const { ser_status } = data[j];\r\n                        if (ser_status == 'On') {\r\n                            sw_arr.push(true);\r\n                        } else {\r\n                            sw_arr.push(false);\r\n                        }\r\n                        brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\r\n                    }\r\n                    console.log('sw_arr : ' + sw_arr);\r\n                    this.setState({ switch_arr: sw_arr });\r\n                    this.setState({ brandname_arr: brandname_arr });\r\n                    this.ListGame(brandname_arr, sw_arr);\r\n\r\n                    var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                    var num = data.length % this.state.rowperpage;\r\n                    if (num > 0) {\r\n                        page_remain++;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    var i;\r\n                    for (i = 0; i < page_remain; i++) {\r\n                        arr.push(i + 1);\r\n                    }\r\n                    var pagenum = 1;\r\n                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                    var endrow = startrow + this.state.rowperpage;\r\n                    this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                } else {\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    SearchAgent(agent_name) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agent_code = agents.map((agent, index) => {\r\n            return agent.agent_code;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_code;\r\n    }\r\n\r\n    SearchAgent_LineUp(agent_name) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n    SearchAgentName(agentcode) {\r\n        console.log('get agent_name');\r\n        console.log('agent_code : ' + agentcode);\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_code == agentcode;\r\n        })\r\n\r\n\r\n        console.log('agents : ' + agents);\r\n        const agent_name = agents.map((agent, index) => {\r\n            return agent.agent_name;\r\n        })\r\n        console.log('agent_name:' + agent_name);\r\n        return agent_name;\r\n    }\r\n\r\n\r\n\r\n    handleSelectServiceRow(bandname) {\r\n        /* ServiceGameList.listGamesFromBrand(bandname).then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data game list length : \" + data.length);\r\n                this.setState({ data2: data });\r\n                \r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });  */\r\n    }\r\n\r\n    ListGame(brandname_arr, switch_arr) {\r\n        console.log('start list game');\r\n        ServiceGameList.listGames().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data game list length : \" + data.length);\r\n                var arr_data = [];\r\n                var i, j;\r\n                for (i = 0; i < data.length; i++) {\r\n                    console.log('data[' + i + '].game_brand=>' + data[i].game_brand);\r\n                    for (j = 0; j < brandname_arr.length; j++) {\r\n                        console.log('brandname_arr[' + j + ']=>' + brandname_arr[j]);\r\n                        if (brandname_arr[j] == data[i].game_brand) {\r\n                            if (switch_arr[j]) {\r\n                                arr_data.push(data[i]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                console.log('arr_data=>' + arr_data);\r\n                this.setState({ data2: arr_data });\r\n                this.setState({ rawdata2: arr_data });\r\n\r\n                var page_remain = Math.floor(arr_data.length / this.state.rowperpage2);\r\n                var num = arr_data.length % this.state.rowperpage2;\r\n                if (num > 0) {\r\n                    page_remain++;\r\n                }\r\n\r\n                var arr = [];\r\n                var i;\r\n                for (i = 0; i < page_remain; i++) {\r\n                    arr.push(i + 1);\r\n                }\r\n                var pagenum = 1;\r\n                var startrow = (pagenum - 1) * this.state.rowperpage2;\r\n                var endrow = startrow + this.state.rowperpage2;\r\n                this.setState({ recordtotal2: arr_data.length, pagetotal2: page_remain, pagenumber2: pagenum, pagearr2: arr, startrow2: startrow, endrow2: endrow });\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    SearchBrand(brandcode) {\r\n        console.log('get brand name');\r\n        const brands = this.state.data_brand.filter((brand) => {\r\n            return brand.brand_code == brandcode;\r\n        })\r\n\r\n        const brand_name = brands.map((brand, index) => {\r\n            return brand.brand_name;\r\n        })\r\n        const brand_img = brands.map((brand, index) => {\r\n            return brand.brand_img;\r\n        })\r\n\r\n        return [brand_name, brand_img];\r\n    }\r\n\r\n    SearchBrandName(brandcode) {\r\n        console.log('get brand name');\r\n        const brands = this.state.data_brand.filter((brand) => {\r\n            return brand.brand_code == brandcode;\r\n        })\r\n\r\n        const brand_name = brands.map((brand, index) => {\r\n            return brand.brand_name;\r\n        })\r\n\r\n        return brand_name\r\n    }\r\n\r\n    SearchBrandcode(brandname) {\r\n        console.log('get brand code');\r\n        const brands = this.state.data_brand.filter((brand) => {\r\n            return brand.brand_name == brandname;\r\n        })\r\n\r\n        const brand_code = brands.map((brand, index) => {\r\n            return brand.brand_code;\r\n        })\r\n\r\n        return brand_code;\r\n    }\r\n\r\n    handleSelectAgentChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ agent: e.target.value });\r\n        this.setState({ data: [] });\r\n        this.setState({ rawdata: [] });\r\n        this.setState({ data2: [] });\r\n        if (e.target.value !== '---- Select Agent ----') {\r\n            const agent_lineup = this.SearchAgent_LineUp(e.target.value)[0];\r\n            const agent_code = this.SearchAgent(e.target.value)[0];\r\n            console.log('agent_lineup =>' + agent_lineup);\r\n            console.log('agent_code =>' + agent_code);\r\n            Cookies.set(\"serviceagent\", agent_code);\r\n            if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                this.setState({ isDownLine: false });\r\n                ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                    console.log(res.data);\r\n                    const { data, status } = res.data;\r\n                    if (status === 2000) {\r\n                        console.log(\"data length : \" + data.length);\r\n                        this.setState({ data: data });\r\n                        this.setState({ rawdata: data });\r\n\r\n                        var brandname_arr = [];\r\n                        var sw_arr = [];\r\n                        var j;\r\n                        for (j = 0; j < data.length; j++) {\r\n                            const { ser_status } = data[j];\r\n                            if (ser_status == 'On') {\r\n                                sw_arr.push(true);\r\n                            } else {\r\n                                sw_arr.push(false);\r\n                            }\r\n                            brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\r\n                        }\r\n                        console.log('sw_arr : ' + sw_arr);\r\n                        this.setState({ switch_arr: sw_arr });\r\n                        this.setState({ brandname_arr: brandname_arr });\r\n                        console.log('brandname_arr : ' + brandname_arr);\r\n                        this.ListGame(brandname_arr, sw_arr);\r\n\r\n\r\n                        var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                        var num = data.length % this.state.rowperpage;\r\n                        if (num > 0) {\r\n                            page_remain++;\r\n                        }\r\n\r\n                        var arr = [];\r\n                        var i;\r\n                        for (i = 0; i < page_remain; i++) {\r\n                            arr.push(i + 1);\r\n                        }\r\n                        var pagenum = 1;\r\n                        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                        var endrow = startrow + this.state.rowperpage;\r\n                        this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({ isDownLine: true });\r\n                ServiceGameService.listServiceFromAgent(agent_lineup).then((res) => {\r\n                    console.log(res.data);\r\n                    const { data, status } = res.data;\r\n                    if (status === 2000) {\r\n                        console.log(\"data length : \" + data.length);\r\n                        this.setState({ data: data });\r\n                        this.setState({ rawdata: data });\r\n\r\n                        var brandname_arr = [];\r\n                        var sw_arr = [];\r\n                        var j;\r\n                        for (j = 0; j < data.length; j++) {\r\n                            const { ser_status } = data[j];\r\n                            if (ser_status == 'On') {\r\n                                sw_arr.push(true);\r\n                            } else {\r\n                                sw_arr.push(false);\r\n                            }\r\n                            brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\r\n                        }\r\n                        console.log('sw_arr : ' + sw_arr);\r\n                        this.setState({ switch_arr: sw_arr });\r\n                        this.setState({ brandname_arr: brandname_arr });\r\n                        console.log('brandname_arr : ' + brandname_arr);\r\n                        this.ListGame(brandname_arr, sw_arr);\r\n\r\n\r\n                        var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                        var num = data.length % this.state.rowperpage;\r\n                        if (num > 0) {\r\n                            page_remain++;\r\n                        }\r\n\r\n                        var arr = [];\r\n                        var i;\r\n                        for (i = 0; i < page_remain; i++) {\r\n                            arr.push(i + 1);\r\n                        }\r\n                        var pagenum = 1;\r\n                        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                        var endrow = startrow + this.state.rowperpage;\r\n                        this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                });\r\n            }\r\n\r\n        } else {\r\n            Cookies.remove('serviceagent');\r\n        }\r\n\r\n    }\r\n\r\n    handleSelectRowPerPageChange(e) {\r\n        e.preventDefault();\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rowperpage: e.target.value });\r\n        var page_remain = Math.floor(this.state.recordtotal / e.target.value);\r\n        console.log(\"pagetotal : \" + page_remain);\r\n        var num = this.state.recordtotal % e.target.value;\r\n        console.log(\"num : \" + num);\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        console.log(\"arr : \" + arr);\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * e.target.value;\r\n        var endrow = startrow + e.target.value;\r\n        this.setState({ pagearr: [] });\r\n        console.log(\"startrow : \" + startrow);\r\n        console.log(\"endrow : \" + endrow);\r\n        this.setState({ data: this.state.data, pagetotal: page_remain, pagenumber: 1, pagearr: arr, startrow: startrow, endrow: endrow });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSelectPageNumberChange(e) {\r\n        e.preventDefault();\r\n        this.setState({ pagenumber: e.target.value });\r\n        var pagenum = e.target.value;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n        var endrow = startrow + this.state.rowperpage;\r\n        this.setState({ startrow: startrow, endrow: endrow });\r\n    }\r\n\r\n    handleSelectRowPerPageChange2(e) {\r\n        e.preventDefault();\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rowperpage2: e.target.value });\r\n        var page_remain = Math.floor(this.state.recordtotal2 / e.target.value);\r\n        console.log(\"pagetotal : \" + page_remain);\r\n        var num = this.state.recordtotal2 % e.target.value;\r\n        console.log(\"num : \" + num);\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        console.log(\"arr : \" + arr);\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * e.target.value;\r\n        var endrow = startrow + e.target.value;\r\n        this.setState({ pagearr: [] });\r\n        console.log(\"startrow : \" + startrow);\r\n        console.log(\"endrow : \" + endrow);\r\n        this.setState({ data2: this.state.data2, pagetotal2: page_remain, pagenumber2: 1, pagearr2: arr, startrow2: startrow, endrow2: endrow });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSelectPageNumberChange2(e) {\r\n        e.preventDefault();\r\n        this.setState({ pagenumber2: e.target.value });\r\n        var pagenum = e.target.value;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\r\n        var endrow = startrow + this.state.rowperpage2;\r\n        this.setState({ startrow2: startrow, endrow2: endrow });\r\n    }\r\n\r\n    render() {\r\n        return <AdminLayoutHoc\r\n            contentTitle={'Game Service'}\r\n            contentTitleButton={<Link href=\"/game_service/add\">\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm\"><i className=\"fa fa fa-exchange fa-fw\" /> Add a new Service</button>\r\n            </Link>}\r\n            url={this.props.url}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {/* <h3 className=\"card-title\">Current users</h3> */}\r\n                            <MDBContainer>\r\n                                <div className=\"wrapper\">\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Select Agents\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.agent} onChange={this.handleSelectAgentChange}>\r\n                                            <option value='All'>---- Select Agent ----</option>\r\n                                            {\r\n                                                this.state.data_agent.map((agent, index) => {\r\n                                                    return (\r\n                                                        <option value={agent.agent_name} key={index}>{agent.agent_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Row per page\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.rowperpage} onChange={this.handleSelectRowPerPageChange}>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='35'>35</option>\r\n                                            <option value='40'>40</option>\r\n                                            <option value='45'>45</option>\r\n                                            <option value='50'>50</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        PageNumber\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.pagenumber} onChange={this.handleSelectPageNumberChange}>\r\n                                            {\r\n                                                this.state.pagearr.map((p, index) => {\r\n                                                    return (\r\n                                                        <option value={p} key={index}>{p}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"card-tools d-inline-block\">\r\n                                        <div className=\"input-group input-group-sm\" style={{ width: '100%' }}>\r\n                                            <input type=\"text\" name=\"table_search\"\r\n                                                className=\"form-control float-right\"\r\n                                                placeholder=\"Search brand\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ searchtxt: e.target.value });\r\n                                                    var name = e.target.value;\r\n                                                    var datalength = this.state.rawdata.length;\r\n                                                    if (name != \"\") {\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata.filter((data) => {\r\n                                                                return data.brand_name.indexOf(name) !== -1;\r\n                                                            })\r\n                                                        });\r\n                                                        datalength = this.state.rawdata.filter((data) => {\r\n                                                            return data.brand_name.indexOf(name) !== -1;\r\n                                                        }).length;\r\n                                                    } else {\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata\r\n                                                        });\r\n                                                    }\r\n\r\n                                                    var page_remain = Math.floor(datalength / this.state.rowperpage);\r\n                                                    var num = datalength % this.state.rowperpage;\r\n                                                    if (num > 0) {\r\n                                                        page_remain++;\r\n                                                    }\r\n\r\n                                                    var arr = [];\r\n                                                    var i;\r\n                                                    for (i = 0; i < page_remain; i++) {\r\n                                                        arr.push(i + 1);\r\n                                                    }\r\n                                                    var pagenum = 1;\r\n                                                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                                                    var endrow = startrow + this.state.rowperpage;\r\n                                                    this.setState({ recordtotal: datalength, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                                                }}\r\n                                                value={this.state.searchtxt} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-default\"><i className=\"fa fa-search\" onClick={this.onSearchClick} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBContainer>\r\n\r\n                        </div>\r\n                        <div className=\"card-body table-responsive p-0\">\r\n                            <table className=\"table table-hover table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ON/OFF</th>\r\n                                        <th>Logo</th>\r\n                                        <th>Brand</th>\r\n                                        <th>Agent</th>\r\n                                        <th style={{ textAlign: \"right\" }}> Detail / Edit / Delete </th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.data.map((ser, index) => {\r\n                                        let brand = this.SearchBrand(ser.brand_code);\r\n\r\n                                        console.log('brand : ' + brand);\r\n                                        let classBadge = 'danger';\r\n                                        let mystatus = 'disable';\r\n                                        if (ser.ser_status === 'On') {\r\n                                            classBadge = 'success';\r\n                                            mystatus = 'enable';\r\n                                        }\r\n                                        if (index >= this.state.startrow && index < this.state.endrow)\r\n                                            return (\r\n                                                <tr key={index} onClick={this.handleSelectServiceRow(ser.brand_code)}>\r\n                                                    <td>\r\n                                                        <div style={{ display: !this.state.isDownLine ? 'block' : 'none' }}>\r\n                                                            <label class=\"switch\" >\r\n                                                                <input type=\"checkbox\" onChange={this.handleSwitchChange(index)} checked={this.state.switch_arr[index]} />\r\n                                                                <span class=\"slider round\"></span>\r\n                                                            </label>\r\n                                                            <label className=\"control-label\">&nbsp;On</label>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">\r\n                                                        <img\r\n                                                            src={brand[1] ? ServiceImage.imageshow(brand[1]) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\")}\r\n                                                            style={{\r\n                                                                flex: 1,\r\n                                                                width: \"100px\",\r\n                                                                height: null,\r\n                                                                resizeMode: 'contain'\r\n                                                            }}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">{brand[0]}</td>\r\n                                                    <td className=\"py-1\">{this.SearchAgentName(ser.agent_code)}</td>\r\n                                                    <td className=\"py-1\" style={{ textAlign: \"right\" }}>\r\n\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-success btn-icon-text\"\r\n                                                            onClick={() => {                                                                \r\n                                                                Cookies.set(\"serid\", ser._id);\r\n                                                                const brand = this.SearchBrandName(ser.brand_code);\r\n                                                                console.log('brand name => ' + [0]);\r\n                                                                Cookies.set(\"ser_brandname\", brand[0]);\r\n                                                                Router.push(\"/game_service/description\");\r\n\r\n                                                            }}\r\n                                                            style={{ marginLeft: 5, width: 80 }}                                                        \r\n                                                        >\r\n                                                            Detail\r\n                                                        </button>&nbsp;\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-warning btn-icon-text\"\r\n                                                            onClick={() => {                                                                \r\n                                                                Cookies.set(\"serid\", ser._id);\r\n                                                                const brand = this.SearchBrandName(ser.brand_code);\r\n                                                                console.log('brand name => ' + [0]);\r\n                                                                Cookies.set(\"ser_brandname\", brand[0]);\r\n                                                                Router.push(\"/game_service/edit\");\r\n\r\n                                                            }}\r\n                                                            style={{ width: 80 ,display: this.state.isDownLine ? 'none' : ''}}                                                        \r\n                                                        >\r\n                                                            Edit\r\n                                                        </button>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => {\r\n                                                                this.dialog.show({\r\n                                                                    title: 'Slot Admin confirm',\r\n                                                                    body: 'Are you sure?',\r\n                                                                    actions: [\r\n                                                                        Dialog.CancelAction(() => {\r\n                                                                            this.dialog.hide();\r\n                                                                        }),\r\n                                                                        Dialog.OKAction(() => {\r\n                                                                            ///console.log(\"delete userid\" + agent._id);\r\n                                                                            this.deleteService(ser._id);\r\n                                                                        })\r\n                                                                    ],\r\n                                                                    bsSize: 'small',\r\n                                                                    onHide: (dialog) => {\r\n                                                                        this.dialog.hide()\r\n                                                                        console.log('closed by clicking background.')\r\n                                                                    }\r\n                                                                })\r\n                                                            }}\r\n                                                            style={{ marginLeft: 5, width: 80 ,display: !this.state.isDownLine ? 'block' : 'none'}}\r\n                                                            className=\"btn btn-danger btn-icon-text\"\r\n                                                        >\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {/* <h3 className=\"card-title\">Current users</h3> */}\r\n                            <MDBContainer>\r\n                                <div className=\"wrapper\">\r\n                                    <h4>Games List for Agent : {this.state.agent}</h4>\r\n\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Row per page\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.rowperpage2} onChange={this.handleSelectRowPerPageChange2}>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='35'>35</option>\r\n                                            <option value='40'>40</option>\r\n                                            <option value='45'>45</option>\r\n                                            <option value='50'>50</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        PageNumber\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.pagenumber2} onChange={this.handleSelectPageNumberChange2}>\r\n                                            {\r\n                                                this.state.pagearr2.map((p, index) => {\r\n                                                    return (\r\n                                                        <option value={p} key={index}>{p}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"card-tools d-inline-block\">\r\n                                        <div className=\"input-group input-group-sm\" style={{ width: '100%' }}>\r\n                                            <input type=\"text\" name=\"table_search\"\r\n                                                className=\"form-control float-right\"\r\n                                                placeholder=\"Search game code / name\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ searchtxt2: e.target.value });\r\n                                                    var name = e.target.value;\r\n                                                    var datalength = this.state.rawdata2.length;\r\n                                                    if (name != \"\") {\r\n                                                        this.setState({\r\n                                                            data2: this.state.rawdata2.filter((data) => {\r\n                                                                return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\r\n                                                            })\r\n                                                        });\r\n                                                        datalength = this.state.rawdata2.filter((data) => {\r\n                                                            return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\r\n                                                        }).length;\r\n                                                    } else {\r\n                                                        this.setState({\r\n                                                            data2: this.state.rawdata2\r\n                                                        });\r\n                                                    }\r\n\r\n                                                    var page_remain = Math.floor(datalength / this.state.rowperpage2);\r\n                                                    var num = datalength % this.state.rowperpage2;\r\n                                                    if (num > 0) {\r\n                                                        page_remain++;\r\n                                                    }\r\n\r\n                                                    var arr = [];\r\n                                                    var i;\r\n                                                    for (i = 0; i < page_remain; i++) {\r\n                                                        arr.push(i + 1);\r\n                                                    }\r\n                                                    var pagenum = 1;\r\n                                                    var startrow = (pagenum - 1) * this.state.rowperpage2;\r\n                                                    var endrow = startrow + this.state.rowperpage2;\r\n                                                    this.setState({ recordtotal2: datalength, pagetotal2: page_remain, pagenumber2: pagenum, pagearr2: arr, startrow2: startrow, endrow2: endrow });\r\n                                                }}\r\n                                                value={this.state.searchtxt2} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-default\"><i className=\"fa fa-search\" onClick={this.onSearchClick2} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBContainer>\r\n                        </div>\r\n                        <div className=\"card-body table-responsive p-0\">\r\n                            <table className=\"table table-hover table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th>Status</th>\r\n                                        <th>Image</th>\r\n                                        <th>Code</th>\r\n                                        <th>Name</th>\r\n                                        <th>Type</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.data2.map((game, index) => {\r\n                                        let classBadge = 'danger';\r\n                                        let mystatus = 'disable';\r\n                                        if (game.game_status == 1) {\r\n                                            classBadge = 'success';\r\n                                            mystatus = 'enable';\r\n                                        }\r\n                                        if (index >= this.state.startrow && index < this.state.endrow)\r\n                                            //console.log(\"userid\" + user.id);\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td className=\"py-1\"><label className={`badge badge-info`} style={{ display: game.game_new === 'Yes' ? 'block' : 'none' }}>new</label> <label className={`badge badge-${classBadge}`} style={{ display: 'block' }}>{mystatus}</label></td>\r\n                                                    <td className=\"py-1\">\r\n                                                        <img\r\n                                                            src={game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\")}\r\n                                                            style={{\r\n                                                                flex: 1,\r\n                                                                width: \"80px\",\r\n                                                                height: null,\r\n                                                                resizeMode: 'contain'\r\n                                                            }}\r\n                                                        />\r\n\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">{game.game_code}</td>\r\n                                                    <td className=\"py-1\">{game.game_name}</td>\r\n                                                    <td className=\"py-1\">{game.game_type}</td>\r\n                                                </tr>\r\n                                            );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n\r\n        </AdminLayoutHoc>\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies, { getJSON } from \"js-cookie\";\nimport { ServiceUser } from \"../../service/\"; //import '../../styles/styles.scss';\n\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\nimport { route } from \"next/dist/next-server/server/router\";\nexport default class UserPermission extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      //Cookies.set('service_index', nr);\n      const ind = nr; //Cookies.remove('service_index');\n\n      console.log('ind=>' + ind);\n      var arr = this.state.switch_arr;\n      arr[ind] = !arr[ind];\n      this.setState({\n        switch_arr: arr\n      });\n      console.log('handleSwitchChange=>' + arr);\n    });\n\n    this.state = {\n      isLoading: true,\n      data: [],\n      rawdata: [],\n      errorMessage: \"\",\n      role_data: [],\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\",\n      role: \"\",\n      data2: [],\n      rawdata2: [],\n      searchtxt2: \"\",\n      switch_arr: [],\n      uid: \"1\",\n      upermiss: \"1-1-1-1-1-1-1\",\n      u_id: \"\"\n    }; //this.deleteUser = this.deleteUser.bind(this);\n\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this);\n    this.onSearchClick2 = this.onSearchClick2.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit() {\n    try {\n      let agent_status = 0;\n\n      if (this.state.switch1) {\n        agent_status = 1;\n      }\n\n      var arr = this.state.switch_arr;\n      var i;\n      var permiss = \"\";\n\n      for (i = 0; i < arr.length; i++) {\n        if (i == 0) {\n          if (arr[i]) {\n            permiss = '1';\n          } else {\n            permiss = '0';\n          }\n        } else {\n          if (arr[i]) {\n            permiss += '-1';\n          } else {\n            permiss += '-0';\n          }\n        }\n      }\n\n      const a = {\n        user_level_permission: permiss\n      };\n      console.log('permission : ' + permiss);\n      const res = await ServiceUser.editSystemRole(a, this.state.u_id);\n      console.log('res : ' + res.data);\n\n      if (res.data.status === 2000) {\n        console.log('Edit Permissin Success!!!'); //const mydata = ths.state.data;\n\n        this.dialog.show({\n          title: 'Slot Admin information',\n          body: 'Edit a permission : ' + this.state.role + ' is successfully.',\n          actions: [Dialog.OKAction(() => {\n            ServiceUser.listSystemRole().then(res => {\n              console.log(res.data);\n              const {\n                data,\n                status\n              } = res.data;\n\n              if (status === 2000) {\n                console.log(\"data length : \" + data.length);\n                this.setState({\n                  data: data\n                });\n                this.setState({\n                  rawdata: data\n                });\n              } else {\n                this.setErrorMsg(res.data.msg);\n              }\n            });\n          })]\n        });\n      } else {\n        this.dialog.showAlert(res.data.message);\n        this.setErrorMsg(res.data.msg);\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  onSearchLevel(level_id) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_id == level_id;\n    });\n    const user_level_name = myrole.map((role, index) => {\n      return role.user_level_name;\n    }); //console.log('myrole:' + myrole);\n\n    return user_level_name;\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        this.dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        this.dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  fetchUsers() {\n    console.log(\"fetchUsers\");\n    ServiceUser.listUserrole().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(data); //setUsers(data);\n\n        this.state.data = data;\n      } else {\n        setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  clickButton() {//Router.push(\"/user_permission/add\");\n  }\n\n  async ShowPermission() {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceUser.listMenu();\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (res.data.status === 2000) {\n        this.setState({\n          data2: data\n        });\n        this.setState({\n          rawdata2: data\n        });\n        var str = this.state.upermiss;\n        console.log('str:' + str);\n        var perm_arr = [];\n\n        if (str) {\n          perm_arr = str.split('-');\n        } else {\n          var i;\n\n          for (i = 0; i < data.length; i++) {\n            perm_arr.push(0);\n          } //perm_arr =[]\n\n        }\n\n        console.log('perm_arr:' + perm_arr);\n        var sw_arr = [];\n        var j;\n\n        for (j = 0; j < perm_arr.length; j++) {\n          const ser_status = perm_arr[j];\n\n          if (ser_status == '1') {\n            sw_arr.push(true);\n          } else {\n            sw_arr.push(false);\n          }\n        }\n\n        console.log('sw_arr : ' + sw_arr);\n        this.setState({\n          switch_arr: sw_arr\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  onSearchClick() {\n    var name = this.state.searchtxt;\n    var datalength = this.state.rawdata.length;\n\n    if (name != \"\") {\n      this.setState({\n        data: this.state.rawdata.filter(data => {\n          return data.user_level_name.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata.filter(data => {\n        return data.user_level_name.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data: this.state.rawdata\n      });\n    }\n  }\n\n  onSearchClick2() {\n    var name = this.state.searchtxt2;\n    var datalength = this.state.rawdata2.length;\n\n    if (name != \"\") {\n      this.setState({\n        data: this.state.rawdata2.filter(data => {\n          return data.menu_name.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata2.filter(data => {\n        return data.menu_name.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data2: this.state.rawdata2\n      });\n    }\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceUser.listSystemRole().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data: data\n        });\n        this.setState({\n          rawdata: data\n        });\n        var i;\n        var _id = '';\n\n        for (i = 0; i < data.length; i++) {\n          if (data[i].user_level_name == 'Admin') _id = data[i]._id;\n        }\n\n        console.log('u_id' + _id);\n        this.setState({\n          role: \"Admin\",\n          u_id: _id\n        });\n        this.ShowPermission();\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  setErrorMsg(msg) {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Users',\n      contentTitleButton: __jsx(Link, {\n        href: \"/users/add\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\"\n      }, __jsx(\"i\", {\n        className: \"fa fa-user-plus fa-fw\"\n      }), \" Add a new user\")),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search\",\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          this.setState({\n            data: this.state.rawdata.filter(user => {\n              return user.user_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(user => {\n            return user.user_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n      },\n      value: this.state.searchtxt\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover table-striped table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"User role id\"), __jsx(\"th\", null, \"User role name\"), __jsx(\"th\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, \"Edit Permission\"))), __jsx(\"tbody\", null, this.state.data.map((user, index) => {\n      if (user) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, user.user_level_id), __jsx(\"td\", {\n          className: \"py-1\"\n        }, user.user_level_name), __jsx(\"td\", {\n          className: \"py-1\",\n          style: {\n            textAlign: \"right\"\n          }\n        }, __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info btn-icon-text\",\n          onClick: () => {\n            /* console.log(\"edit userid\" + user._id);\r\n            Cookies.set(\"userid\", user._id);\r\n            Router.push(\"/users/edit\"); */\n            Cookies.set(\"userid\", user._id); //Cookies.set(\"user_level_name\", user.user_level_name);\n\n            console.log('user_level_permission : ' + user.user_level_permission);\n            this.setState({\n              role: user.user_level_name,\n              upermiss: user.user_level_permission,\n              u_id: user._id\n            }); //Cookies.set(\"userpermission\", user.user_level_permission);\n\n            this.ShowPermission();\n          }\n        }, \"Edit Permission\")));\n    })))))), __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"h4\", null, \"User Permission : \", this.state.role), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search menu name\",\n      onChange: e => {\n        this.setState({\n          searchtxt2: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata2.length;\n\n        if (name != \"\") {\n          this.setState({\n            data2: this.state.rawdata2.filter(data => {\n              return data.menu_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata2.filter(data => {\n            return data.menu_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data2: this.state.rawdata2\n          });\n        }\n      },\n      value: this.state.searchtxt2\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick2\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover  table-striped table-bordered\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Menu\"), __jsx(\"th\", null, \"Permission\"))), __jsx(\"tbody\", null, this.state.data2.map((menu, index) => {\n      if (menu) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, menu.menu_name), __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"label\", {\n          class: \"switch\"\n        }, __jsx(\"input\", {\n          type: \"checkbox\",\n          onChange: this.handleSwitchChange(index),\n          checked: this.state.switch_arr[index]\n        }), __jsx(\"span\", {\n          class: \"slider round\"\n        })), __jsx(\"label\", {\n          className: \"control-label\"\n        }, \"\\xA0Enable\")));\n    })))), __jsx(\"div\", {\n      className: \"card-footer\",\n      style: {\n        display: this.state.data2 ? 'block' : 'none'\n      }\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\"))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
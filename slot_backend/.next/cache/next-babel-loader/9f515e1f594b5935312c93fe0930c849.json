{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\n\nvar AddWallets = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddWallets, _React$Component);\n\n  var _super = _createSuper(AddWallets);\n\n  function AddWallets(props) {\n    var _this;\n\n    _classCallCheck(this, AddWallets);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChange\", function (nr) {\n      return function () {\n        var switchNumber = \"switch\".concat(nr);\n\n        _this.setState(_defineProperty({}, switchNumber, !_this.state[switchNumber]));\n      };\n    });\n\n    _this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      credit: \"0\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      data_service: [],\n      data_agent: [],\n      data_brand: [],\n      data_member: [],\n      brand: \"\",\n      mem: \"\",\n      agent: \"\",\n      isDownLine: false,\n      game_username: \"\",\n      game_password: \"\",\n      agent_code: \"\",\n      brand_code: \"\" // role: \"3\",\n      // rolename: \"User\",\n\n    };\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleToggleChange = _this.handleToggleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.setErrorMsg = _this.setErrorMsg.bind(_assertThisInitialized(_this)); //this.onClick = this.onClick.bind(this);\n    //this.onConfirmClick = this.onConfirmClick.bind(this)\n\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this)); //this.onSearchLevel = this.onSearchLevel.bind(this);\n\n    _this.onSearchAgentCode = _this.onSearchAgentCode.bind(_assertThisInitialized(_this));\n    _this.handleSelectMemberChange = _this.handleSelectMemberChange.bind(_assertThisInitialized(_this)); //this.SearchAgent = this.SearchAgent.bind(this);\n\n    _this.handleSelectBrandChange = _this.handleSelectBrandChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddWallets, [{\n    key: \"handleSelectBrandChange\",\n    value: function handleSelectBrandChange(e) {\n      e.preventDefault();\n      console.log('e.target.value =>' + e.target.value);\n      this.setState({\n        brand: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSelectMemberChange\",\n    value: function handleSelectMemberChange(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      console.log('e.target.value =>' + e.target.value);\n      var agent_code = this.onSearchAgentCode(e.target.value);\n      this.setState({\n        mem: e.target.value,\n        agent_code: agent_code\n      });\n      ServiceBrand.listBrands().then(function (res) {\n        console.log(res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length); //this.setState({ data_brand: data });\n\n          var data_brand = data;\n\n          var agent_lineup = _this2.SearchAgent_LineUp(agent_code)[0];\n\n          console.log('agent_lineup =>' + agent_lineup);\n          console.log('agent_code =>' + agent_code);\n          Cookies.set(\"serviceagent\", agent_code);\n          var agent_param = \"\";\n\n          if (agent_lineup === \"\" || agent_lineup === \"-\") {\n            _this2.setState({\n              isDownLine: false\n            });\n\n            agent_param = agent_code;\n          } else {\n            _this2.setState({\n              isDownLine: true\n            });\n\n            agent_param = agent_lineup;\n          }\n\n          ServiceGameService.listServiceFromAgent(agent_param).then(function (res) {\n            console.log(res.data);\n            var _res$data2 = res.data,\n                data = _res$data2.data,\n                status = _res$data2.status;\n\n            if (status === 2000) {\n              console.log(\"data service length : \" + data.length);\n\n              _this2.setState({\n                data_service: data\n              });\n\n              var my_data_brand = [];\n              var i;\n\n              for (i = 0; i < data.length; i++) {\n                //data_brand.filter()\n                var brands = data_brand.filter(function (brand) {\n                  return brand.brand_code == data[i].brand_code;\n                }); //console.log('brands : ' + brands);\n\n                var brand_name = brands.map(function (brand, index) {\n                  return brand.brand_name;\n                });\n                console.log('brand_name : ' + brand_name[0]);\n                my_data_brand.push({\n                  brand_name: brand_name[0],\n                  brand_code: data[i].brand_code\n                });\n              }\n\n              console.log('data_brand : ' + JSON.stringify(my_data_brand));\n\n              _this2.setState({\n                data_brand: my_data_brand\n              });\n\n              _this2.setState({\n                brand: my_data_brand[0].brand_name\n              });\n\n              _this2.setState({\n                brand_code: my_data_brand[0].brand_code\n              });\n            } else {\n              _this2.setErrorMsg(res.data.msg);\n            }\n          });\n        } else {\n          _this2.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }, {\n    key: \"onSearchAgentCode\",\n    value: function onSearchAgentCode(mem_username) {\n      console.log('get Agent Code');\n      var mems = this.state.data_member.filter(function (mem) {\n        return mem.mem_username == mem_username;\n      });\n      var agentCode = mems.map(function (mem, index) {\n        return mem.agent_code;\n      }); //console.log('myrole:' + myrole);\n\n      return agentCode;\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/wallets\");\n    }\n  }, {\n    key: \"SearchAgent_LineUp\",\n    value: function SearchAgent_LineUp(agent_code) {\n      console.log('get agent_code');\n      var agents = this.state.data_agent.filter(function (agent) {\n        return agent.agent_code == agent_code;\n      });\n      var agent_lineup = agents.map(function (agent, index) {\n        return agent.agent_lineup;\n      }); //console.log('myrole:' + myrole);\n\n      return agent_lineup;\n    }\n  }, {\n    key: \"SearchAgent_LineUp2\",\n    value: function SearchAgent_LineUp2(data_agent, agent_code) {\n      console.log('get agent_code');\n      var agents = data_agent.filter(function (agent) {\n        return agent.agent_code == agent_code;\n      });\n      console.log('agents : ' + JSON.stringify(agents));\n      var agent_lineup = agents.map(function (agent, index) {\n        return agent.agent_lineup;\n      }); //console.log('myrole:' + myrole);\n\n      return agent_lineup;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user_status, a, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                if (!(this.state.user_pass === this.state.confirmpassword)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                //const urole = this.onSearchLevel(this.state.rolename);\n                //this.setState({ user_level: urole,role: urole });\n                user_status = 0;\n\n                if (this.state.switch1) {\n                  user_status = 1;\n                }\n\n                a = {\n                  agent_code: this.state.agent_code,\n                  user_name: this.state.user_name,\n                  user_email: this.state.user_email,\n                  user_pass: this.state.user_pass,\n                  user_level: this.state.user_level,\n                  user_status: user_status\n                };\n                _context.next = 8;\n                return ServiceUserAgent.createUserAgent(a);\n\n              case 8:\n                res = _context.sent;\n                console.log('res : ' + res.data);\n\n                if (res.data.status === 2000) {\n                  console.log('Add User Agent Success!!!');\n                  this.dialog.show({\n                    title: 'Slot Admin information',\n                    body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n                    actions: [Dialog.OKAction(function () {\n                      Router.push(\"/agent_users\");\n                    })]\n                  });\n                } else {\n                  this.dialog.showAlert(res.data.message);\n                  this.setErrorMsg(res.data.msg);\n                }\n\n                _context.next = 14;\n                break;\n\n              case 13:\n                this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n\n              case 14:\n                _context.next = 17;\n                break;\n\n              case 16:\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n\n              case 17:\n                _context.next = 24;\n                break;\n\n              case 19:\n                _context.prev = 19;\n                _context.t0 = _context[\"catch\"](0);\n                this.dialog.showAlert(_context.t0);\n                console.error(\"An unexpected error happened occurred:\", _context.t0);\n                this.setErrorMsg(_context.t0.message);\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 19]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rolename: e.target.value\n      });\n      var v = this.onSearchLevel(e.target.value);\n      this.setState({\n        role: v,\n        user_level: v\n      });\n    }\n  }, {\n    key: \"handleToggleChange\",\n    value: function handleToggleChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        user_enable: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n\n      ServiceMember.listMember().then(function (res) {\n        console.log(res.data);\n        var _res$data3 = res.data,\n            data = _res$data3.data,\n            status = _res$data3.status;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n\n          _this3.setState({\n            data_member: data\n          });\n\n          if (data.length > 0) {\n            var _data$ = data[0],\n                mem_name = _data$.mem_name,\n                agent_code = _data$.agent_code;\n\n            _this3.setState({\n              mem: mem_name,\n              agent_code: agent_code\n            });\n\n            console.log('Brand name:' + mem_name);\n            ServiceBrand.listBrands().then(function (res) {\n              console.log(res.data);\n              var _res$data4 = res.data,\n                  data = _res$data4.data,\n                  status = _res$data4.status;\n\n              if (status === 2000) {\n                console.log(\"data length : \" + data.length); //this.setState({ data_brand: data });\n\n                var data_brand = data;\n                ServiceAgent.listAgent().then(function (res) {\n                  console.log(res.data);\n                  var _res$data5 = res.data,\n                      data = _res$data5.data,\n                      status = _res$data5.status; //var data_service = [];\n\n                  if (status === 2000) {\n                    console.log(\"data agent length : \" + data.length);\n                    console.log(\"data agent : \" + JSON.stringify(data));\n\n                    _this3.setState({\n                      data_agent: data\n                    }); //const {agent_code} = data[0];\n\n\n                    var agent_lineup = _this3.SearchAgent_LineUp2(data, agent_code)[0];\n\n                    console.log('agent_lineup =>' + agent_lineup);\n                    console.log('agent_code =>' + agent_code);\n                    Cookies.set(\"serviceagent\", agent_code);\n\n                    if (agent_lineup === \"\" || agent_lineup === \"-\") {\n                      _this3.setState({\n                        isDownLine: false\n                      });\n\n                      ServiceGameService.listServiceFromAgent(agent_code).then(function (res) {\n                        console.log(res.data);\n                        var _res$data6 = res.data,\n                            data = _res$data6.data,\n                            status = _res$data6.status;\n\n                        if (status === 2000) {\n                          console.log(\"data length : \" + data.length);\n\n                          _this3.setState({\n                            data_service: data\n                          });\n\n                          var my_data_brand = [];\n                          var i;\n\n                          for (i = 0; i < data.length; i++) {\n                            //data_brand.filter()\n                            var brands = data_brand.filter(function (brand) {\n                              return brand.brand_code == data[i].brand_code;\n                            }); //console.log('brands : ' + brands);\n\n                            var brand_name = brands.map(function (brand, index) {\n                              return brand.brand_name;\n                            });\n                            console.log('brand_name : ' + brand_name[0]);\n                            my_data_brand.push({\n                              brand_name: brand_name[0],\n                              brand_code: data[i].brand_code\n                            });\n                          }\n\n                          console.log('data_brand : ' + JSON.stringify(my_data_brand));\n\n                          _this3.setState({\n                            data_brand: my_data_brand\n                          });\n\n                          _this3.setState({\n                            brand: my_data_brand[0].brand_name\n                          });\n\n                          _this3.setState({\n                            brand_code: my_data_brand[0].brand_code\n                          });\n                        } else {\n                          _this3.setErrorMsg(res.data.msg);\n                        }\n                      });\n                    } else {\n                      _this3.setState({\n                        isDownLine: true\n                      });\n\n                      ServiceGameService.listServiceFromAgent(agent_lineup).then(function (res) {\n                        console.log(res.data);\n                        var _res$data7 = res.data,\n                            data = _res$data7.data,\n                            status = _res$data7.status;\n\n                        if (status === 2000) {\n                          console.log(\"data service length : \" + data.length);\n\n                          _this3.setState({\n                            data_service: data\n                          });\n\n                          var my_data_brand = [];\n                          var i;\n\n                          for (i = 0; i < data.length; i++) {\n                            //data_brand.filter()\n                            var brands = data_brand.filter(function (brand) {\n                              return brand.brand_code == data[i].brand_code;\n                            }); //console.log('brands : ' + brands);\n\n                            var brand_name = brands.map(function (brand, index) {\n                              return brand.brand_name;\n                            });\n                            console.log('brand_name : ' + brand_name[0]);\n                            my_data_brand.push({\n                              brand_name: brand_name[0],\n                              brand_code: data[i].brand_code\n                            });\n                          }\n\n                          console.log('data_brand : ' + JSON.stringify(my_data_brand));\n\n                          _this3.setState({\n                            data_brand: my_data_brand\n                          });\n\n                          _this3.setState({\n                            brand: my_data_brand[0].brand_name\n                          });\n\n                          _this3.setState({\n                            brand_code: my_data_brand[0].brand_code\n                          });\n                        } else {\n                          _this3.setErrorMsg(res.data.msg);\n                        }\n                      });\n                    }\n                  }\n                });\n              } else {\n                _this3.setErrorMsg(res.data.msg);\n              }\n            });\n          }\n\n          if (Cookies.get(\"brand\")) {\n            _this3.setState({\n              brand: Cookies.get(\"brand\")\n            });\n          }\n        } else {\n          _this3.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var element = __jsx(\"div\", {\n        className: \"toggle-switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        \"data-toggle\": \"toggle\",\n        \"data-on\": \"Ready\",\n        \"data-off\": \"Not Ready\",\n        \"data-onstyle\": \"success\",\n        \"data-offstyle\": \"danger\"\n      }));\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Add Wallets',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-money\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"offset-md-0\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"form\", {\n        className: \"form-horizontal\"\n      }, __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(\"div\", {\n        className: \"form-group row\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-5\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select Member\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-3\",\n        className: \"form-control\",\n        value: this.state.mem,\n        onChange: this.handleSelectMemberChange\n      }, this.state.data_member.map(function (member, index) {\n        return __jsx(\"option\", {\n          value: member.mem_username,\n          key: index\n        }, member.mem_username);\n      })))), __jsx(\"div\", {\n        className: \"col-sm-5\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"agent code\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            agent_code: e.target.value\n          });\n        },\n        value: this.state.agent_code,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group row\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-5\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select Brand\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-3\",\n        className: \"form-control\",\n        value: this.state.brand,\n        onChange: this.handleSelectBrandChange\n      }, this.state.data_brand.map(function (brand, index) {\n        return __jsx(\"option\", {\n          value: brand.brand_name,\n          key: index\n        }, brand.brand_name);\n      })))), __jsx(\"div\", {\n        className: \"col-sm-5\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"brand code\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            brand_code: e.target.value\n          });\n        },\n        value: this.state.brand_code,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"game username\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"agent name\"\n        ,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            game_username: e.target.value\n          });\n        },\n        value: this.state.game_username,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"game password\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex4\" //placeholder=\"agent detail\"\n        ,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            game_password: e.target.value\n          });\n        },\n        value: this.state.game_password,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"credit\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"Password\"\n        ,\n        onChange: function onChange(e) {\n          return _this4.setState({\n            credit: e.target.value\n          });\n        },\n        value: this.state.credit,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"label\", {\n        \"class\": \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(1),\n        checked: this.state.switch1\n      }), __jsx(\"span\", {\n        \"class\": \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"d-inline-block btn-block\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn btn-info float-right\",\n        onClick: this.handleSubmit\n      }, \"Save\")))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this4.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return AddWallets;\n}(React.Component);\n\nexport { AddWallets as default };","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/wallets/add.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceBrand","ServiceMember","ServiceGameService","Dialog","AddWallets","props","nr","switchNumber","setState","state","user_name","user_email","user_pass","add_date","credit","user_level","user_status","switch1","errorMessage","datas","role_data","mydatas","value","data_service","data_agent","data_brand","data_member","brand","mem","agent","isDownLine","game_username","game_password","agent_code","brand_code","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","handleResetSubmit","onSearchAgentCode","handleSelectMemberChange","handleSelectBrandChange","e","preventDefault","console","log","target","listBrands","then","res","data","status","length","agent_lineup","SearchAgent_LineUp","set","agent_param","listServiceFromAgent","my_data_brand","i","brands","filter","brand_name","map","index","push","JSON","stringify","msg","mem_username","mems","agentCode","agents","confirmpassword","a","createUserAgent","dialog","show","title","body","actions","OKAction","showAlert","message","error","rolename","v","onSearchLevel","role","user_enable","get","listMember","mem_name","listAgent","SearchAgent_LineUp2","element","url","member","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddWallets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            \r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            credit: \"0\",\r\n            user_level: \"3\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,\r\n            \r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"Master\",\r\n            data_service: [],\r\n            data_agent: [],\r\n            data_brand: [],\r\n            data_member: [],\r\n            brand: \"\",\r\n            mem: \"\",\r\n            agent: \"\",\r\n            isDownLine: false,\r\n            game_username: \"\",\r\n            game_password: \"\",\r\n            agent_code: \"\",\r\n            brand_code: \"\",\r\n            // role: \"3\",\r\n            // rolename: \"User\",\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        //this.onClick = this.onClick.bind(this);\r\n        //this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        //this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectMemberChange = this.handleSelectMemberChange.bind(this);\r\n        //this.SearchAgent = this.SearchAgent.bind(this);\r\n        this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\r\n    }\r\n\r\n    handleSelectBrandChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ brand: e.target.value });\r\n    }\r\n\r\n    handleSelectMemberChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        const agent_code = this.onSearchAgentCode(e.target.value)\r\n        this.setState({ mem: e.target.value, agent_code: agent_code });\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                //this.setState({ data_brand: data });\r\n                let data_brand = data;\r\n                const agent_lineup = this.SearchAgent_LineUp(agent_code)[0];\r\n\r\n                console.log('agent_lineup =>' + agent_lineup);\r\n                console.log('agent_code =>' + agent_code);\r\n                Cookies.set(\"serviceagent\", agent_code);\r\n                var agent_param = \"\";\r\n                if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                    this.setState({ isDownLine: false });\r\n                    agent_param = agent_code;\r\n                } else {\r\n                    this.setState({ isDownLine: true });\r\n                    agent_param = agent_lineup;\r\n                }\r\n                ServiceGameService.listServiceFromAgent(agent_param).then((res) => {\r\n                    console.log(res.data);\r\n                    const { data, status } = res.data;\r\n                    if (status === 2000) {\r\n                        console.log(\"data service length : \" + data.length);\r\n                        this.setState({ data_service: data });\r\n\r\n                        let my_data_brand = [];\r\n                        var i;\r\n                        for (i = 0; i < data.length; i++) {\r\n                            //data_brand.filter()\r\n                            const brands = data_brand.filter((brand) => {\r\n                                return brand.brand_code == data[i].brand_code;\r\n                            })\r\n                            //console.log('brands : ' + brands);\r\n                            const brand_name = brands.map((brand, index) => {\r\n                                return brand.brand_name;\r\n                            })\r\n                            console.log('brand_name : ' + brand_name[0]);\r\n                            my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                        }\r\n                        console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                        this.setState({ data_brand: my_data_brand });\r\n                        this.setState({ brand: my_data_brand[0].brand_name });\r\n                        this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onSearchAgentCode(mem_username) {\r\n        console.log('get Agent Code');\r\n        const mems = this.state.data_member.filter((mem) => {\r\n            return mem.mem_username == mem_username;\r\n        })\r\n\r\n        const agentCode = mems.map((mem, index) => {\r\n            return mem.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/wallets\");\r\n    }\r\n\r\n    SearchAgent_LineUp(agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n    SearchAgent_LineUp2(data_agent, agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n        console.log('agents : ' + JSON.stringify(agents));\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\r\n                if (this.state.user_pass === this.state.confirmpassword) {\r\n                    //const urole = this.onSearchLevel(this.state.rolename);\r\n                    //this.setState({ user_level: urole,role: urole });\r\n\r\n                    let user_status = 0;\r\n                    if (this.state.switch1) {\r\n                        user_status = 1;\r\n                    }\r\n\r\n                    const a = {\r\n                        agent_code: this.state.agent_code, user_name: this.state.user_name,\r\n                        user_email: this.state.user_email, user_pass: this.state.user_pass, user_level: this.state.user_level,\r\n                        user_status: user_status\r\n                    };\r\n                    const res = await ServiceUserAgent.createUserAgent(a);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Add User Agent Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/agent_users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n        const v = this.onSearchLevel(e.target.value);\r\n        this.setState({ role: v, user_level: v });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceMember.listMember().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_member: data });\r\n                if (data.length > 0) {\r\n                    const { mem_name, agent_code } = data[0];\r\n                    this.setState({ mem: mem_name, agent_code: agent_code });\r\n                    console.log('Brand name:' + mem_name);\r\n\r\n                    ServiceBrand.listBrands().then((res) => {\r\n                        console.log(res.data);\r\n                        const { data, status } = res.data;\r\n                        if (status === 2000) {\r\n                            console.log(\"data length : \" + data.length);\r\n                            //this.setState({ data_brand: data });\r\n                            let data_brand = data;\r\n\r\n                            ServiceAgent.listAgent().then((res) => {\r\n                                console.log(res.data);\r\n                                const { data, status } = res.data;\r\n                                //var data_service = [];\r\n                                if (status === 2000) {\r\n                                    console.log(\"data agent length : \" + data.length);\r\n                                    console.log(\"data agent : \" + JSON.stringify(data));\r\n                                    this.setState({ data_agent: data });\r\n                                    //const {agent_code} = data[0];\r\n                                    const agent_lineup = this.SearchAgent_LineUp2(data, agent_code)[0];\r\n\r\n                                    console.log('agent_lineup =>' + agent_lineup);\r\n                                    console.log('agent_code =>' + agent_code);\r\n                                    Cookies.set(\"serviceagent\", agent_code);\r\n                                    if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                                        this.setState({ isDownLine: false });\r\n                                        ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({ isDownLine: true });\r\n                                        ServiceGameService.listServiceFromAgent(agent_lineup).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data service length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        } else {\r\n                            this.setErrorMsg(res.data.msg);\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n                if (Cookies.get(\"brand\")) {\r\n                    this.setState({ brand: Cookies.get(\"brand\") });\r\n                }\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Wallets'} contentTitleButton={<i className=\"fa fa-2x fa-money\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Member</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.mem} onChange={this.handleSelectMemberChange}>\r\n                                            {\r\n                                                this.state.data_member.map((member, index) => {\r\n                                                    return (\r\n                                                        <option value={member.mem_username} key={index}>{member.mem_username}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group row\">\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Brand</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.brand} onChange={this.handleSelectBrandChange}>\r\n                                            {\r\n                                                this.state.data_brand.map((brand, index) => {\r\n                                                    return (\r\n                                                        <option value={brand.brand_name} key={index}>{brand.brand_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">brand code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ brand_code: e.target.value })}\r\n                                            value={this.state.brand_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ game_username: e.target.value })}\r\n                                            value={this.state.game_username}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game password</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ game_password: e.target.value })}\r\n                                            value={this.state.game_password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">credit</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ credit: e.target.value })}\r\n                                            value={this.state.credit}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
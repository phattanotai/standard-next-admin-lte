{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\n\nvar AddUser = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddUser, _React$Component);\n\n  var _super = _createSuper(AddUser);\n\n  function AddUser(props) {\n    var _this;\n\n    _classCallCheck(this, AddUser);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChange\", function (nr) {\n      return function () {\n        var switchNumber = \"switch\".concat(nr);\n\n        _this.setState(_defineProperty({}, switchNumber, !_this.state[switchNumber]));\n      };\n    });\n\n    _this.state = {\n      auth: {\n        username: \"\",\n        password: \"\",\n        role: \"3\",\n        rolename: \"User\"\n      },\n      username: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      role: \"3\",\n      rolename: \"User\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"User\",\n      user_enable: true,\n      switch1: true,\n      userid: Cookies.get(\"userid\")\n    };\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleToggleChange = _this.handleToggleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.setErrorMsg = _this.setErrorMsg.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onConfirmClick = _this.onConfirmClick.bind(_assertThisInitialized(_this));\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this));\n    _this.onSearchLevel = _this.onSearchLevel.bind(_assertThisInitialized(_this));\n    _this.onSearchLevelname = _this.onSearchLevelname.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddUser, [{\n    key: \"onSearchLevel\",\n    value: function onSearchLevel(level_name) {\n      console.log('get myrole');\n      var myrole = this.state.role_data.filter(function (role) {\n        return role.user_level_name == level_name;\n      });\n      var user_level_id = myrole.map(function (role, index) {\n        return role.user_level_id;\n      });\n      return user_level_id[0];\n    }\n  }, {\n    key: \"onSearchLevelname\",\n    value: function onSearchLevelname(level_id) {\n      console.log('get myrole');\n      var myrole = this.state.role_data.filter(function (role) {\n        return role.user_level_id == level_id;\n      });\n      var user_level_name = myrole.map(function (role, index) {\n        return role.user_level_name;\n      }); //console.log('myrole:' + myrole);\n\n      return user_level_name;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.dialog.showAlert('Hello Dialog!');\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/users\");\n    }\n  }, {\n    key: \"onConfirmClick\",\n    value: function onConfirmClick() {\n      this.dialog.show({\n        title: 'Slot Admin confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(function () {\n          dialog.hide();\n        }), Dialog.OKAction(function () {})],\n        bsSize: 'small',\n        onHide: function onHide(dialog) {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user_enable, a, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.state.username !== \"\" && this.state.user_email !== \"\")) {\n                  _context.next = 20;\n                  break;\n                }\n\n                if (!(this.state.password === this.state.confirmpassword)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                this.setState({\n                  role: this.onSearchLevel(this.state.rolename)\n                });\n                console.log('role : ' + this.state.role);\n                user_enable = 0;\n\n                if (this.state.switch1) {\n                  user_enable = 1;\n                }\n\n                a = {};\n\n                if (this.state.password !== \"\") {\n                  a = {\n                    user_name: this.state.username,\n                    user_pass: this.state.password,\n                    user_email: this.state.user_email,\n                    user_level: this.state.role,\n                    user_status: user_enable,\n                    add_date: \"\",\n                    last_login: \"\"\n                  };\n                } else {\n                  a = {\n                    user_name: this.state.username,\n                    user_email: this.state.user_email,\n                    user_level: this.state.role,\n                    user_status: user_enable\n                  };\n                }\n\n                console.log('data update : ' + a.role);\n                _context.next = 12;\n                return ServiceUser.editUser(a, this.state.userid);\n\n              case 12:\n                res = _context.sent;\n                console.log('res : ' + res.data);\n\n                if (res.data.status === 2000) {\n                  console.log('Edit User Success!!!');\n                  this.dialog.show({\n                    title: 'Spiderbot information',\n                    body: 'Edit a user : ' + a.user_name + ' is successfully.',\n                    actions: [Dialog.OKAction(function () {\n                      //action('ok button was clicked!')()\n                      Router.push(\"/users\");\n                    })]\n                  });\n                } else {\n                  this.dialog.showAlert(res.data.message);\n                  this.setErrorMsg(res.data.msg);\n                }\n\n                _context.next = 18;\n                break;\n\n              case 17:\n                this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n\n              case 18:\n                _context.next = 21;\n                break;\n\n              case 20:\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n\n              case 21:\n                _context.next = 28;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](0);\n                this.dialog.showAlert(_context.t0);\n                console.error(\"An unexpected error happened occurred:\", _context.t0);\n                this.setErrorMsg(_context.t0.message);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 23]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rolename: e.target.value\n      });\n    }\n  }, {\n    key: \"handleToggleChange\",\n    value: function handleToggleChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        user_enable: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n\n      ServiceUser.listSystemRole().then(function (res) {\n        console.log(\"res data=>\" + res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n        console.log(\"status=>\" + status);\n\n        if (status === 2000) {\n          console.log(\"data :=>\" + JSON.stringify(data));\n\n          _this2.setState({\n            role_data: data\n          });\n\n          console.log(\"userid=>\" + _this2.state.userid);\n          ServiceUser.getUserFromId(_this2.state.userid).then(function (res) {\n            //console.log(\"res data=>\" + res.data);\n            var _res$data2 = res.data,\n                data = _res$data2.data,\n                status = _res$data2.status; //console.log(\"status=>\" + status);\n\n            if (status === 2000) {\n              //this.setState({ data: data });\n              console.log(\"edit data =>\" + JSON.stringify(data));\n              var _data$ = data[0],\n                  user_name = _data$.user_name,\n                  user_email = _data$.user_email,\n                  user_level = _data$.user_level,\n                  user_status = _data$.user_status;\n              console.log(\"user_name=>\" + user_name);\n              console.log(\"user_email=>\" + user_email);\n              console.log(\"user_level=>\" + user_level);\n              console.log(\"user_status=>\" + user_status);\n\n              _this2.setState({\n                username: user_name,\n                user_email: user_email,\n                rolename: _this2.onSearchLevelname(user_level),\n                switch1: Boolean(Number(user_status))\n              });\n            } else {\n              _this2.setErrorMsg(res.data.message);\n\n              _this2.dialog.showAlert(res.data.message);\n            }\n          });\n        } else {\n          //this.setErrorMsg(res.data.msg);\n          _this2.dialog.showAlert(res.data.message);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var element = __jsx(\"div\", {\n        className: \"toggle-switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        \"data-toggle\": \"toggle\",\n        \"data-on\": \"Ready\",\n        \"data-off\": \"Not Ready\",\n        \"data-onstyle\": \"success\",\n        \"data-offstyle\": \"danger\"\n      }));\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Edit User',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-user-plus\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"offset-md-0\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"form\", {\n        className: \"form-horizontal\"\n      }, __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Username\",\n        id: \"validation-ex1\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            username: e.target.value\n          });\n        },\n        value: this.state.username,\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\",\n        placeholder: \"Email\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            user_email: e.target.value\n          });\n        },\n        value: this.state.user_email,\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select user level\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-1\",\n        className: \"form-control\",\n        value: this.state.rolename,\n        onChange: this.handleSelectChange\n      }, this.state.role_data.map(function (data, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: data.user_level_name\n        }, data.user_level_name);\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex3\",\n        placeholder: \"Password\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            password: e.target.value\n          });\n        },\n        value: this.state.password,\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex4\",\n        placeholder: \"Confirm Password\",\n        onChange: function onChange(e) {\n          return _this3.setState({\n            confirmpassword: e.target.value\n          });\n        },\n        value: this.state.confirmpassword,\n        required: true\n      }))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"label\", {\n        \"class\": \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(1),\n        checked: this.state.switch1\n      }), __jsx(\"span\", {\n        \"class\": \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"d-inline-block btn-block\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn btn-info float-right\",\n        onClick: this.handleSubmit\n      }, \"Save\")))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this3.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return AddUser;\n}(React.Component);\n\nexport { AddUser as default };","map":null,"metadata":{},"sourceType":"module"}
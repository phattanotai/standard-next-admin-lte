{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceGameList } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport FilesUploadComponent from '../../components/files-upload-component';\nexport default class EditGame extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      game_code: \"\",\n      game_id: \"\",\n      game_id2: \"\",\n      game_id3: \"\",\n      game_id4: \"\",\n      game_name: \"\",\n      game_brand: \"\",\n      game_type: \"Slot\",\n      game_img: \"\",\n      game_img_app: \"\",\n      game_line: \"\",\n      game_new: \"\",\n      game_jackpot: \"\",\n      game_free: \"\",\n      game_provider: \"\",\n      game_status: 0,\n      //1=enable , 0=disable\n      switch1: true,\n      switch2: true,\n      switch3: true,\n      switch4: true,\n      data_brand: [],\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      gameid: Cookies.get('gameId'),\n      brand: \"\",\n      image: \"\",\n      imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      imageAppPreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      file: \"\",\n      appfile: \"\",\n      original_game_img: \"\",\n      original_game_img_app: \"\"\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.onFileAppChange = this.onFileAppChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\n    this.handleSelectTypeChange = this.handleSelectTypeChange.bind(this);\n  }\n\n  handleSelectBrandChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      brand: e.target.value\n    });\n  }\n\n  handleSelectTypeChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      game_type: e.target.value\n    });\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      this.setState({\n        imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n      });\n    }\n  }\n\n  onFileAppChange(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.onloadend = () => {\n        this.setState({\n          appfile: file,\n          imageAppPreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      this.setState({\n        imageAppPreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n      });\n    }\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/game_lists\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async editGame() {\n    let game_status = 0;\n\n    if (this.state.switch1) {\n      game_status = 1;\n    }\n\n    let game_new = \"No\";\n\n    if (this.state.switch2) {\n      game_new = \"Yes\";\n    }\n\n    let game_free = \"No\";\n\n    if (this.state.switch3) {\n      game_free = \"Yes\";\n    }\n\n    let game_jackpot = \"No\";\n\n    if (this.state.switch4) {\n      game_jackpot = \"Yes\";\n    }\n\n    console.log('game_brand : ' + this.state.brand);\n    console.log('game_type : ' + this.state.game_type);\n    const a = {\n      game_code: this.state.game_code,\n      game_id: this.state.game_id,\n      game_id2: this.state.game_id2,\n      game_id3: this.state.game_id3,\n      game_id4: this.state.game_id4,\n      game_name: this.state.game_name,\n      game_brand: this.state.brand,\n      game_type: this.state.game_type,\n      game_img: this.state.game_img,\n      game_line: this.state.game_line,\n      game_new: game_new,\n      game_jackpot: game_jackpot,\n      game_free: game_free,\n      game_provider: this.state.game_provider,\n      game_status: game_status,\n      original_game_img: this.state.original_game_img,\n      game_img_app: this.state.game_img_app,\n      original_game_img_app: this.state.original_game_img_app\n    };\n    console.log('Edit Game start...');\n    const res2 = await ServiceGameList.editGames(a, this.state.gameid);\n    console.log('res : ' + res2.data);\n\n    if (res2.data.status === 2000) {\n      console.log('Edit Game Success!!!');\n      this.dialog.show({\n        title: 'Slot Admin information',\n        body: 'บันทึกแก้ไข Game : ' + this.state.game_name + ' เรียบร้อยแล้ว',\n        actions: [Dialog.OKAction(() => {\n          Router.push(\"/game_lists\");\n        })]\n      });\n    } else {\n      this.dialog.showAlert(res2.data.message);\n      this.setErrorMsg(res2.data.msg);\n    }\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.game_code !== \"\" && this.state.game_name !== \"\") {\n        if (this.state.file) {\n          const formData = new FormData();\n          formData.append('file', this.state.file);\n          const res = await ServiceImage.imageUpload(formData);\n\n          if (res.data.status === 2000) {\n            const {\n              filename\n            } = res.data.data;\n            console.log('image file name : ' + filename);\n            this.setState({\n              game_img: filename\n            }); //this.editGame();\n\n            if (this.state.appfile) {\n              const formData = new FormData();\n              formData.append('file', this.state.appfile);\n              const res = ServiceImage.imageUpload(formData);\n\n              if (res.data.status === 2000) {\n                const {\n                  filename\n                } = res.data.data;\n                console.log('image app file name : ' + filename);\n                this.setState({\n                  game_img_app: filename\n                });\n                this.editGame();\n              } else {\n                this.dialog.showAlert('บันทึกข้อมูล Game ไม่สำเร็จ กรุณาตรวจสอบข้อมูลบันทึกใหม่อีกครั้ง!!!');\n              }\n            } else {\n              this.editGame();\n            }\n          } else {\n            this.dialog.showAlert('บันทึกข้อมูล Game ไม่สำเร็จ กรุณาตรวจสอบข้อมูลบันทึกใหม่อีกครั้ง!!!');\n          }\n        } else {\n          //this.editGame();\n          if (this.state.appfile) {\n            const formData = new FormData();\n            formData.append('file', this.state.appfile);\n            const res = await ServiceImage.imageUpload(formData);\n\n            if (res.data.status === 2000) {\n              const {\n                filename\n              } = res.data.data;\n              console.log('image app file name : ' + filename);\n              this.setState({\n                game_img_app: filename\n              });\n              this.editGame();\n            } else {\n              this.dialog.showAlert('บันทึกข้อมูล Game ไม่สำเร็จ กรุณาตรวจสอบข้อมูลบันทึกใหม่อีกครั้ง!!!');\n            }\n          } else {\n            this.editGame();\n          }\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      //this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      agent_type: e.target.value\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data_brand: data\n        });\n\n        if (data.length > 0) {\n          const {\n            brand_name\n          } = data[0]; //this.setState({ brand: brand_name });\n\n          console.log('Brand name:' + brand_name);\n        }\n\n        if (Cookies.get(\"brand\")) {\n          this.setState({\n            brand: Cookies.get(\"brand\")\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n    ServiceGameList.getGames(this.state.gameid).then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        const {\n          game_code,\n          game_id,\n          game_id2,\n          game_id3,\n          game_id4,\n          game_name,\n          game_brand,\n          game_type,\n          game_img,\n          game_line,\n          game_new,\n          game_jackpot,\n          game_free,\n          game_provider,\n          game_status,\n          game_img_app\n        } = data[0];\n\n        if (game_img !== '') {\n          this.setState({\n            imagePreviewUrl: ServiceImage.imageshow(game_img)\n          });\n        } else {\n          this.setState({\n            imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n          });\n        }\n\n        if (game_img_app !== '') {\n          this.setState({\n            imageAppPreviewUrl: ServiceImage.imageshow(game_img_app)\n          });\n        } else {\n          this.setState({\n            imageAppPreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n          });\n        }\n\n        let gamenew = 0;\n\n        if (game_new === \"Yes\") {\n          gamenew = 1;\n        }\n\n        let gamefree = 0;\n\n        if (game_free === \"Yes\") {\n          gamefree = 1;\n        }\n\n        let gamejackpot = 0;\n\n        if (game_jackpot === \"Yes\") {\n          gamejackpot = 1;\n        }\n\n        console.log(\"game_brand: \" + game_brand);\n        this.setState({\n          game_code: game_code,\n          game_id: game_id,\n          game_id2: game_id2,\n          game_id3: game_id3,\n          game_id4: game_id4,\n          game_name: game_name,\n          game_brand: game_brand,\n          game_type: game_type,\n          original_game_img: game_img,\n          game_line: game_line,\n          switch2: Boolean(Number(gamenew)),\n          switch1: Boolean(Number(game_status)),\n          switch3: Boolean(Number(gamefree)),\n          switch4: Boolean(Number(gamejackpot)),\n          game_provider: game_provider,\n          brand: game_brand,\n          game_img: game_img,\n          game_img_app: game_img_app\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Edit Game',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-cubes\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Brand\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.brand,\n      onChange: this.handleSelectBrandChange\n    }, this.state.data_brand.map((brand, index) => {\n      return __jsx(\"option\", {\n        value: brand.brand_name,\n        key: index\n      }, brand.brand_name);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select game type\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.game_type,\n      onChange: this.handleSelectTypeChange\n    }, __jsx(\"option\", {\n      value: \"Slot\"\n    }, \"Slot\"), __jsx(\"option\", {\n      value: \"Fish\"\n    }, \"Fish\"), __jsx(\"option\", {\n      value: \"Livecasino\"\n    }, \"Livecasino\"), __jsx(\"option\", {\n      value: \"Card\"\n    }, \"Card\"), __jsx(\"option\", {\n      value: \"Accord\"\n    }, \"Accord\"), __jsx(\"option\", {\n      value: \"Sportbook\"\n    }, \"Sportbook\"), __jsx(\"option\", {\n      value: \"SCRATCH\"\n    }, \"SCRATCH\"), __jsx(\"option\", {\n      value: \"N/A\"\n    }, \"N/A\"))))), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\" //placeholder=\"game code\"\n      ,\n      id: \"validation-ex1\",\n      onChange: e => this.setState({\n        game_code: e.target.value\n      }),\n      value: this.state.game_code,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game name\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"game name\"\n      ,\n      onChange: e => this.setState({\n        game_name: e.target.value\n      }),\n      value: this.state.game_name,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game id 1\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"game id 1\"\n      ,\n      onChange: e => this.setState({\n        game_id: e.target.value\n      }),\n      value: this.state.game_id,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game id 2\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"game id 2\"\n      ,\n      onChange: e => this.setState({\n        game_id2: e.target.value\n      }),\n      value: this.state.game_id2,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game id 3\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"game id 3\"\n      ,\n      onChange: e => this.setState({\n        game_id3: e.target.value\n      }),\n      value: this.state.game_id3,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game id 4\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"game id 4\"\n      ,\n      onChange: e => this.setState({\n        game_id4: e.target.value\n      }),\n      value: this.state.game_id4,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game line\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"game line\"\n      ,\n      onChange: e => this.setState({\n        game_line: e.target.value\n      }),\n      value: this.state.game_line,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Game Jackpot\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(4),\n      checked: this.state.switch4\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Game Free\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(3),\n      checked: this.state.switch3\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })))), __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"game provider\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\" //placeholder=\"game provider\"\n      ,\n      onChange: e => this.setState({\n        game_provider: e.target.value\n      }),\n      value: this.state.game_provider,\n      required: true\n    })), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      class: \"card\"\n    }, __jsx(\"div\", {\n      class: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"h5\", null, \"Game Image File Upload\"), __jsx(\"br\", null), __jsx(\"img\", {\n      src: this.state.imagePreviewUrl,\n      style: {\n        flex: 1,\n        width: \"150px\",\n        height: null,\n        resizeMode: 'contain'\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group mt-10\"\n    }, __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange\n    })))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      class: \"card\"\n    }, __jsx(\"div\", {\n      class: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"h5\", null, \"Game Image App File Upload\"), __jsx(\"br\", null), __jsx(\"img\", {\n      src: this.state.imageAppPreviewUrl,\n      style: {\n        flex: 1,\n        width: \"150px\",\n        height: null,\n        resizeMode: 'contain'\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group mt-10\"\n    }, __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileAppChange\n    })))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Game New\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(2),\n      checked: this.state.switch2\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Brand status\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
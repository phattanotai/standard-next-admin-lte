{"ast":null,"code":"var _jsxFileName = \"D:\\\\WorkSpace\\\\CM\\\\Slot\\\\slot_backend\\\\pages\\\\game_lists\\\\index.js\";\nvar __jsx = React.createElement;\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies, { getJSON, set } from \"js-cookie\";\nimport { ServiceGameList } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceBrand } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\nexport default class Brand extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      data: [],\n      rawdata: [],\n      errorMessage: \"\",\n      role_data: [],\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\",\n      data_brand: [],\n      brand: \"\"\n    };\n    this.deleteGame = this.deleteGame.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\n    this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\n    this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\n  }\n\n  async deleteGame(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceGameList.deleteGames(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete brand successfully.');\n        this.setState({\n          data: this.state.data.filter(game => {\n            return game._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(game => {\n            return game._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    var b = \"\";\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        this.setState({\n          data_brand: data\n        });\n        b = this.SearchBrand2(Cookies.get(\"brand\"), data);\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n\n    if (Cookies.get(\"brand\")) {\n      //console.log(\"have brand\");\n      let mycookie = Cookies.get(\"brand\");\n      this.setState({\n        brand: mycookie,\n        brand_name: mycookie\n      });\n      console.log(\"have brand : \" + mycookie);\n      console.log(\"brand code: \" + b);\n      ServiceGameList.listGamesFromBrand(b).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    } else {\n      ServiceGameList.listGames().then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }\n\n  setErrorMsg(msg) {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  handleSelectRowPerPageChange(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data: this.state.data,\n      pagetotal: page_remain,\n      pagenumber: 1,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  SearchBrand(brandname) {\n    console.log('get brand code');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_name == brandname;\n    });\n    const brand_code = brands.map((brand, index) => {\n      return brand.brand_code;\n    });\n    return brand_code[0];\n  }\n\n  SearchBrand2(brandname, data_brand) {\n    console.log('get brand code');\n    const brands = data_brand.filter(brand => {\n      return brand.brand_name == brandname;\n    });\n    const brand_code = brands.map((brand, index) => {\n      return brand.brand_code;\n    });\n    return brand_code[0];\n  }\n\n  handleSelectBrandChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      brand: e.target.value\n    });\n\n    if (e.target.value !== 'All') {\n      Cookies.set(\"brand\", e.target.value);\n      ServiceGameList.listGamesFromBrand(this.SearchBrand(e.target.value)).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    } else {\n      Cookies.remove('brand');\n      ServiceGameList.listGames().then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Game Lists',\n      contentTitleButton: __jsx(Link, {\n        href: \"/game_lists/add\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 33\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 17\n        }\n      }, __jsx(\"i\", {\n        className: \"fa fa fa-navicon fa-fw\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 82\n        }\n      }), \"Add a new game\")),\n      url: this.props.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 16\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 25\n      }\n    }, __jsx(MDBContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 37\n      }\n    }, \"Brands\", __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.brand,\n      onChange: this.handleSelectBrandChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 41\n      }\n    }, __jsx(\"option\", {\n      value: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 45\n      }\n    }, \"All\"), this.state.data_brand.map((brand, index) => {\n      return __jsx(\"option\", {\n        value: brand.brand_name,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 57\n        }\n      }, brand.brand_name);\n    }))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 37\n      }\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage,\n      onChange: this.handleSelectRowPerPageChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 41\n      }\n    }, __jsx(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 45\n      }\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 45\n      }\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 45\n      }\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 45\n      }\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 45\n      }\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 45\n      }\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 45\n      }\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 45\n      }\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 45\n      }\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 37\n      }\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber,\n      onChange: this.handleSelectPageNumberChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 41\n      }\n    }, this.state.pagearr.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 57\n        }\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 41\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search\",\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          this.setState({\n            data: this.state.rawdata.filter(data => {\n              return data.game_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(data => {\n            return data.game_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\n        var num = datalength % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: datalength,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      },\n      value: this.state.searchtxt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 45\n      }\n    }), __jsx(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 45\n      }\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 49\n      }\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 85\n      }\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 25\n      }\n    }, __jsx(\"table\", {\n      className: \"table table-hover table-striped table-bordered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 29\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 33\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 37\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 41\n      }\n    }, \"Stauts\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 41\n      }\n    }, \"Img\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 41\n      }\n    }, \"Code\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 41\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 41\n      }\n    }, \"Brand\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 41\n      }\n    }, \"ID\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 41\n      }\n    }, \"Type\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 41\n      }\n    }, \"New\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 41\n      }\n    }, \"Line\"), __jsx(\"th\", {\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 41\n      }\n    }, \"Detail / Edit / Delete\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 33\n      }\n    }, this.state.data.map((game, index) => {\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (game.game_status == 1) {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 49\n          }\n        }, __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 53\n          }\n        }, __jsx(\"label\", {\n          className: `badge badge-info`,\n          style: {\n            display: game.game_new === 'Yes' ? 'block' : 'none'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 74\n          }\n        }, \"new\"), __jsx(\"label\", {\n          className: `badge badge-${classBadge}`,\n          style: {\n            display: 'block'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 187\n          }\n        }, mystatus)), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 53\n          }\n        }, __jsx(\"img\", {\n          src: game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n          style: {\n            flex: 1,\n            width: \"80px\",\n            height: null,\n            resizeMode: 'contain'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 57\n          }\n        })), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 53\n          }\n        }, game.game_code), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 53\n          }\n        }, game.game_name), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 53\n          }\n        }, game.game_brand), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 53\n          }\n        }, game.game_id), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 53\n          }\n        }, game.game_type), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 53\n          }\n        }, game.game_new), __jsx(\"td\", {\n          className: \"py-1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 53\n          }\n        }, game.game_line), __jsx(\"td\", {\n          className: \"py-1\",\n          style: {\n            textAlign: \"right\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 53\n          }\n        }, __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-success btn-icon-text\",\n          onClick: () => {\n            console.log(\"Detail game id:\" + game._id);\n            Cookies.set(\"gameId\", game._id);\n            Router.push(\"/game_lists/description\");\n          },\n          style: {\n            marginLeft: 5,\n            width: 80\n          } //onClick={this.onClick}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 57\n          }\n        }, \"Detail\"), \"\\xA0\", __jsx(\"button\", {\n          type: \"button\",\n          className: \"btn btn-warning btn-icon-text\",\n          onClick: () => {\n            console.log(\"edit game id:\" + game._id);\n            Cookies.set(\"gameId\", game._id);\n            Router.push(\"/game_lists/edit\");\n          },\n          style: {\n            width: 80\n          } //onClick={this.onClick}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 57\n          }\n        }, \"Edit\"), __jsx(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            this.dialog.show({\n              title: 'Slot Admin confirm',\n              body: 'Are you sure?',\n              actions: [Dialog.CancelAction(() => {\n                this.dialog.hide();\n              }), Dialog.OKAction(() => {\n                console.log(\"delete Game id:\" + game._id);\n                this.deleteGame(game._id);\n              })],\n              bsSize: 'small',\n              onHide: dialog => {\n                this.dialog.hide();\n                console.log('closed by clicking background.');\n              }\n            });\n          },\n          style: {\n            marginLeft: 5,\n            width: 80\n          },\n          className: \"btn btn-danger btn-icon-text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 57\n          }\n        }, \"Delete\")));\n    })))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/game_lists/index.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Router","Cookies","getJSON","set","ServiceGameList","ServiceImage","ServiceBrand","Dialog","MDBContainer","Brand","Component","constructor","props","state","isLoading","data","rawdata","errorMessage","role_data","pagetotal","pagenumber","recordtotal","rowperpage","pagearr","startrow","endrow","searchtxt","data_brand","brand","deleteGame","bind","setErrorMsg","handleSelectRowPerPageChange","handleSelectPageNumberChange","handleSelectBrandChange","id","res","deleteGames","status","console","log","setState","filter","game","_id","message","dialog","showAlert","error","componentDidMount","get","push","b","listBrands","then","length","SearchBrand2","msg","mycookie","brand_name","listGamesFromBrand","page_remain","Math","floor","num","arr","i","pagenum","listGames","e","preventDefault","target","value","forceUpdate","SearchBrand","brandname","brands","brand_code","map","index","remove","render","url","p","width","name","datalength","game_name","indexOf","onSearchClick","textAlign","classBadge","mystatus","game_status","display","game_new","game_img","imageshow","flex","height","resizeMode","game_code","game_brand","game_id","game_type","game_line","marginLeft","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies, { getJSON, set } from \"js-cookie\";\r\nimport { ServiceGameList } from \"../../service\";\r\nimport { ServiceImage } from \"../../service\";\r\nimport { ServiceBrand } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nimport { MDBContainer } from 'mdbreact';\r\n\r\nexport default class Brand extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: true,\r\n            data: [],\r\n            rawdata: [],\r\n            errorMessage: \"\",\r\n\r\n            role_data: [],\r\n\r\n            pagetotal: 0,\r\n            pagenumber: 0,\r\n            recordtotal: 0,\r\n            rowperpage: 10,\r\n            pagearr: [],\r\n            startrow: 0,\r\n            endrow: 0,\r\n            searchtxt: \"\",\r\n\r\n            data_brand: [],\r\n            brand: \"\",\r\n\r\n        };\r\n        this.deleteGame = this.deleteGame.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\r\n        this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\r\n\r\n        this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\r\n\r\n    }    \r\n\r\n    async deleteGame(id) {\r\n        if (this.state.errorMessage) this.setErrorMsg(\"\");\r\n        try {\r\n            const res = await ServiceGameList.deleteGames(id);\r\n            if (res.data.status === 2000) {\r\n                console.log('delete brand successfully.');\r\n                this.setState({\r\n                    data: this.state.data.filter((game) => {\r\n                        return game._id !== id;\r\n                    })\r\n                });\r\n                this.setState({                    \r\n                    rawdata: this.state.rawdata.filter((game) => {\r\n                        return game._id !== id;\r\n                    }) \r\n                });\r\n            } else {\r\n                this.setErrorMsg(res.data.message);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n            this.dialog.showAlert(error);\r\n        }\r\n    }    \r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        var b = \"\";\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_brand: data });\r\n                b = this.SearchBrand2(Cookies.get(\"brand\"),data);\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n        if (Cookies.get(\"brand\")) {\r\n            //console.log(\"have brand\");\r\n            let mycookie = Cookies.get(\"brand\");\r\n            this.setState({brand: mycookie,brand_name: mycookie});\r\n            console.log(\"have brand : \" + mycookie);\r\n            console.log(\"brand code: \" + b );\r\n            ServiceGameList.listGamesFromBrand(b).then((res) => {\r\n                console.log(res.data);\r\n                const { data, status } = res.data;\r\n                if (status === 2000) {\r\n                    console.log(\"data length : \" + data.length);\r\n                    this.setState({ data: data });\r\n                    this.setState({ rawdata: data });\r\n\r\n                    var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                    var num = data.length % this.state.rowperpage;\r\n                    if (num > 0) {\r\n                        page_remain++;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    var i;\r\n                    for (i = 0; i < page_remain; i++) {\r\n                        arr.push(i + 1);\r\n                    }\r\n                    var pagenum = 1;\r\n                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                    var endrow = startrow + this.state.rowperpage;\r\n                    this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                } else {\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            });\r\n        } else {\r\n            ServiceGameList.listGames().then((res) => {\r\n                console.log(res.data);\r\n                const { data, status } = res.data;\r\n                if (status === 2000) {\r\n                    console.log(\"data length : \" + data.length);\r\n                    this.setState({ data: data });\r\n                    this.setState({ rawdata: data });\r\n    \r\n                    var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                    var num = data.length % this.state.rowperpage;\r\n                    if (num > 0) {\r\n                        page_remain++;\r\n                    }\r\n    \r\n                    var arr = [];\r\n                    var i;\r\n                    for (i = 0; i < page_remain; i++) {\r\n                        arr.push(i + 1);\r\n                    }\r\n                    var pagenum = 1;\r\n                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                    var endrow = startrow + this.state.rowperpage;\r\n                    this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                } else {\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            });\r\n        }\r\n\r\n        \r\n\r\n        \r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    handleSelectRowPerPageChange(e) {\r\n        e.preventDefault();\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rowperpage: e.target.value });\r\n        var page_remain = Math.floor(this.state.recordtotal / e.target.value);\r\n        console.log(\"pagetotal : \" + page_remain);\r\n        var num = this.state.recordtotal % e.target.value;\r\n        console.log(\"num : \" + num);\r\n        if (num > 0) {\r\n            page_remain++;\r\n        }\r\n        var arr = [];\r\n        var i;\r\n        for (i = 0; i < page_remain; i++) {\r\n            arr.push(i + 1);\r\n        }\r\n        console.log(\"arr : \" + arr);\r\n        var pagenum = 1;\r\n        var startrow = (pagenum - 1) * e.target.value;\r\n        var endrow = startrow + e.target.value;\r\n        this.setState({ pagearr: [] });\r\n        console.log(\"startrow : \" + startrow);\r\n        console.log(\"endrow : \" + endrow);\r\n        this.setState({ data: this.state.data, pagetotal: page_remain, pagenumber: 1, pagearr: arr, startrow: startrow, endrow: endrow });\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleSelectPageNumberChange(e) {\r\n        e.preventDefault();\r\n        this.setState({ pagenumber: e.target.value });\r\n        var pagenum = e.target.value;\r\n        var startrow = (pagenum - 1) * this.state.rowperpage;\r\n        var endrow = startrow + this.state.rowperpage;\r\n        this.setState({ startrow: startrow, endrow: endrow });\r\n    }\r\n\r\n    SearchBrand(brandname) {\r\n        console.log('get brand code');\r\n        const brands = this.state.data_brand.filter((brand) => {\r\n            return brand.brand_name == brandname;\r\n        })\r\n\r\n        const brand_code = brands.map((brand, index) => {\r\n            return brand.brand_code;\r\n        })\r\n\r\n        return brand_code[0];\r\n    }\r\n\r\n    SearchBrand2(brandname,data_brand) {\r\n        console.log('get brand code');\r\n        const brands = data_brand.filter((brand) => {\r\n            return brand.brand_name == brandname;\r\n        })\r\n\r\n        const brand_code = brands.map((brand, index) => {\r\n            return brand.brand_code;\r\n        })\r\n\r\n        return brand_code[0];\r\n    }\r\n\r\n    handleSelectBrandChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ brand: e.target.value });\r\n        if (e.target.value !== 'All') {\r\n            Cookies.set(\"brand\", e.target.value);\r\n            ServiceGameList.listGamesFromBrand(this.SearchBrand(e.target.value)).then((res) => {\r\n                console.log(res.data);\r\n                const { data, status } = res.data;\r\n                if (status === 2000) {\r\n                    console.log(\"data length : \" + data.length);\r\n                    this.setState({ data: data });\r\n                    this.setState({ rawdata: data });\r\n\r\n                    var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                    var num = data.length % this.state.rowperpage;\r\n                    if (num > 0) {\r\n                        page_remain++;\r\n                    }\r\n\r\n                    var arr = [];\r\n                    var i;\r\n                    for (i = 0; i < page_remain; i++) {\r\n                        arr.push(i + 1);\r\n                    }\r\n                    var pagenum = 1;\r\n                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                    var endrow = startrow + this.state.rowperpage;\r\n                    this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                } else {\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            });\r\n        } else {\r\n            Cookies.remove('brand');\r\n            ServiceGameList.listGames().then((res) => {\r\n                console.log(res.data);\r\n                const { data, status } = res.data;\r\n                if (status === 2000) {\r\n                    console.log(\"data length : \" + data.length);\r\n                    this.setState({ data: data });\r\n                    this.setState({ rawdata: data });\r\n    \r\n                    var page_remain = Math.floor(data.length / this.state.rowperpage);\r\n                    var num = data.length % this.state.rowperpage;\r\n                    if (num > 0) {\r\n                        page_remain++;\r\n                    }\r\n    \r\n                    var arr = [];\r\n                    var i;\r\n                    for (i = 0; i < page_remain; i++) {\r\n                        arr.push(i + 1);\r\n                    }\r\n                    var pagenum = 1;\r\n                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                    var endrow = startrow + this.state.rowperpage;\r\n                    this.setState({ recordtotal: data.length, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                } else {\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <AdminLayoutHoc\r\n            contentTitle={'Game Lists'}\r\n            contentTitleButton={<Link href=\"/game_lists/add\">\r\n                <button type=\"button\" className=\"btn btn-outline-success btn-sm\"><i className=\"fa fa fa-navicon fa-fw\" />Add a new game</button>\r\n            </Link>}\r\n            url={this.props.url}\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            {/* <h3 className=\"card-title\">Current users</h3> */}\r\n                            <MDBContainer>\r\n                                <div className=\"wrapper\">\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Brands\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.brand} onChange={this.handleSelectBrandChange}>\r\n                                            <option value='All'>All</option>\r\n                                            {\r\n                                                this.state.data_brand.map((brand, index) => {\r\n                                                    return (\r\n                                                        <option value={brand.brand_name} key={index}>{brand.brand_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        Row per page\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.rowperpage} onChange={this.handleSelectRowPerPageChange}>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='35'>35</option>\r\n                                            <option value='40'>40</option>\r\n                                            <option value='45'>45</option>\r\n                                            <option value='50'>50</option>\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"w-auto h-25 p-3  d-inline-block\">\r\n                                        PageNumber\r\n                                        <select id=\"select-1\" className=\"form-control\" value={this.state.pagenumber} onChange={this.handleSelectPageNumberChange}>\r\n                                            {\r\n                                                this.state.pagearr.map((p, index) => {\r\n                                                    return (\r\n                                                        <option value={p} key={index}>{p}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"card-tools d-inline-block\">\r\n                                        <div className=\"input-group input-group-sm\" style={{ width: '100%' }}>\r\n                                            <input type=\"text\" name=\"table_search\"\r\n                                                className=\"form-control float-right\"\r\n                                                placeholder=\"Search\"\r\n                                                onChange={(e) => {\r\n                                                    this.setState({ searchtxt: e.target.value });\r\n                                                    var name = e.target.value;\r\n                                                    var datalength = this.state.rawdata.length;\r\n                                                    if (name != \"\") {\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata.filter((data) => {\r\n                                                                return data.game_name.indexOf(name) !== -1;\r\n                                                            })\r\n                                                        });\r\n                                                        datalength = this.state.rawdata.filter((data) => {\r\n                                                            return data.game_name.indexOf(name) !== -1;\r\n                                                        }).length;\r\n                                                    } else {\r\n                                                        this.setState({\r\n                                                            data: this.state.rawdata\r\n                                                        });\r\n                                                    }\r\n\r\n                                                    var page_remain = Math.floor(datalength / this.state.rowperpage);\r\n                                                    var num = datalength % this.state.rowperpage;\r\n                                                    if (num > 0) {\r\n                                                        page_remain++;\r\n                                                    }\r\n\r\n                                                    var arr = [];\r\n                                                    var i;\r\n                                                    for (i = 0; i < page_remain; i++) {\r\n                                                        arr.push(i + 1);\r\n                                                    }\r\n                                                    var pagenum = 1;\r\n                                                    var startrow = (pagenum - 1) * this.state.rowperpage;\r\n                                                    var endrow = startrow + this.state.rowperpage;\r\n                                                    this.setState({ recordtotal: datalength, pagetotal: page_remain, pagenumber: pagenum, pagearr: arr, startrow: startrow, endrow: endrow });\r\n                                                }}\r\n                                                value={this.state.searchtxt} />\r\n                                            <div className=\"input-group-append\">\r\n                                                <button className=\"btn btn-default\"><i className=\"fa fa-search\" onClick={this.onSearchClick} /></button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </MDBContainer>\r\n\r\n                        </div>\r\n                        <div className=\"card-body table-responsive p-0\">\r\n                            <table className=\"table table-hover table-striped table-bordered\">\r\n                                <thead>\r\n                                    <tr >\r\n                                        <th>Stauts</th>\r\n                                        <th>Img</th>\r\n                                        <th>Code</th>\r\n                                        <th>Name</th>\r\n                                        <th>Brand</th>\r\n                                        <th>ID</th>\r\n                                        <th>Type</th>\r\n                                        <th>New</th>\r\n                                        <th>Line</th>\r\n                                        <th style={{ textAlign: \"right\" }}>Detail / Edit / Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.data.map((game, index) => {\r\n                                        let classBadge = 'danger';\r\n                                        let mystatus = 'disable';\r\n                                        if (game.game_status == 1) {\r\n                                            classBadge = 'success';\r\n                                            mystatus = 'enable';\r\n                                        }\r\n                                        if (index >= this.state.startrow && index < this.state.endrow)\r\n                                            //console.log(\"userid\" + user.id);\r\n                                            return (\r\n                                                <tr key={index}>\r\n                                                    <td className=\"py-1\"><label className={`badge badge-info`} style={{ display: game.game_new === 'Yes' ? 'block' : 'none' }}>new</label><label className={`badge badge-${classBadge}`}  style={{ display: 'block' }}>{mystatus}</label></td>\r\n                                                    <td className=\"py-1\">\r\n                                                        <img\r\n                                                            src={game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\")}\r\n                                                            style={{flex: 1,\r\n                                                                width: \"80px\", \r\n                                                                height: null, \r\n                                                                resizeMode: 'contain' }} \r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"py-1\">{game.game_code}</td>\r\n                                                    <td className=\"py-1\">{game.game_name}</td>\r\n                                                    <td className=\"py-1\">{game.game_brand}</td>\r\n                                                    <td className=\"py-1\">{game.game_id}</td>\r\n                                                    <td className=\"py-1\">{game.game_type}</td>\r\n                                                    <td className=\"py-1\">{game.game_new}</td>\r\n                                                    <td className=\"py-1\">{game.game_line}</td>\r\n                                                    <td className=\"py-1\" style={{ textAlign: \"right\" }}>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-success btn-icon-text\"\r\n                                                            onClick={() => {\r\n                                                                console.log(\"Detail game id:\" + game._id);\r\n                                                                Cookies.set(\"gameId\", game._id);\r\n                                                                Router.push(\"/game_lists/description\");\r\n                                                            }}\r\n                                                            style={{ marginLeft: 5, width: 80 }}\r\n                                                        //onClick={this.onClick}\r\n                                                        >\r\n                                                            Detail\r\n                                                        </button>&nbsp;\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className=\"btn btn-warning btn-icon-text\"\r\n                                                            onClick={() => {\r\n                                                                console.log(\"edit game id:\" + game._id);\r\n                                                                Cookies.set(\"gameId\", game._id);\r\n                                                                Router.push(\"/game_lists/edit\");\r\n\r\n                                                            }}\r\n                                                            style={{ width: 80 }}\r\n                                                        //onClick={this.onClick}\r\n                                                        >\r\n                                                            Edit\r\n                                                        </button>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            onClick={() => {\r\n                                                                this.dialog.show({\r\n                                                                    title: 'Slot Admin confirm',\r\n                                                                    body: 'Are you sure?',\r\n                                                                    actions: [\r\n                                                                        Dialog.CancelAction(() => {\r\n                                                                            this.dialog.hide();\r\n                                                                        }),\r\n                                                                        Dialog.OKAction(() => {\r\n                                                                            console.log(\"delete Game id:\" + game._id);\r\n                                                                            this.deleteGame(game._id);\r\n                                                                        })\r\n                                                                    ],\r\n                                                                    bsSize: 'small',\r\n                                                                    onHide: (dialog) => {\r\n                                                                        this.dialog.hide()\r\n                                                                        console.log('closed by clicking background.')\r\n                                                                    }\r\n                                                                })\r\n                                                            }}\r\n                                                            style={{ marginLeft: 5 , width: 80 }}\r\n                                                            className=\"btn btn-danger btn-icon-text\"\r\n                                                        >\r\n                                                            Delete\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n\r\n        </AdminLayoutHoc>\r\n    }\r\n} "]},"metadata":{},"sourceType":"module"}
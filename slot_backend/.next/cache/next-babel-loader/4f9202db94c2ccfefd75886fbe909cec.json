{"ast":null,"code":"var __jsx = React.createElement;\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\"; //import '../styles/styles.scss';\n\nimport { ServiceGameList } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class Description extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: Cookies.get(\"gameId\"),\n      game_code: \"\",\n      game_id: \"\",\n      game_id2: \"\",\n      game_id3: \"\",\n      game_id4: \"\",\n      game_name: \"\",\n      game_brand: \"\",\n      game_type: \"Slot\",\n      game_img: \"\",\n      game_line: \"\",\n      game_new: \"\",\n      game_jackpot: \"\",\n      game_free: \"\",\n      game_provider: \"\",\n      game_status: 0,\n      //1=enable , 0=disable\n      switch1: true,\n      switch2: true,\n      imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      errorMessage: \"\",\n      data: [],\n      classBadge: \"danger\",\n      gamestatus: 'disable'\n    };\n    this.handleResetSubmit = this.handleResetSubmit.bind(this); //this.handleSubmit = this.handleSubmit.bind(this);\n\n    /* this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.setErrorMsg = this.setErrorMsg.bind(this);\r\n      this.onClick = this.onClick.bind(this);\r\n    this.onConfirmClick = this.onConfirmClick.bind(this) */\n  }\n  /* onClick() {\r\n      this.dialog.showAlert('Hello Dialog!')\r\n  } */\n\n\n  handleResetSubmit() {\n    Router.push(\"/game_lists\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    console.log;\n    ServiceGameList.getGames(this.state.id).then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data length : \" + data.length);\n        const {\n          game_code,\n          game_id,\n          game_id2,\n          game_id3,\n          game_id4,\n          game_name,\n          game_brand,\n          game_type,\n          game_img,\n          game_line,\n          game_new,\n          game_jackpot,\n          game_free,\n          game_provider,\n          game_status\n        } = data[0];\n\n        if (game_img !== '') {\n          this.setState({\n            imagePreviewUrl: ServiceImage.imageshow(game_img)\n          });\n        } else {\n          this.setState({\n            imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n          });\n        }\n\n        let gamenew = 0;\n\n        if (game_new === \"Yes\") {\n          gamenew = 1;\n        }\n\n        console.log(\"game_brand: \" + game_brand);\n        this.setState({\n          game_code: game_code,\n          game_id: game_id,\n          game_id2: game_id2,\n          game_id3: game_id3,\n          game_id4: game_id4,\n          game_name: game_name,\n          game_brand: game_brand,\n          game_type: game_type,\n          original_game_img: game_img,\n          game_line: game_line,\n          game_new: game_new,\n          game_jackpot: game_jackpot,\n          game_free: game_free,\n          game_provider: game_provider,\n          brand: game_brand,\n          game_img: game_img\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Game Description',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-cubes\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"div\", {\n      className: \"col-12\"\n    }, __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover \"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, __jsx(\"h5\", null, \"ITEMS\")), __jsx(\"th\", null, __jsx(\"h5\", null, \"DESCRIPTION\")))), __jsx(\"tbody\", null, __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1 \"\n    }, __jsx(\"h5\", null, \"Game Logo\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"img\", {\n      src: this.state.game_img ? ServiceImage.imageshow(this.state.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      style: {\n        width: \"120px\",\n        height: \"120px\"\n      }\n    }))), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1 \"\n    }, __jsx(\"h5\", null, \"Game code\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_code)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Status\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"label\", {\n      className: `badge badge-${this.state.classBadge}`\n    }, this.state.gamestatus), \" \")), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Name\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_name)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Brand\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_brand)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Type\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_type)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Line\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_line)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game New\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_new)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Jackpot\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_jackpot)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Free\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_free)), __jsx(\"tr\", null, __jsx(\"td\", {\n      className: \"py-1\"\n    }, __jsx(\"h5\", null, \"Game Provider\")), __jsx(\"td\", {\n      className: \"py-1\"\n    }, this.state.game_provider)))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"bt-tb-page\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger w-25\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
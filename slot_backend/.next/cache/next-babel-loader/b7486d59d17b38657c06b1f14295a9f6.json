{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService, ServiceWallets } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\n\nvar EditWallets = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditWallets, _React$Component);\n\n  var _super = _createSuper(EditWallets);\n\n  function EditWallets(props) {\n    var _this;\n\n    _classCallCheck(this, EditWallets);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChange\", function (nr) {\n      return function () {\n        var switchNumber = \"switch\".concat(nr);\n\n        _this.setState(_defineProperty({}, switchNumber, !_this.state[switchNumber]));\n      };\n    });\n\n    _this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },            \n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      walletid: Cookies.get(\"walletid\"),\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      //value: \"Master\",\n      data_service: [],\n      data_agent: [],\n      data_brand: [],\n      data_member: [],\n      brand: \"\",\n      mem: \"\",\n      agent: \"\",\n      isDownLine: false,\n      game_username: \"\",\n      game_password: \"\",\n      agent_code: \"\",\n      brand_code: \"\",\n      credit: \"0\" // role: \"3\",\n      // rolename: \"User\",\n\n    };\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleToggleChange = _this.handleToggleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.setErrorMsg = _this.setErrorMsg.bind(_assertThisInitialized(_this)); //this.onClick = this.onClick.bind(this);\n    //this.onConfirmClick = this.onConfirmClick.bind(this)\n\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this)); //this.onSearchLevel = this.onSearchLevel.bind(this);\n\n    _this.onSearchAgentCode = _this.onSearchAgentCode.bind(_assertThisInitialized(_this));\n    _this.handleSelectMemberChange = _this.handleSelectMemberChange.bind(_assertThisInitialized(_this)); //this.SearchAgent = this.SearchAgent.bind(this);\n\n    _this.handleSelectBrandChange = _this.handleSelectBrandChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(EditWallets, [{\n    key: \"handleSelectBrandChange\",\n    value: function handleSelectBrandChange(e) {\n      e.preventDefault();\n      console.log('e.target.value =>' + e.target.value);\n      this.setState({\n        brand: e.target.value\n      });\n    }\n  }, {\n    key: \"handleSelectMemberChange\",\n    value: function handleSelectMemberChange(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n      console.log('e.target.value =>' + e.target.value);\n      var agent_code = this.onSearchAgentCode(e.target.value)[0];\n      this.setState({\n        mem: e.target.value,\n        agent_code: agent_code\n      });\n      ServiceBrand.listBrands().then(function (res) {\n        console.log(res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length); //this.setState({ data_brand: data });\n\n          var data_brand = data;\n\n          var agent_lineup = _this2.SearchAgent_LineUp(agent_code)[0];\n\n          console.log('agent_lineup =>' + agent_lineup);\n          console.log('agent_code =>' + agent_code);\n          Cookies.set(\"serviceagent\", agent_code);\n          var agent_param = \"\";\n\n          if (agent_lineup === \"\" || agent_lineup === \"-\") {\n            _this2.setState({\n              isDownLine: false\n            });\n\n            agent_param = agent_code;\n          } else {\n            _this2.setState({\n              isDownLine: true\n            });\n\n            agent_param = agent_lineup;\n          }\n\n          ServiceGameService.listServiceFromAgent(agent_param).then(function (res) {\n            console.log(res.data);\n            var _res$data2 = res.data,\n                data = _res$data2.data,\n                status = _res$data2.status;\n\n            if (status === 2000) {\n              console.log(\"data service length : \" + data.length);\n\n              _this2.setState({\n                data_service: data\n              });\n\n              var my_data_brand = [];\n              var i;\n\n              for (i = 0; i < data.length; i++) {\n                //data_brand.filter()\n                var brands = data_brand.filter(function (brand) {\n                  return brand.brand_code == data[i].brand_code;\n                }); //console.log('brands : ' + brands);\n\n                var brand_name = brands.map(function (brand, index) {\n                  return brand.brand_name;\n                });\n                console.log('brand_name : ' + brand_name[0]);\n                my_data_brand.push({\n                  brand_name: brand_name[0],\n                  brand_code: data[i].brand_code\n                });\n              }\n\n              console.log('data_brand : ' + JSON.stringify(my_data_brand));\n\n              _this2.setState({\n                data_brand: my_data_brand\n              });\n\n              _this2.setState({\n                brand: my_data_brand[0].brand_name\n              });\n\n              _this2.setState({\n                brand_code: my_data_brand[0].brand_code\n              });\n            } else {\n              _this2.setErrorMsg(res.data.msg);\n            }\n          });\n        } else {\n          _this2.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }, {\n    key: \"onSearchAgentCode\",\n    value: function onSearchAgentCode(mem_username) {\n      console.log('get Agent Code');\n      var mems = this.state.data_member.filter(function (mem) {\n        return mem.mem_username == mem_username;\n      });\n      var agentCode = mems.map(function (mem, index) {\n        return mem.agent_code;\n      }); //console.log('myrole:' + myrole);\n\n      return agentCode;\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/wallets\");\n    }\n  }, {\n    key: \"SearchAgent_LineUp\",\n    value: function SearchAgent_LineUp(agent_code) {\n      console.log('get agent_code');\n      var agents = this.state.data_agent.filter(function (agent) {\n        return agent.agent_code == agent_code;\n      });\n      var agent_lineup = agents.map(function (agent, index) {\n        return agent.agent_lineup;\n      }); //console.log('myrole:' + myrole);\n\n      return agent_lineup;\n    }\n  }, {\n    key: \"SearchAgent_LineUp2\",\n    value: function SearchAgent_LineUp2(data_agent, agent_code) {\n      console.log('get agent_code');\n      var agents = data_agent.filter(function (agent) {\n        return agent.agent_code == agent_code;\n      });\n      console.log('agents : ' + JSON.stringify(agents));\n      var agent_lineup = agents.map(function (agent, index) {\n        return agent.agent_lineup;\n      }); //console.log('myrole:' + myrole);\n\n      return agent_lineup;\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var a, res, b, res_member;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.state.agent_code !== \"\" && this.state.brand_code !== \"\" && this.state.game_username !== \"\" && this.state.game_password !== \"\")) {\n                  _context.next = 20;\n                  break;\n                }\n\n                a = {\n                  agent_code: this.state.agent_code,\n                  mem_username: this.state.mem,\n                  brand_code: this.state.brand_code,\n                  game_username: this.state.game_username,\n                  game_password: this.state.game_password\n                };\n                _context.next = 5;\n                return ServiceWallets.createWallets(a);\n\n              case 5:\n                res = _context.sent;\n                console.log('res : ' + res.data);\n\n                if (!(res.data.status === 2000)) {\n                  _context.next = 16;\n                  break;\n                }\n\n                b = {\n                  mem_balance: this.state.credit\n                };\n                _context.next = 11;\n                return ServiceMember.deposit(b, this.state.mem);\n\n              case 11:\n                res_member = _context.sent;\n                console.log('res : ' + res_member.data);\n\n                if (res_member.data.status === 2000) {\n                  console.log('Add Member : ' + this.state.mem + ' wallets Successfully!!!');\n                  this.dialog.show({\n                    title: 'Slot Admin information',\n                    body: 'Add Member : ' + this.state.mem + ' wallets to system is successfully.',\n                    actions: [Dialog.OKAction(function () {\n                      Router.push(\"/wallets\");\n                    })]\n                  });\n                } else {\n                  this.dialog.showAlert(res_member.data.message);\n                  this.setErrorMsg(res_member.data.msg);\n                }\n\n                _context.next = 18;\n                break;\n\n              case 16:\n                this.dialog.showAlert(res.data.message);\n                this.setErrorMsg(res.data.msg);\n\n              case 18:\n                _context.next = 21;\n                break;\n\n              case 20:\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n\n              case 21:\n                _context.next = 28;\n                break;\n\n              case 23:\n                _context.prev = 23;\n                _context.t0 = _context[\"catch\"](0);\n                this.dialog.showAlert(_context.t0);\n                console.error(\"An unexpected error happened occurred:\", _context.t0);\n                this.setErrorMsg(_context.t0.message);\n\n              case 28:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 23]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        rolename: e.target.value\n      });\n      var v = this.onSearchLevel(e.target.value);\n      this.setState({\n        role: v,\n        user_level: v\n      });\n    }\n  }, {\n    key: \"handleToggleChange\",\n    value: function handleToggleChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        user_enable: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n      /* ServiceMember.listMember().then((res) => {\r\n          console.log(res.data);\r\n          const { data, status } = res.data;\r\n          if (status === 2000) {\r\n              console.log(\"data length : \" + data.length);\r\n              this.setState({ data_member: data });\r\n              if (data.length > 0) {\r\n                  const { mem_name, agent_code } = data[0];\r\n                  this.setState({ mem: mem_name, agent_code: agent_code });\r\n                  console.log('Brand name:' + mem_name);\r\n                  console.log('agent_code:' + agent_code);\r\n                    ServiceBrand.listBrands().then((res) => {\r\n                      console.log(res.data);\r\n                      const { data, status } = res.data;\r\n                      if (status === 2000) {\r\n                          console.log(\"data length : \" + data.length);\r\n                          //this.setState({ data_brand: data });\r\n                          let data_brand = data;\r\n                            ServiceAgent.listAgent().then((res) => {\r\n                              console.log(res.data);\r\n                              const { data, status } = res.data;\r\n                              //var data_service = [];\r\n                              if (status === 2000) {\r\n                                  console.log(\"data agent length : \" + data.length);\r\n                                  console.log(\"data agent : \" + JSON.stringify(data));\r\n                                  this.setState({ data_agent: data });\r\n                                  //const {agent_code} = data[0];\r\n                                  const agent_lineup = this.SearchAgent_LineUp2(data, agent_code)[0];\r\n                                    console.log('agent_lineup =>' + agent_lineup);\r\n                                  console.log('agent_code =>' + agent_code);\r\n                                  Cookies.set(\"serviceagent\", agent_code);\r\n                                  if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                                      this.setState({ isDownLine: false });\r\n                                      ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                                          console.log(res.data);\r\n                                          const { data, status } = res.data;\r\n                                          if (status === 2000) {\r\n                                              console.log(\"data length : \" + data.length);\r\n                                              this.setState({ data_service: data });\r\n                                                let my_data_brand = [];\r\n                                              var i;\r\n                                              for (i = 0; i < data.length; i++) {\r\n                                                  //data_brand.filter()\r\n                                                  const brands = data_brand.filter((brand) => {\r\n                                                      return brand.brand_code == data[i].brand_code;\r\n                                                  })\r\n                                                  //console.log('brands : ' + brands);\r\n                                                  const brand_name = brands.map((brand, index) => {\r\n                                                      return brand.brand_name;\r\n                                                  })\r\n                                                  console.log('brand_name : ' + brand_name[0]);\r\n                                                  my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                              }\r\n                                              console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                              this.setState({ data_brand: my_data_brand });\r\n                                              this.setState({ brand: my_data_brand[0].brand_name });\r\n                                              this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                          } else {\r\n                                              this.setErrorMsg(res.data.msg);\r\n                                          }\r\n                                      });\r\n                                  } else {\r\n                                      this.setState({ isDownLine: true });\r\n                                      ServiceGameService.listServiceFromAgent(agent_lineup).then((res) => {\r\n                                          console.log(res.data);\r\n                                          const { data, status } = res.data;\r\n                                          if (status === 2000) {\r\n                                              console.log(\"data service length : \" + data.length);\r\n                                              this.setState({ data_service: data });\r\n                                                let my_data_brand = [];\r\n                                              var i;\r\n                                              for (i = 0; i < data.length; i++) {\r\n                                                  //data_brand.filter()\r\n                                                  const brands = data_brand.filter((brand) => {\r\n                                                      return brand.brand_code == data[i].brand_code;\r\n                                                  })\r\n                                                  //console.log('brands : ' + brands);\r\n                                                  const brand_name = brands.map((brand, index) => {\r\n                                                      return brand.brand_name;\r\n                                                  })\r\n                                                  console.log('brand_name : ' + brand_name[0]);\r\n                                                  my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                              }\r\n                                              console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                              this.setState({ data_brand: my_data_brand });\r\n                                              this.setState({ brand: my_data_brand[0].brand_name });\r\n                                              this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                          } else {\r\n                                              this.setErrorMsg(res.data.msg);\r\n                                          }\r\n                                      });\r\n                                  }\r\n                              }\r\n                          });\r\n                        } else {\r\n                          this.setErrorMsg(res.data.msg);\r\n                      }\r\n                  });\r\n                }\r\n                if (Cookies.get(\"brand\")) {\r\n                  this.setState({ brand: Cookies.get(\"brand\") });\r\n              }\r\n            } else {\r\n              this.setErrorMsg(res.data.msg);\r\n          }\r\n      }); */\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var element = __jsx(\"div\", {\n        className: \"toggle-switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        \"data-toggle\": \"toggle\",\n        \"data-on\": \"Ready\",\n        \"data-off\": \"Not Ready\",\n        \"data-onstyle\": \"success\",\n        \"data-offstyle\": \"danger\"\n      }));\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Add Wallets',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-money\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"offset-md-0\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"form\", {\n        className: \"form-horizontal\"\n      }, __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Member\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            mem: e.target.value\n          });\n        },\n        value: this.state.mem,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"agent code\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            agent_code: e.target.value\n          });\n        },\n        value: this.state.agent_code,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"\\xA0\"), __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"brand code\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            brand_code: e.target.value\n          });\n        },\n        value: this.state.brand_code,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"game username\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"agent name\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            game_username: e.target.value\n          });\n        },\n        value: this.state.game_username,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"game password\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex4\" //placeholder=\"agent detail\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            game_password: e.target.value\n          });\n        },\n        value: this.state.game_password,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-10\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"credit\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"Password\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            credit: e.target.value\n          });\n        },\n        value: this.state.credit,\n        required: true\n      })))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"d-inline-block btn-block\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn btn-info float-right\",\n        onClick: this.handleSubmit\n      }, \"Save\")))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this3.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return EditWallets;\n}(React.Component);\n\nexport { EditWallets as default };","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/wallets/edit.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceBrand","ServiceMember","ServiceGameService","ServiceWallets","Dialog","EditWallets","props","nr","switchNumber","setState","state","user_name","user_email","user_pass","add_date","user_level","user_status","switch1","walletid","get","errorMessage","datas","role_data","mydatas","data_service","data_agent","data_brand","data_member","brand","mem","agent","isDownLine","game_username","game_password","agent_code","brand_code","credit","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","handleResetSubmit","onSearchAgentCode","handleSelectMemberChange","handleSelectBrandChange","e","preventDefault","console","log","target","value","listBrands","then","res","data","status","length","agent_lineup","SearchAgent_LineUp","set","agent_param","listServiceFromAgent","my_data_brand","i","brands","filter","brand_name","map","index","push","JSON","stringify","msg","mem_username","mems","agentCode","agents","a","createWallets","b","mem_balance","deposit","res_member","dialog","show","title","body","actions","OKAction","showAlert","message","error","rolename","v","onSearchLevel","role","user_enable","element","url","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceBrand, ServiceMember, ServiceGameService, ServiceWallets } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class EditWallets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },            \r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            user_level: \"3\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,\r\n            walletid: Cookies.get(\"walletid\"),\r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            //value: \"Master\",\r\n            data_service: [],\r\n            data_agent: [],\r\n            data_brand: [],\r\n            data_member: [],\r\n            brand: \"\",\r\n            mem: \"\",\r\n            agent: \"\",\r\n            isDownLine: false,\r\n            game_username: \"\",\r\n            game_password: \"\",\r\n            agent_code: \"\",\r\n            brand_code: \"\",\r\n            credit: \"0\",\r\n            // role: \"3\",\r\n            // rolename: \"User\",\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        //this.onClick = this.onClick.bind(this);\r\n        //this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        //this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectMemberChange = this.handleSelectMemberChange.bind(this);\r\n        //this.SearchAgent = this.SearchAgent.bind(this);\r\n        this.handleSelectBrandChange = this.handleSelectBrandChange.bind(this);\r\n    }\r\n\r\n    handleSelectBrandChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ brand: e.target.value });\r\n    }\r\n\r\n    handleSelectMemberChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        const agent_code = this.onSearchAgentCode(e.target.value)[0];\r\n        this.setState({ mem: e.target.value, agent_code: agent_code });\r\n        ServiceBrand.listBrands().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                //this.setState({ data_brand: data });\r\n                let data_brand = data;\r\n                const agent_lineup = this.SearchAgent_LineUp(agent_code)[0];\r\n\r\n                console.log('agent_lineup =>' + agent_lineup);\r\n                console.log('agent_code =>' + agent_code);\r\n                Cookies.set(\"serviceagent\", agent_code);\r\n                var agent_param = \"\";\r\n                if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                    this.setState({ isDownLine: false });\r\n                    agent_param = agent_code;\r\n                } else {\r\n                    this.setState({ isDownLine: true });\r\n                    agent_param = agent_lineup;\r\n                }\r\n                ServiceGameService.listServiceFromAgent(agent_param).then((res) => {\r\n                    console.log(res.data);\r\n                    const { data, status } = res.data;\r\n                    if (status === 2000) {\r\n                        console.log(\"data service length : \" + data.length);\r\n                        this.setState({ data_service: data });\r\n\r\n                        let my_data_brand = [];\r\n                        var i;\r\n                        for (i = 0; i < data.length; i++) {\r\n                            //data_brand.filter()\r\n                            const brands = data_brand.filter((brand) => {\r\n                                return brand.brand_code == data[i].brand_code;\r\n                            })\r\n                            //console.log('brands : ' + brands);\r\n                            const brand_name = brands.map((brand, index) => {\r\n                                return brand.brand_name;\r\n                            })\r\n                            console.log('brand_name : ' + brand_name[0]);\r\n                            my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                        }\r\n                        console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                        this.setState({ data_brand: my_data_brand });\r\n                        this.setState({ brand: my_data_brand[0].brand_name });\r\n                        this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                });\r\n\r\n            }\r\n            else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    onSearchAgentCode(mem_username) {\r\n        console.log('get Agent Code');\r\n        const mems = this.state.data_member.filter((mem) => {\r\n            return mem.mem_username == mem_username;\r\n        })\r\n\r\n        const agentCode = mems.map((mem, index) => {\r\n            return mem.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/wallets\");\r\n    }\r\n\r\n    SearchAgent_LineUp(agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n    SearchAgent_LineUp2(data_agent, agent_code) {\r\n        console.log('get agent_code');\r\n        const agents = data_agent.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n        console.log('agents : ' + JSON.stringify(agents));\r\n        const agent_lineup = agents.map((agent, index) => {\r\n            return agent.agent_lineup;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_lineup;\r\n    }\r\n\r\n\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.brand_code !== \"\" && this.state.game_username !== \"\" && this.state.game_password !== \"\") {\r\n                const a = {\r\n                    agent_code: this.state.agent_code, mem_username: this.state.mem,\r\n                    brand_code: this.state.brand_code, game_username: this.state.game_username, game_password: this.state.game_password,\r\n                };\r\n                const res = await ServiceWallets.createWallets(a);\r\n                console.log('res : ' + res.data);\r\n                if (res.data.status === 2000) {\r\n                    const b = { mem_balance: this.state.credit };\r\n                    const res_member = await ServiceMember.deposit(b, this.state.mem);\r\n                    console.log('res : ' + res_member.data);\r\n                    if (res_member.data.status === 2000) {\r\n                        console.log('Add Member : ' + this.state.mem + ' wallets Successfully!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add Member : ' + this.state.mem + ' wallets to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/wallets\");\r\n                                })\r\n                            ]\r\n                        });\r\n                    } else {\r\n                        this.dialog.showAlert(res_member.data.message);\r\n                        this.setErrorMsg(res_member.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert(res.data.message);\r\n                    this.setErrorMsg(res.data.msg);\r\n                }\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n        const v = this.onSearchLevel(e.target.value);\r\n        this.setState({ role: v, user_level: v });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        /* ServiceMember.listMember().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            if (status === 2000) {\r\n                console.log(\"data length : \" + data.length);\r\n                this.setState({ data_member: data });\r\n                if (data.length > 0) {\r\n                    const { mem_name, agent_code } = data[0];\r\n                    this.setState({ mem: mem_name, agent_code: agent_code });\r\n                    console.log('Brand name:' + mem_name);\r\n                    console.log('agent_code:' + agent_code);\r\n\r\n                    ServiceBrand.listBrands().then((res) => {\r\n                        console.log(res.data);\r\n                        const { data, status } = res.data;\r\n                        if (status === 2000) {\r\n                            console.log(\"data length : \" + data.length);\r\n                            //this.setState({ data_brand: data });\r\n                            let data_brand = data;\r\n\r\n                            ServiceAgent.listAgent().then((res) => {\r\n                                console.log(res.data);\r\n                                const { data, status } = res.data;\r\n                                //var data_service = [];\r\n                                if (status === 2000) {\r\n                                    console.log(\"data agent length : \" + data.length);\r\n                                    console.log(\"data agent : \" + JSON.stringify(data));\r\n                                    this.setState({ data_agent: data });\r\n                                    //const {agent_code} = data[0];\r\n                                    const agent_lineup = this.SearchAgent_LineUp2(data, agent_code)[0];\r\n\r\n                                    console.log('agent_lineup =>' + agent_lineup);\r\n                                    console.log('agent_code =>' + agent_code);\r\n                                    Cookies.set(\"serviceagent\", agent_code);\r\n                                    if (agent_lineup === \"\" || agent_lineup === \"-\") {\r\n                                        this.setState({ isDownLine: false });\r\n                                        ServiceGameService.listServiceFromAgent(agent_code).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    } else {\r\n                                        this.setState({ isDownLine: true });\r\n                                        ServiceGameService.listServiceFromAgent(agent_lineup).then((res) => {\r\n                                            console.log(res.data);\r\n                                            const { data, status } = res.data;\r\n                                            if (status === 2000) {\r\n                                                console.log(\"data service length : \" + data.length);\r\n                                                this.setState({ data_service: data });\r\n\r\n                                                let my_data_brand = [];\r\n                                                var i;\r\n                                                for (i = 0; i < data.length; i++) {\r\n                                                    //data_brand.filter()\r\n                                                    const brands = data_brand.filter((brand) => {\r\n                                                        return brand.brand_code == data[i].brand_code;\r\n                                                    })\r\n                                                    //console.log('brands : ' + brands);\r\n                                                    const brand_name = brands.map((brand, index) => {\r\n                                                        return brand.brand_name;\r\n                                                    })\r\n                                                    console.log('brand_name : ' + brand_name[0]);\r\n                                                    my_data_brand.push({ brand_name: brand_name[0], brand_code: data[i].brand_code });\r\n                                                }\r\n                                                console.log('data_brand : ' + JSON.stringify(my_data_brand));\r\n                                                this.setState({ data_brand: my_data_brand });\r\n                                                this.setState({ brand: my_data_brand[0].brand_name });\r\n                                                this.setState({ brand_code: my_data_brand[0].brand_code });\r\n                                            } else {\r\n                                                this.setErrorMsg(res.data.msg);\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                        } else {\r\n                            this.setErrorMsg(res.data.msg);\r\n                        }\r\n                    });\r\n\r\n                }\r\n\r\n                if (Cookies.get(\"brand\")) {\r\n                    this.setState({ brand: Cookies.get(\"brand\") });\r\n                }\r\n\r\n            } else {\r\n                this.setErrorMsg(res.data.msg);\r\n            }\r\n        }); */\r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Wallets'} contentTitleButton={<i className=\"fa fa-2x fa-money\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n                        <div className=\"form-group\">\r\n                                {/* <div className=\"col-sm-5\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Member</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.mem} onChange={this.handleSelectMemberChange}>\r\n                                            {\r\n                                                this.state.data_member.map((member, index) => {\r\n                                                    return (\r\n                                                        <option value={member.mem_username} key={index}>{member.mem_username}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div> */}\r\n                                <div className=\"col-sm-10\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Member</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ mem: e.target.value })}\r\n                                            value={this.state.mem}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>                                \r\n                            </div>\r\n                            <div className=\"form-group\">                                \r\n                                <div className=\"col-sm-10\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">                                                            \r\n                                <div className=\"col-sm-10\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">&nbsp;</label>\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">brand code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ brand_code: e.target.value })}\r\n                                            value={this.state.brand_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game username</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ game_username: e.target.value })}\r\n                                            value={this.state.game_username}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">game password</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ game_password: e.target.value })}\r\n                                            value={this.state.game_password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-10\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">credit</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ credit: e.target.value })}\r\n                                            value={this.state.credit}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
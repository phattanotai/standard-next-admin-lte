{"ast":null,"code":"var __jsx = React.createElement;\n//import \"../styles/styles.scss\"\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { useUser } from \"../components/functions/useUser\";\nimport { ServiceUser } from \"../service\";\nimport { ServiceUserAgent } from \"../service\";\nimport { ServiceImage } from \"../service\";\n\nconst env = require('../env'); //import Dialog from 'react-bootstrap-dialog';\n\n\nexport default (() => {\n  //useUser('/', true);\n  const {\n    0: auth,\n    1: setAuth\n  } = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const {\n    0: errorMessage,\n    1: setErrorMsg\n  } = useState(\"\");\n  const {\n    0: show,\n    1: setShow\n  } = useState(false); //let dialog;\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    if (errorMessage) setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceUser.Agentlogin(auth);\n      console.log(\"login : \" + auth);\n\n      if (res.data.status === 2000) {\n        const {\n          data\n        } = res.data;\n        console.log(\"res data=> \" + JSON.stringify(data));\n        console.log(\"res data id=> \" + data.id);\n        console.log(\"res data agent_code=> \" + data.agent_code);\n        Cookies.set(\"userid\", data.id);\n        Cookies.set(\"user\", auth.username);\n        Cookies.set(\"agentcode\", data.agent_code); //Cookies.set(\"agentname\", data.agent_code);\n\n        Cookies.set(\"agenttype\", data.agent_type); //const levelId = data.level;\n\n        Router.push(\"/admin\", {\n          data: data\n        }); //<<<<<<<<< For User role >>>>>>>>>\n\n        /* ServiceUser.listSystemRole().then((res) => {\n            console.log(res.data);\n            const { data, status } = res.data;\n            const data_role = data;\n            if (status === 2000) {\n                ServiceUser.listMenu().then((res) => {\n                    console.log(res.data);\n                    const { data, status } = res.data;\n                    if (status === 2000) {\n                        var i;\n                        var perm_arr = [];\n                        for (i = 0; i < data_role.length; i++) {\n                            if (data_role[i].user_level_id == levelId) {\n                                console.log('user role : ' + data_role[i].user_level_name);\n                                console.log('user perm : ' + data_role[i].user_level_permission);\n                                 var perm = data_role[i].user_level_permission;\n                                if (perm) {\n                                    perm_arr = perm.split('-');\n                                }\n                            }\n                        }\n                         console.log('data length : ' + data.length);\n                        console.log('perm length : ' + perm_arr.length);\n                         if (data.length == perm_arr.length) {\n                            var j;\n                             for (j = 0; j < data.length; j++) {\n                                console.log('perm [' + j + ']: ' + Number(perm_arr[j]));\n                                Cookies.set(data[j].menu_name.split(' ').join(''), Number(perm_arr[j]));\n                                console.log('menu ' + data[j].menu_name.split(' ').join('') + ':' + Cookies.get(data[j].menu_name.split(' ').join('')));\n                            }\n                        }\n                        console.log(\"go to admin page\");\n                        Router.push(\"/admin\", { data: data });\n                    } else {\n                        this.setErrorMsg(res.data.msg);\n                    }\n                });\n             } else {\n                this.setErrorMsg(res.data.msg);\n            }\n        }); */\n      } else {\n        console.log(res);\n        setErrorMsg(res.data.message + '!!!');\n        setShow(true); //this.dialog.showAlert(res_role.data.msg);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      setErrorMsg(error.message); //this.dialog.showAlert(error.message);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    id: \"login\",\n    className: \"login\"\n  }, __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"div\", {\n    id: \"login-row\",\n    className: \"row justify-content-center align-items-center\"\n  }, __jsx(\"div\", {\n    id: \"login-column\",\n    className: \"col-md-6\"\n  }, __jsx(\"div\", {\n    id: \"login-box\",\n    className: \"col-md-12\"\n  }, __jsx(\"h1\", {\n    className: \"text-center text-white pt-5\"\n  }, env.agent_name), __jsx(\"div\", {\n    className: \"form-group text-center\"\n  }, __jsx(\"img\", {\n    src: \"../backend_logo.png\",\n    id: \"icon\",\n    alt: \"User Icon\",\n    className: \"logo\"\n  }), __jsx(\"h3\", {\n    className: \"text-center text-white pt-0\"\n  }, \"Web Agent Backend\")), __jsx(\"form\", {\n    id: \"login-form\",\n    className: \"form-group\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    className: \"form-control\",\n    placeholder: \"Username\",\n    onChange: e => {\n      setAuth({\n        username: e.target.value,\n        password: auth.password\n      });\n      setShow(false);\n    },\n    value: auth.username\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    id: \"password\",\n    className: \"form-control\",\n    placeholder: \"Password\",\n    onChange: e => {\n      setAuth({\n        password: e.target.value,\n        username: auth.username\n      });\n      setShow(false);\n    },\n    value: auth.password\n  })), __jsx(\"div\", {\n    className: \"form-group\"\n  }, __jsx(\"input\", {\n    type: \"submit\",\n    name: \"submit\",\n    className: \"btn btn-info btn-md\",\n    defaultValue: \"submit\"\n  })), show ? __jsx(\"div\", {\n    className: \"p-3 mb-2 bg-danger text-white\"\n  }, errorMessage) : null)))))));\n});","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/master-agent/index.js"],"names":["React","useState","Router","Cookies","useUser","ServiceUser","ServiceUserAgent","ServiceImage","env","require","auth","setAuth","username","password","errorMessage","setErrorMsg","show","setShow","handleSubmit","e","preventDefault","res","Agentlogin","console","log","data","status","JSON","stringify","id","agent_code","set","agent_type","push","message","error","agent_name","target","value"],"mappings":"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","sourcesContent":["//import \"../styles/styles.scss\"\nimport React, { useState } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { useUser } from \"../components/functions/useUser\";\nimport { ServiceUser } from \"../service\";\nimport { ServiceUserAgent } from \"../service\";\nimport { ServiceImage } from \"../service\";\nconst env = require('../env');\n//import Dialog from 'react-bootstrap-dialog';\n\nexport default () => {\n\n    //useUser('/', true);\n    const [auth, setAuth] = useState({ username: \"\", password: \"\" });\n    const [errorMessage, setErrorMsg] = useState(\"\");\n    const [show, setShow] = useState(false);\n    \n    //let dialog;\n    async function handleSubmit(e) {\n        e.preventDefault();\n        if (errorMessage) setErrorMsg(\"\");\n        try {\n            const res = await ServiceUser.Agentlogin(auth);\n            console.log(\"login : \" + auth)\n            if (res.data.status === 2000) {\n                const { data } = res.data;\n                console.log(\"res data=> \" + JSON.stringify(data));\n                console.log(\"res data id=> \" + data.id);\n                console.log(\"res data agent_code=> \" + data.agent_code);\n                Cookies.set(\"userid\", data.id);\n                Cookies.set(\"user\", auth.username);\n                Cookies.set(\"agentcode\", data.agent_code);\n                //Cookies.set(\"agentname\", data.agent_code);\n                Cookies.set(\"agenttype\", data.agent_type);\n                //const levelId = data.level;\n\n                Router.push(\"/admin\", { data: data });\n\n                //<<<<<<<<< For User role >>>>>>>>>\n                /* ServiceUser.listSystemRole().then((res) => {\n                    console.log(res.data);\n                    const { data, status } = res.data;\n                    const data_role = data;\n                    if (status === 2000) {\n                        ServiceUser.listMenu().then((res) => {\n                            console.log(res.data);\n                            const { data, status } = res.data;\n                            if (status === 2000) {\n                                var i;\n                                var perm_arr = [];\n                                for (i = 0; i < data_role.length; i++) {\n                                    if (data_role[i].user_level_id == levelId) {\n                                        console.log('user role : ' + data_role[i].user_level_name);\n                                        console.log('user perm : ' + data_role[i].user_level_permission);\n\n                                        var perm = data_role[i].user_level_permission;\n                                        if (perm) {\n                                            perm_arr = perm.split('-');\n                                        }\n                                    }\n                                }\n\n                                console.log('data length : ' + data.length);\n                                console.log('perm length : ' + perm_arr.length);\n\n                                if (data.length == perm_arr.length) {\n                                    var j;\n\n                                    for (j = 0; j < data.length; j++) {\n                                        console.log('perm [' + j + ']: ' + Number(perm_arr[j]));\n                                        Cookies.set(data[j].menu_name.split(' ').join(''), Number(perm_arr[j]));\n                                        console.log('menu ' + data[j].menu_name.split(' ').join('') + ':' + Cookies.get(data[j].menu_name.split(' ').join('')));\n                                    }\n                                }\n                                console.log(\"go to admin page\");\n                                Router.push(\"/admin\", { data: data });\n                            } else {\n                                this.setErrorMsg(res.data.msg);\n                            }\n                        });\n\n                    } else {\n                        this.setErrorMsg(res.data.msg);\n                    }\n                }); */\n\n\n\n            } else {\n                console.log(res);\n                setErrorMsg(res.data.message + '!!!');\n                setShow(true);\n                //this.dialog.showAlert(res_role.data.msg);\n            }\n        } catch (error) {\n            console.error(\"An unexpected error happened occurred:\", error);\n            setErrorMsg(error.message);\n            //this.dialog.showAlert(error.message);\n        }\n    }\n    return (\n\n        <>\n            {/* <div><Dialog ref={(el) => { this.dialog = el }} /></div> \n            <MyDialog />*/}\n            <div id=\"login\" className=\"login\">\n\n                <div className=\"container\">\n                    <div id=\"login-row\" className=\"row justify-content-center align-items-center\">\n                        <div id=\"login-column\" className=\"col-md-6\">\n                            <div id=\"login-box\" className=\"col-md-12\">\n                                <h1 className=\"text-center text-white pt-5\">{env.agent_name}</h1>\n                                <div className=\"form-group text-center\">\n                                    <img src=\"../backend_logo.png\" id=\"icon\" alt=\"User Icon\" className=\"logo\" />\n                                    \n                                    <h3 className=\"text-center text-white pt-0\">Web Agent Backend</h3>\n                                </div>\n\n                                <form id=\"login-form\" className=\"form-group\" onSubmit={handleSubmit}>\n                                    {/* <span className=\"brand-text font-weight-light fa fa-key fa-2x brand-image ml-2\">\n                                        <h3 className=\"text-center text-info\">Login : </h3>\n                                    </span> */}\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" name=\"username\" id=\"username\" className=\"form-control\"\n                                            placeholder=\"Username\"\n                                            onChange={(e) => {\n                                                setAuth({\n                                                    username: e.target.value,\n                                                    password: auth.password,\n                                                });\n                                                setShow(false);\n                                            }\n                                            }\n                                            value={auth.username}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form-control\"\n                                            placeholder=\"Password\"\n                                            onChange={(e) => {\n                                                setAuth({\n                                                    password: e.target.value,\n                                                    username: auth.username,\n                                                });\n                                                setShow(false);\n                                            }\n                                            }\n                                            value={auth.password}\n                                        />\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"submit\" name=\"submit\" className=\"btn btn-info btn-md\" defaultValue=\"submit\" />\n                                    </div>\n                                    {\n                                        show ? <div className=\"p-3 mb-2 bg-danger text-white\">{errorMessage}</div> : null\n                                    }\n\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}
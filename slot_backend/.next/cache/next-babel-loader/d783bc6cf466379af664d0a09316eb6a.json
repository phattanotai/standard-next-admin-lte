{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from \"react\";\nimport Router from \"next/router\";\nimport Cookies, { getJSON } from \"js-cookie\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport { ServiceGameService } from \"../../service\";\nimport { ServiceAgent } from \"../../service\";\nimport { ServiceGameList } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport { MDBContainer } from 'mdbreact';\nexport default class Brand extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      Cookies.set('service_index', nr);\n      this.dialog.show({\n        title: 'Slot Admin confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(() => {\n          this.dialog.hide();\n        }), Dialog.OKAction(() => {\n          const ind = Cookies.get('service_index');\n          Cookies.remove('service_index');\n          console.log('ind=>' + ind);\n          var arr = this.state.switch_arr;\n          arr[ind] = !arr[ind];\n          this.setState({\n            switch_arr: arr\n          });\n          console.log('handleSwitchChange=>' + arr);\n          var arr2 = this.state.brandname_arr;\n          console.log('this.state.brandname_arr=>' + arr2);\n          this.ListGame(arr2, arr);\n          this.editservice(arr, ind);\n        })],\n        bsSize: 'small',\n        onHide: dialog => {\n          this.dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    });\n\n    this.state = {\n      isLoading: true,\n      data_agent: [],\n      data_brand: [],\n      data: [],\n      rawdata: [],\n      data2: [],\n      rawdata2: [],\n      errorMessage: \"\",\n      role_data: [],\n      pagetotal: 0,\n      pagenumber: 0,\n      recordtotal: 0,\n      rowperpage: 10,\n      pagearr: [],\n      startrow: 0,\n      endrow: 0,\n      searchtxt: \"\",\n      pagetotal2: 0,\n      pagenumber2: 0,\n      recordtotal2: 0,\n      rowperpage2: 10,\n      pagearr2: [],\n      startrow2: 0,\n      endrow2: 0,\n      searchtxt2: \"\",\n      agent: \"\",\n      switch_arr: [],\n      brandname_arr: []\n    };\n    this.deleteBrand = this.deleteBrand.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.handleSelectRowPerPageChange = this.handleSelectRowPerPageChange.bind(this);\n    this.handleSelectPageNumberChange = this.handleSelectPageNumberChange.bind(this);\n    this.handleSelectRowPerPageChange2 = this.handleSelectRowPerPageChange2.bind(this);\n    this.handleSelectPageNumberChange2 = this.handleSelectPageNumberChange2.bind(this);\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.handleSelectServiceRow = this.handleSelectServiceRow.bind(this);\n    this.handleSwitchChange = this.handleSwitchChange.bind(this);\n    this.onSearchClick = this.onSearchClick.bind(this);\n    this.onSearchClick2 = this.onSearchClick2.bind(this);\n    this.deleteService = this.deleteService.bind(this);\n  }\n\n  onSearchClick() {\n    this.setState({\n      searchtxt: e.target.value\n    });\n    var name = e.target.value;\n    var datalength = this.state.rawdata.length;\n\n    if (name != \"\") {\n      this.setState({\n        data: this.state.rawdata.filter(data => {\n          return data.brand_name.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata.filter(data => {\n        return data.brand_name.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data: this.state.rawdata\n      });\n    }\n\n    var page_remain = Math.floor(datalength / this.state.rowperpage);\n    var num = datalength % this.state.rowperpage;\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      recordtotal: datalength,\n      pagetotal: page_remain,\n      pagenumber: pagenum,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  onSearchClick2() {\n    this.setState({\n      searchtxt2: e.target.value\n    });\n    var name = e.target.value;\n    var datalength = this.state.rawdata2.length;\n\n    if (name != \"\") {\n      this.setState({\n        data2: this.state.rawdata2.filter(data => {\n          return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n        })\n      });\n      datalength = this.state.rawdata2.filter(data => {\n        return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n      }).length;\n    } else {\n      this.setState({\n        data2: this.state.rawdata2\n      });\n    }\n\n    var page_remain = Math.floor(datalength / this.state.rowperpage2);\n    var num = datalength % this.state.rowperpage2;\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * this.state.rowperpage2;\n    var endrow = startrow + this.state.rowperpage2;\n    this.setState({\n      recordtotal2: datalength,\n      pagetotal2: page_remain,\n      pagenumber2: pagenum,\n      pagearr2: arr,\n      startrow2: startrow,\n      endrow2: endrow\n    });\n  }\n\n  async editservice(switch_arr, index) {\n    let ser_status = 'Off';\n\n    if (switch_arr[index]) {\n      ser_status = 'On';\n    }\n\n    const {\n      _id\n    } = this.state.data[index];\n    console.log('service_id :' + _id);\n    const a = {\n      ser_status: ser_status\n    };\n    console.log('Set service status start...');\n    const res = await ServiceGameService.editService(a, _id);\n    console.log('res : ' + res.data);\n\n    if (res.data.status === 2000) {\n      console.log('Edit Service Success!!!');\n    } else {\n      this.dialog.showAlert(res.data.message);\n      this.setErrorMsg(res.data.msg);\n    }\n  }\n\n  async deleteService(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceGameService.deleteService(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete Service successfully.');\n        this.setState({\n          data: this.state.data.filter(game => {\n            return game._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(game => {\n            return game._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  async deleteBrand(id) {\n    if (this.state.errorMessage) this.setErrorMsg(\"\");\n\n    try {\n      const res = await ServiceBrand.deleteBrands(id);\n\n      if (res.data.status === 2000) {\n        console.log('delete brand successfully.');\n        this.setState({\n          data: this.state.data.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n        this.setState({\n          rawdata: this.state.rawdata.filter(brand => {\n            return brand._id !== id;\n          })\n        });\n      } else {\n        this.setErrorMsg(res.data.message);\n        this.dialog.showAlert(res.data.message);\n      }\n    } catch (error) {\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n      this.dialog.showAlert(error);\n    }\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    } //var data_agent_tmp = [];\n\n\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        }); //data_agent_tmp = data;\n\n        if (Cookies.get('serviceagent')) {\n          const agent_code = Cookies.get('serviceagent');\n          console.log('agent_code:' + agent_code);\n          var agent_name = \"\",\n              m;\n\n          for (m = 0; m < data.length; m++) {\n            console.log('tmp agent_code:' + data[m].agent_code);\n\n            if (data[m].agent_code == agent_code) {\n              agent_name = data[m].agent_name;\n            }\n          }\n\n          console.log('agent name:' + agent_name);\n          this.setState({\n            agent: agent_name\n          });\n        }\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n    ServiceBrand.listBrands().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data brand length : \" + data.length);\n        this.setState({\n          data_brand: data\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n\n    if (Cookies.get('serviceagent')) {\n      const agent_code = Cookies.get('serviceagent');\n      console.log('agent_code:' + agent_code);\n      ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data service length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var brandname_arr = [];\n          var sw_arr = [];\n          var j;\n\n          for (j = 0; j < data.length; j++) {\n            const {\n              ser_status\n            } = data[j];\n\n            if (ser_status == 'On') {\n              sw_arr.push(true);\n            } else {\n              sw_arr.push(false);\n            }\n\n            brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\n          }\n\n          console.log('sw_arr : ' + sw_arr);\n          this.setState({\n            switch_arr: sw_arr\n          });\n          this.setState({\n            brandname_arr: brandname_arr\n          });\n          this.ListGame(brandname_arr, sw_arr);\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    }\n  }\n\n  setErrorMsg(msg) {\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code;\n  }\n\n  SearchAgentName(agentcode) {\n    console.log('get agent_name');\n    console.log('agent_code : ' + agentcode);\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_code == agentcode;\n    });\n    console.log('agents : ' + agents);\n    const agent_name = agents.map((agent, index) => {\n      return agent.agent_name;\n    });\n    console.log('agent_name:' + agent_name);\n    return agent_name;\n  }\n\n  handleSelectServiceRow(bandname) {\n    /* ServiceGameList.listGamesFromBrand(bandname).then((res) => {\r\n        console.log(res.data);\r\n        const { data, status } = res.data;\r\n        if (status === 2000) {\r\n            console.log(\"data game list length : \" + data.length);\r\n            this.setState({ data2: data });\r\n            \r\n        } else {\r\n            this.setErrorMsg(res.data.msg);\r\n        }\r\n    });  */\n  }\n\n  ListGame(brandname_arr, switch_arr) {\n    console.log('start list game');\n    ServiceGameList.listGames().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n\n      if (status === 2000) {\n        console.log(\"data game list length : \" + data.length);\n        var arr_data = [];\n        var i, j;\n\n        for (i = 0; i < data.length; i++) {\n          console.log('data[' + i + '].game_brand=>' + data[i].game_brand);\n\n          for (j = 0; j < brandname_arr.length; j++) {\n            console.log('brandname_arr[' + j + ']=>' + brandname_arr[j]);\n\n            if (brandname_arr[j] == data[i].game_brand) {\n              if (switch_arr[j]) {\n                arr_data.push(data[i]);\n              }\n            }\n          }\n        }\n\n        console.log('arr_data=>' + arr_data);\n        this.setState({\n          data2: arr_data\n        });\n        this.setState({\n          rawdata2: arr_data\n        });\n        var page_remain = Math.floor(arr_data.length / this.state.rowperpage2);\n        var num = arr_data.length % this.state.rowperpage2;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\n        var endrow = startrow + this.state.rowperpage2;\n        this.setState({\n          recordtotal2: arr_data.length,\n          pagetotal2: page_remain,\n          pagenumber2: pagenum,\n          pagearr2: arr,\n          startrow2: startrow,\n          endrow2: endrow\n        });\n      } else {\n        this.setErrorMsg(res.data.msg);\n      }\n    });\n  }\n\n  SearchBrand(brandcode) {\n    console.log('get brand name');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_code == brandcode;\n    });\n    const brand_name = brands.map((brand, index) => {\n      return brand.brand_name;\n    });\n    const brand_img = brands.map((brand, index) => {\n      return brand.brand_img;\n    });\n    return [brand_name, brand_img];\n  }\n\n  SearchBrandName(brandcode) {\n    console.log('get brand name');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_code == brandcode;\n    });\n    const brand_name = brands.map((brand, index) => {\n      return brand.brand_name;\n    });\n    return brand_name;\n  }\n\n  SearchBrandcode(brandname) {\n    console.log('get brand code');\n    const brands = this.state.data_brand.filter(brand => {\n      return brand.brand_name == brandname;\n    });\n    const brand_code = brands.map((brand, index) => {\n      return brand.brand_code;\n    });\n    return brand_code;\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    this.setState({\n      data: []\n    });\n    this.setState({\n      rawdata: []\n    });\n    this.setState({\n      data2: []\n    });\n\n    if (e.target.value !== '---- Select Agent ----') {\n      const agent_code = this.SearchAgent(e.target.value)[0];\n      console.log('agent_code =>' + agent_code);\n      Cookies.set(\"serviceagent\", agent_code);\n      ServiceGameService.listServiceFromAgent(agent_code).then(res => {\n        console.log(res.data);\n        const {\n          data,\n          status\n        } = res.data;\n\n        if (status === 2000) {\n          console.log(\"data length : \" + data.length);\n          this.setState({\n            data: data\n          });\n          this.setState({\n            rawdata: data\n          });\n          var brandname_arr = [];\n          var sw_arr = [];\n          var j;\n\n          for (j = 0; j < data.length; j++) {\n            const {\n              ser_status\n            } = data[j];\n\n            if (ser_status == 'On') {\n              sw_arr.push(true);\n            } else {\n              sw_arr.push(false);\n            }\n\n            brandname_arr.push(this.SearchBrand(data[j].brand_code)[0]);\n          }\n\n          console.log('sw_arr : ' + sw_arr);\n          this.setState({\n            switch_arr: sw_arr\n          });\n          this.setState({\n            brandname_arr: brandname_arr\n          });\n          console.log('brandname_arr : ' + brandname_arr);\n          this.ListGame(brandname_arr, sw_arr);\n          var page_remain = Math.floor(data.length / this.state.rowperpage);\n          var num = data.length % this.state.rowperpage;\n\n          if (num > 0) {\n            page_remain++;\n          }\n\n          var arr = [];\n          var i;\n\n          for (i = 0; i < page_remain; i++) {\n            arr.push(i + 1);\n          }\n\n          var pagenum = 1;\n          var startrow = (pagenum - 1) * this.state.rowperpage;\n          var endrow = startrow + this.state.rowperpage;\n          this.setState({\n            recordtotal: data.length,\n            pagetotal: page_remain,\n            pagenumber: pagenum,\n            pagearr: arr,\n            startrow: startrow,\n            endrow: endrow\n          });\n        } else {\n          this.setErrorMsg(res.data.msg);\n        }\n      });\n    } else {\n      Cookies.remove('serviceagent');\n    }\n  }\n\n  handleSelectRowPerPageChange(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data: this.state.data,\n      pagetotal: page_remain,\n      pagenumber: 1,\n      pagearr: arr,\n      startrow: startrow,\n      endrow: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage;\n    var endrow = startrow + this.state.rowperpage;\n    this.setState({\n      startrow: startrow,\n      endrow: endrow\n    });\n  }\n\n  handleSelectRowPerPageChange2(e) {\n    e.preventDefault();\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rowperpage2: e.target.value\n    });\n    var page_remain = Math.floor(this.state.recordtotal2 / e.target.value);\n    console.log(\"pagetotal : \" + page_remain);\n    var num = this.state.recordtotal2 % e.target.value;\n    console.log(\"num : \" + num);\n\n    if (num > 0) {\n      page_remain++;\n    }\n\n    var arr = [];\n    var i;\n\n    for (i = 0; i < page_remain; i++) {\n      arr.push(i + 1);\n    }\n\n    console.log(\"arr : \" + arr);\n    var pagenum = 1;\n    var startrow = (pagenum - 1) * e.target.value;\n    var endrow = startrow + e.target.value;\n    this.setState({\n      pagearr: []\n    });\n    console.log(\"startrow : \" + startrow);\n    console.log(\"endrow : \" + endrow);\n    this.setState({\n      data2: this.state.data2,\n      pagetotal2: page_remain,\n      pagenumber2: 1,\n      pagearr2: arr,\n      startrow2: startrow,\n      endrow2: endrow\n    });\n    this.forceUpdate();\n  }\n\n  handleSelectPageNumberChange2(e) {\n    e.preventDefault();\n    this.setState({\n      pagenumber2: e.target.value\n    });\n    var pagenum = e.target.value;\n    var startrow = (pagenum - 1) * this.state.rowperpage2;\n    var endrow = startrow + this.state.rowperpage2;\n    this.setState({\n      startrow2: startrow,\n      endrow2: endrow\n    });\n  }\n\n  render() {\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Game Service',\n      contentTitleButton: __jsx(Link, {\n        href: \"/game_service/add\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-success btn-sm\"\n      }, __jsx(\"i\", {\n        className: \"fa fa fa-exchange fa-fw\"\n      }), \" Add a new Service\")),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Select Agents\", __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.agent,\n      onChange: this.handleSelectAgentChange\n    }, __jsx(\"option\", {\n      value: \"All\"\n    }, \"---- Select Agent ----\"), this.state.data_agent.map((agent, index) => {\n      return __jsx(\"option\", {\n        value: agent.agent_name,\n        key: index\n      }, agent.agent_name);\n    }))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage,\n      onChange: this.handleSelectRowPerPageChange\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber,\n      onChange: this.handleSelectPageNumberChange\n    }, this.state.pagearr.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search brand\",\n      onChange: e => {\n        this.setState({\n          searchtxt: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata.length;\n\n        if (name != \"\") {\n          this.setState({\n            data: this.state.rawdata.filter(data => {\n              return data.brand_name.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata.filter(data => {\n            return data.brand_name.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data: this.state.rawdata\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage);\n        var num = datalength % this.state.rowperpage;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage;\n        var endrow = startrow + this.state.rowperpage;\n        this.setState({\n          recordtotal: datalength,\n          pagetotal: page_remain,\n          pagenumber: pagenum,\n          pagearr: arr,\n          startrow: startrow,\n          endrow: endrow\n        });\n      },\n      value: this.state.searchtxt\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"ON/OFF\"), __jsx(\"th\", null, \"Logo\"), __jsx(\"th\", null, \"Brand\"), __jsx(\"th\", null, \"Agent\"), __jsx(\"th\", {\n      style: {\n        textAlign: \"right\"\n      }\n    }, \" Detail / Edit / Delete \"))), __jsx(\"tbody\", null, this.state.data.map((ser, index) => {\n      let brand = this.SearchBrand(ser.brand_code);\n      console.log('brand : ' + brand);\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (ser.ser_status === 'On') {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) return __jsx(\"tr\", {\n        key: index,\n        onClick: this.handleSelectServiceRow(ser.brand_code)\n      }, __jsx(\"td\", null, __jsx(\"label\", {\n        class: \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(index),\n        checked: this.state.switch_arr[index]\n      }), __jsx(\"span\", {\n        class: \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0On\")), __jsx(\"td\", {\n        className: \"py-1\"\n      }, __jsx(\"img\", {\n        src: brand[1] ? ServiceImage.imageshow(brand[1]) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n        style: {\n          width: \"80px\",\n          height: \"80px\"\n        }\n      })), __jsx(\"td\", {\n        className: \"py-1\"\n      }, brand[0]), __jsx(\"td\", {\n        className: \"py-1\"\n      }, this.SearchAgentName(ser.agent_code)), __jsx(\"td\", {\n        className: \"py-1\",\n        style: {\n          textAlign: \"right\"\n        }\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success btn-icon-text\",\n        onClick: () => {\n          //console.log(\"Description agid\" + agent._id);\n          //Cookies.set(\"agentid\", agent._id);\n          Cookies.set(\"serid\", ser._id);\n          const brand = this.SearchBrandName(ser.brand_code);\n          console.log('brand name => ' + [0]);\n          Cookies.set(\"ser_brandname\", brand[0]);\n          Router.push(\"/game_service/description\");\n        },\n        style: {\n          marginLeft: 5,\n          width: 80\n        } //onClick={this.onClick}\n\n      }, \"Detail\"), \"\\xA0\", __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-warning btn-icon-text\",\n        onClick: () => {\n          /* console.log(\"edit service id\" + agent._id);\r\n          Cookies.set(\"agentid\", agent._id);\r\n          Router.push(\"/agents/edit\"); */\n          Cookies.set(\"serid\", ser._id);\n          const brand = this.SearchBrandName(ser.brand_code);\n          console.log('brand name => ' + [0]);\n          Cookies.set(\"ser_brandname\", brand[0]);\n          Router.push(\"/game_service/edit\");\n        },\n        style: {\n          width: 80\n        } //onClick={this.onClick}\n\n      }, \"Edit\"), __jsx(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.dialog.show({\n            title: 'Slot Admin confirm',\n            body: 'Are you sure?',\n            actions: [Dialog.CancelAction(() => {\n              this.dialog.hide();\n            }), Dialog.OKAction(() => {\n              ///console.log(\"delete userid\" + agent._id);\n              this.deleteService(ser._id);\n            })],\n            bsSize: 'small',\n            onHide: dialog => {\n              this.dialog.hide();\n              console.log('closed by clicking background.');\n            }\n          });\n        },\n        style: {\n          marginLeft: 5,\n          width: 80\n        },\n        className: \"btn btn-danger btn-icon-text\"\n      }, \"Delete\")));\n    })))))), __jsx(\"div\", {\n      className: \"col-6\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }, __jsx(MDBContainer, null, __jsx(\"div\", {\n      className: \"wrapper\"\n    }, __jsx(\"h4\", null, \"Games List for Agent : \", this.state.agent), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"Row per page\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rowperpage2,\n      onChange: this.handleSelectRowPerPageChange2\n    }, __jsx(\"option\", {\n      value: \"10\"\n    }, \"10\"), __jsx(\"option\", {\n      value: \"15\"\n    }, \"15\"), __jsx(\"option\", {\n      value: \"20\"\n    }, \"20\"), __jsx(\"option\", {\n      value: \"25\"\n    }, \"25\"), __jsx(\"option\", {\n      value: \"30\"\n    }, \"30\"), __jsx(\"option\", {\n      value: \"35\"\n    }, \"35\"), __jsx(\"option\", {\n      value: \"40\"\n    }, \"40\"), __jsx(\"option\", {\n      value: \"45\"\n    }, \"45\"), __jsx(\"option\", {\n      value: \"50\"\n    }, \"50\"))), __jsx(\"div\", {\n      className: \"w-auto h-25 p-3  d-inline-block\"\n    }, \"PageNumber\", __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.pagenumber2,\n      onChange: this.handleSelectPageNumberChange2\n    }, this.state.pagearr2.map((p, index) => {\n      return __jsx(\"option\", {\n        value: p,\n        key: index\n      }, p);\n    }))), __jsx(\"div\", {\n      className: \"card-tools d-inline-block\"\n    }, __jsx(\"div\", {\n      className: \"input-group input-group-sm\",\n      style: {\n        width: '100%'\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"table_search\",\n      className: \"form-control float-right\",\n      placeholder: \"Search game code / name\",\n      onChange: e => {\n        this.setState({\n          searchtxt2: e.target.value\n        });\n        var name = e.target.value;\n        var datalength = this.state.rawdata2.length;\n\n        if (name != \"\") {\n          this.setState({\n            data2: this.state.rawdata2.filter(data => {\n              return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n            })\n          });\n          datalength = this.state.rawdata2.filter(data => {\n            return data.game_name.indexOf(name) !== -1 || data.game_code.indexOf(name) !== -1;\n          }).length;\n        } else {\n          this.setState({\n            data2: this.state.rawdata2\n          });\n        }\n\n        var page_remain = Math.floor(datalength / this.state.rowperpage2);\n        var num = datalength % this.state.rowperpage2;\n\n        if (num > 0) {\n          page_remain++;\n        }\n\n        var arr = [];\n        var i;\n\n        for (i = 0; i < page_remain; i++) {\n          arr.push(i + 1);\n        }\n\n        var pagenum = 1;\n        var startrow = (pagenum - 1) * this.state.rowperpage2;\n        var endrow = startrow + this.state.rowperpage2;\n        this.setState({\n          recordtotal2: datalength,\n          pagetotal2: page_remain,\n          pagenumber2: pagenum,\n          pagearr2: arr,\n          startrow2: startrow,\n          endrow2: endrow\n        });\n      },\n      value: this.state.searchtxt2\n    }), __jsx(\"div\", {\n      className: \"input-group-append\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-default\"\n    }, __jsx(\"i\", {\n      className: \"fa fa-search\",\n      onClick: this.onSearchClick2\n    })))))))), __jsx(\"div\", {\n      className: \"card-body table-responsive p-0\"\n    }, __jsx(\"table\", {\n      className: \"table table-hover\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Status\"), __jsx(\"th\", null, \"Image\"), __jsx(\"th\", null, \"Code\"), __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Type\"))), __jsx(\"tbody\", null, this.state.data2.map((game, index) => {\n      let classBadge = 'danger';\n      let mystatus = 'disable';\n\n      if (game.game_status == 1) {\n        classBadge = 'success';\n        mystatus = 'enable';\n      }\n\n      if (index >= this.state.startrow && index < this.state.endrow) //console.log(\"userid\" + user.id);\n        return __jsx(\"tr\", {\n          key: index\n        }, __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"label\", {\n          className: `badge badge-info`,\n          style: {\n            display: game.game_new === 'Yes' ? 'block' : 'none'\n          }\n        }, \"new\"), \" \", __jsx(\"label\", {\n          className: `badge badge-${classBadge}`,\n          style: {\n            display: 'block'\n          }\n        }, mystatus)), __jsx(\"td\", {\n          className: \"py-1\"\n        }, __jsx(\"img\", {\n          src: game.game_img ? ServiceImage.imageshow(game.game_img) : ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n          style: {\n            flex: 1,\n            width: \"80px\",\n            height: null,\n            resizeMode: 'contain'\n          }\n        })), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_code), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_name), __jsx(\"td\", {\n          className: \"py-1\"\n        }, game.game_type));\n    })))))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nexport default class EditAgent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      userid: Cookies.get(\"uagentid\"),\n      agent_code: \"\",\n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      user_level: \"3\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      agent: \"\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      data_agent: [],\n      role: \"3\",\n      rolename: \"User\"\n    };\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n    this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\n    this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\n    this.SearchAgent = this.SearchAgent.bind(this);\n    this.onSearchLevelname = this.onSearchLevelname.bind(this);\n  }\n\n  SearchAgent(agent_name) {\n    console.log('get agent_code');\n    const agents = this.state.data_agent.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agent_code = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agent_code[0];\n  }\n\n  handleSelectAgentChange(e) {\n    e.preventDefault();\n    console.log('e.target.value =>' + e.target.value);\n    this.setState({\n      agent: e.target.value\n    });\n    const agent_code = this.SearchAgent(e.target.value);\n    Cookies.set('_Agent', e.target.value);\n    this.setState({\n      agent_code: agent_code\n    });\n  }\n\n  onSearchLevelname(level) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_id == level;\n    });\n    const user_level = myrole.map((role, index) => {\n      return role.user_level_name;\n    });\n    return user_level[0];\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onSearchAgentCode(agent_name) {\n    console.log('get Agent Code');\n    const agents = this.state.agentdata.filter(agent => {\n      return agent.agent_name == agent_name;\n    });\n    const agentCode = agents.map((agent, index) => {\n      return agent.agent_code;\n    }); //console.log('myrole:' + myrole);\n\n    return agentCode;\n  }\n\n  onSearchAgentName(agent_code) {\n    console.log('get Agent Name');\n    const agents = this.state.agentdata.filter(agent => {\n      return agent.agent_code == agent_code;\n    });\n    const agentName = agents.map((agent, index) => {\n      return agent.agent_name;\n    }); //console.log('myrole:' + myrole);\n\n    return agentName;\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/agent_users\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\n        if (this.state.user_pass === this.state.confirmpassword) {\n          //const urole = this.onSearchLevel(this.state.rolename);\n          //this.setState({ user_level: urole,role: urole });\n          let user_status = 0;\n\n          if (this.state.switch1) {\n            user_status = 1;\n          }\n\n          const a = {\n            agent_code: this.state.agent_code,\n            user_name: this.state.user_name,\n            user_email: this.state.user_email,\n            user_pass: this.state.user_pass,\n            user_level: this.state.user_level,\n            user_status: user_status\n          };\n          const res = await ServiceUserAgent.createUserAgent(a);\n          console.log('res : ' + res.data);\n\n          if (res.data.status === 2000) {\n            console.log('Add User Agent Success!!!');\n            this.dialog.show({\n              title: 'Slot Admin information',\n              body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n              actions: [Dialog.OKAction(() => {\n                Router.push(\"/agent_users\");\n              })]\n            });\n          } else {\n            this.dialog.showAlert(res.data.message);\n            this.setErrorMsg(res.data.msg);\n          }\n        } else {\n          this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      rolename: e.target.value\n    });\n    const v = this.onSearchLevel(e.target.value);\n    this.setState({\n      role: v,\n      user_level: v\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n\n    if (!Cookies.get(\"uagentid\")) {\n      Router.push(\"/agent_users\");\n    }\n\n    ServiceUser.listSystemRole().then(res => {\n      console.log(\"res data=>\" + res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      console.log(\"status=>\" + status);\n\n      if (status === 2000) {\n        console.log(\"data :=>\" + data); //setUsers(data);\n\n        this.setState({\n          role_data: data\n        }); //console.log(\"data : \" + this.state.data);\n      } else {\n        //this.setErrorMsg(res.data.msg);\n        this.dialog.showAlert(res.data.message);\n      }\n    });\n    let agent = \"\";\n    ServiceAgent.listAgent().then(res => {\n      console.log(res.data);\n      const {\n        data,\n        status\n      } = res.data;\n      var data_service = [];\n\n      if (status === 2000) {\n        console.log(\"data agent length : \" + data.length);\n        this.setState({\n          data_agent: data\n        });\n        const data_agent = data;\n\n        if (Cookies.get(\"_Agent\")) {\n          this.setState({\n            agent_code: this.SearchAgent(Cookies.get(\"_Agent\"))\n          });\n        }\n\n        ServiceUserAgent.getUserAgent(this.state.userid).then(res => {\n          //console.log(\"res data=>\" + res.data);\n          const {\n            data,\n            status\n          } = res.data; //console.log(\"status=>\" + status);\n\n          if (status === 2000) {\n            //this.setState({ data: data });\n            console.log(\"edit data =>\" + JSON.stringify(data));\n            const {\n              user_name,\n              user_email,\n              user_level,\n              user_status,\n              agent_code\n            } = data[0];\n            const agents = this.state.data_agent.filter(agent => {\n              return agent.agent_code == agent_code;\n            });\n            const agentName = agents.map((agent, index) => {\n              return agent.agent_name;\n            });\n            this.setState({\n              agent_code: agent_code,\n              agent: agentName,\n              user_name: user_name,\n              user_email: user_email,\n              role: user_level,\n              rolename: this.onSearchLevelname(user_level),\n              switch1: Boolean(Number(user_status))\n            });\n          } else {\n            this.setErrorMsg(res.data.message);\n            this.dialog.showAlert(res.data.message);\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Add Agent Users',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-address-card\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select Agent\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-3\",\n      className: \"form-control\",\n      value: this.state.agent,\n      onChange: this.handleSelectAgentChange\n    }, this.state.data_agent.map((agent, index) => {\n      return __jsx(\"option\", {\n        value: agent.agent_name,\n        key: index\n      }, agent.agent_name);\n    }))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"agent code\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\" //placeholder=\"agent lineup\"\n      ,\n      onChange: e => this.setState({\n        agent_code: e.target.value\n      }),\n      value: this.state.agent_code,\n      required: true,\n      disabled: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"user name\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"agent name\"\n      ,\n      onChange: e => this.setState({\n        user_name: e.target.value\n      }),\n      value: this.state.user_name,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"user email\")), __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"agent detail\"\n      ,\n      onChange: e => this.setState({\n        user_email: e.target.value\n      }),\n      value: this.state.user_email,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex3\" //placeholder=\"Password\"\n      ,\n      onChange: e => this.setState({\n        user_pass: e.target.value\n      }),\n      value: this.state.user_pass,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      className: \"input-group mb-3 input-group-sm\"\n    }, __jsx(\"div\", {\n      className: \"input-group-prepend\"\n    }, __jsx(\"span\", {\n      className: \"input-group-text\"\n    }, \"Confirm Password\")), __jsx(\"input\", {\n      type: \"password\",\n      className: \"form-control \",\n      id: \"validation-ex4\" //placeholder=\"Confirm Password\"\n      ,\n      onChange: e => this.setState({\n        confirmpassword: e.target.value\n      }),\n      value: this.state.confirmpassword,\n      required: true\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"label\", {\n      htmlFor: \"select-1\",\n      className: \"col-sm-12 control-label\"\n    }, \"Select user level\"), __jsx(\"div\", {\n      className: \"col-sm-offset-2 col-sm-12\"\n    }, __jsx(\"select\", {\n      id: \"select-1\",\n      className: \"form-control\",\n      value: this.state.rolename,\n      onChange: this.handleSelectChange\n    }, this.state.role_data.map((data, index) => {\n      return __jsx(\"option\", {\n        key: index,\n        value: data.user_level_name\n      }, data.user_level_name);\n    })))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/agent_users/edit.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceUser","Dialog","EditAgent","constructor","props","nr","switchNumber","setState","state","userid","get","agent_code","user_name","user_email","user_pass","add_date","user_level","user_status","switch1","agent","errorMessage","datas","role_data","mydatas","value","data_agent","role","rolename","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","onClick","onConfirmClick","handleResetSubmit","onSearchLevel","onSearchAgentCode","handleSelectAgentChange","SearchAgent","onSearchLevelname","agent_name","console","log","agents","filter","map","index","e","preventDefault","target","set","level","myrole","user_level_id","user_level_name","level_name","agentdata","agentCode","onSearchAgentName","agentName","dialog","showAlert","push","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","confirmpassword","a","res","createUserAgent","data","status","message","msg","error","v","user_enable","componentDidMount","listSystemRole","then","listAgent","data_service","length","getUserAgent","JSON","stringify","Boolean","Number","render","element","url","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceUser } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class EditAgent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            userid: Cookies.get(\"uagentid\"),\r\n            agent_code: \"\",\r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            user_level: \"3\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,\r\n            agent: \"\",\r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"Master\",\r\n            data_agent: [],\r\n\r\n            role: \"3\",\r\n            rolename: \"User\",\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\r\n        this.SearchAgent = this.SearchAgent.bind(this);\r\n        this.onSearchLevelname = this.onSearchLevelname.bind(this);\r\n    }\r\n\r\n    SearchAgent(agent_name) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agent_code = agents.map((agent, index) => {\r\n            return agent.agent_code;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_code[0];\r\n    }\r\n\r\n    handleSelectAgentChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ agent: e.target.value });\r\n        const agent_code = this.SearchAgent(e.target.value);\r\n        Cookies.set('_Agent', e.target.value);\r\n        this.setState({ agent_code: agent_code });\r\n    }\r\n\r\n    onSearchLevelname(level) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_id == level;\r\n        })\r\n\r\n        const user_level = myrole.map((role, index) => {\r\n            return role.user_level_name\r\n        })\r\n        return user_level[0];\r\n    }\r\n\r\n    onSearchLevel(level_name) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_name == level_name;\r\n        })\r\n\r\n        const user_level_id = myrole.map((role, index) => {\r\n            return role.user_level_id\r\n        })\r\n        return user_level_id[0];\r\n    }\r\n\r\n    onSearchAgentCode(agent_name) {\r\n        console.log('get Agent Code');\r\n        const agents = this.state.agentdata.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agentCode = agents.map((agent, index) => {\r\n            return agent.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    onSearchAgentName(agent_code) {\r\n        console.log('get Agent Name');\r\n        const agents = this.state.agentdata.filter((agent) => {\r\n            return agent.agent_code == agent_code;\r\n        })\r\n\r\n        const agentName = agents.map((agent, index) => {\r\n            return agent.agent_name\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentName;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/agent_users\");\r\n    }\r\n\r\n    onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Spiderbot confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\r\n                if (this.state.user_pass === this.state.confirmpassword) {\r\n                    //const urole = this.onSearchLevel(this.state.rolename);\r\n                    //this.setState({ user_level: urole,role: urole });\r\n\r\n                    let user_status = 0;\r\n                    if (this.state.switch1) {\r\n                        user_status = 1;\r\n                    }\r\n\r\n                    const a = {\r\n                        agent_code: this.state.agent_code, user_name: this.state.user_name,\r\n                        user_email: this.state.user_email, user_pass: this.state.user_pass, user_level: this.state.user_level,\r\n                        user_status: user_status\r\n                    };\r\n                    const res = await ServiceUserAgent.createUserAgent(a);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Add User Agent Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/agent_users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ rolename: e.target.value });\r\n        const v = this.onSearchLevel(e.target.value);\r\n        this.setState({ role: v,user_level: v});\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n        if (!Cookies.get(\"uagentid\")) {\r\n            Router.push(\"/agent_users\")\r\n        }\r\n\r\n        ServiceUser.listSystemRole().then((res) => {\r\n            console.log(\"res data=>\" + res.data);\r\n            const { data, status } = res.data;\r\n            console.log(\"status=>\" + status);\r\n            if (status === 2000) {\r\n                console.log(\"data :=>\" + data);\r\n                //setUsers(data);\r\n                this.setState({ role_data: data });\r\n                //console.log(\"data : \" + this.state.data);\r\n            } else {\r\n                //this.setErrorMsg(res.data.msg);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        });\r\n\r\n        let agent = \"\";\r\n        ServiceAgent.listAgent().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            var data_service = [];\r\n            if (status === 2000) {\r\n                console.log(\"data agent length : \" + data.length);\r\n                this.setState({ data_agent: data });\r\n                const data_agent = data;\r\n                if (Cookies.get(\"_Agent\")) {\r\n                    this.setState({agent_code: this.SearchAgent(Cookies.get(\"_Agent\"))});\r\n                }\r\n\r\n                ServiceUserAgent.getUserAgent(this.state.userid).then((res) => {\r\n                    //console.log(\"res data=>\" + res.data);\r\n                    const { data, status } = res.data;\r\n                    //console.log(\"status=>\" + status);\r\n                    if (status === 2000) {\r\n                        //this.setState({ data: data });\r\n                        console.log(\"edit data =>\" + JSON.stringify(data));\r\n                        \r\n                        const { user_name, user_email, user_level, user_status, agent_code } = data[0];   \r\n                        const agents = this.state.data_agent.filter((agent) => {\r\n                            return agent.agent_code == agent_code;\r\n                        })\r\n                \r\n                        const agentName = agents.map((agent, index) => {\r\n                            return agent.agent_name\r\n                        })\r\n                        \r\n                        this.setState({ agent_code: agent_code,agent: agentName, user_name: user_name, user_email: user_email,role: user_level, rolename: this.onSearchLevelname(user_level), switch1: Boolean(Number(user_status)) });\r\n                    } else {\r\n                        this.setErrorMsg(res.data.message);\r\n                        this.dialog.showAlert(res.data.message);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Agent Users'} contentTitleButton={<i className=\"fa fa-2x fa-address-card\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Agent</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.agent} onChange={this.handleSelectAgentChange}>\r\n                                            {\r\n                                                this.state.data_agent.map((agent, index) => {\r\n                                                    return (\r\n                                                        <option value={agent.agent_name} key={index}>{agent.agent_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">user name</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ user_name: e.target.value })}\r\n                                            value={this.state.user_name}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">user email</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ user_email: e.target.value })}\r\n                                            value={this.state.user_email}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ user_pass: e.target.value })}\r\n                                            value={this.state.user_pass}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Confirm Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"Confirm Password\"\r\n                                            onChange={(e) => this.setState({ confirmpassword: e.target.value })}\r\n                                            value={this.state.confirmpassword}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select user level</label>\r\n                                <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                    <select id=\"select-1\" className=\"form-control\" value={this.state.rolename} onChange={this.handleSelectChange}>\r\n                                        {this.state.role_data.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} value={data.user_level_name}>{data.user_level_name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
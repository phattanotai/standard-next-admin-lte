{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceAgent, ServiceUserAgent, ServiceUser } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\n\nvar AddAgent = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddAgent, _React$Component);\n\n  var _super = _createSuper(AddAgent);\n\n  function AddAgent(props) {\n    var _this;\n\n    _classCallCheck(this, AddAgent);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChange\", function (nr) {\n      return function () {\n        var switchNumber = \"switch\".concat(nr);\n\n        _this.setState(_defineProperty({}, switchNumber, !_this.state[switchNumber]));\n      };\n    });\n\n    _this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      agent_code: \"\",\n      user_name: \"\",\n      user_email: \"\",\n      user_pass: \"\",\n      add_date: \"\",\n      user_level: \"2\",\n      user_status: \"\",\n      //1=enable , 0=disable\n      switch1: true,\n      agent: \"\",\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      role: \"\",\n      rolename: \"User\",\n      data_agent: []\n    };\n    _this.handleSelectChange = _this.handleSelectChange.bind(_assertThisInitialized(_this));\n    _this.handleToggleChange = _this.handleToggleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.setErrorMsg = _this.setErrorMsg.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onConfirmClick = _this.onConfirmClick.bind(_assertThisInitialized(_this));\n    _this.handleResetSubmit = _this.handleResetSubmit.bind(_assertThisInitialized(_this));\n    _this.onSearchLevel = _this.onSearchLevel.bind(_assertThisInitialized(_this));\n    _this.onSearchAgentCode = _this.onSearchAgentCode.bind(_assertThisInitialized(_this));\n    _this.handleSelectAgentChange = _this.handleSelectAgentChange.bind(_assertThisInitialized(_this));\n    _this.SearchAgent = _this.SearchAgent.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(AddAgent, [{\n    key: \"SearchAgent\",\n    value: function SearchAgent(agent_name) {\n      console.log('get agent_code');\n      var agents = this.state.data_agent.filter(function (agent) {\n        return agent.agent_name == agent_name;\n      });\n      var agent_code = agents.map(function (agent, index) {\n        return agent.agent_code;\n      }); //console.log('myrole:' + myrole);\n\n      return agent_code[0];\n    }\n  }, {\n    key: \"handleSelectAgentChange\",\n    value: function handleSelectAgentChange(e) {\n      e.preventDefault();\n      console.log('e.target.value =>' + e.target.value);\n      this.setState({\n        agent: e.target.value\n      });\n      var agent_code = this.SearchAgent(e.target.value);\n      Cookies.set('_Agent', agent_code);\n      this.setState({\n        agent_code: agent_code\n      });\n    }\n  }, {\n    key: \"onSearchLevel\",\n    value: function onSearchLevel(level_name) {\n      console.log('get myrole');\n      var myrole = this.state.role_data.filter(function (role) {\n        return role.user_level_name == level_name;\n      });\n      var user_level_id = myrole.map(function (role, index) {\n        return role.user_level_id;\n      });\n      return user_level_id[0];\n    }\n  }, {\n    key: \"onSearchAgentCode\",\n    value: function onSearchAgentCode(agent_name) {\n      console.log('get Agent Code');\n      var agents = this.state.agentdata.filter(function (agent) {\n        return agent.agent_name == agent_name;\n      });\n      var agentCode = agents.map(function (agent, index) {\n        return agent.agent_code;\n      }); //console.log('myrole:' + myrole);\n\n      return agentCode;\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      this.dialog.showAlert('Hello Dialog!');\n    }\n  }, {\n    key: \"handleResetSubmit\",\n    value: function handleResetSubmit() {\n      Router.push(\"/agent_users\");\n    }\n  }, {\n    key: \"onConfirmClick\",\n    value: function onConfirmClick() {\n      this.dialog.show({\n        title: 'Spiderbot confirm',\n        body: 'Are you sure?',\n        actions: [Dialog.CancelAction(function () {\n          dialog.hide();\n        }), Dialog.OKAction(function () {})],\n        bsSize: 'small',\n        onHide: function onHide(dialog) {\n          dialog.hide();\n          console.log('closed by clicking background.');\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var user_status, a, res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n\n                if (!(this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass)) {\n                  _context.next = 17;\n                  break;\n                }\n\n                if (!(this.state.password === this.state.confirmpassword)) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.setState({\n                  user_level: this.onSearchLevel(this.state.rolename)\n                });\n                user_status = 0;\n\n                if (this.state.switch1) {\n                  user_status = 1;\n                }\n\n                a = {\n                  agent_code: this.state.agent_code,\n                  user_name: this.state.user_name,\n                  user_email: this.state.user_email,\n                  user_pass: this.state.user_pass,\n                  user_level: this.state.user_level,\n                  user_status: user_status\n                };\n                _context.next = 9;\n                return ServiceUserAgent.createUserAgent(a);\n\n              case 9:\n                res = _context.sent;\n                console.log('res : ' + res.data);\n\n                if (res.data.status === 2000) {\n                  console.log('Add User Agent Success!!!');\n                  this.dialog.show({\n                    title: 'Slot Admin information',\n                    body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\n                    actions: [Dialog.OKAction(function () {\n                      Router.push(\"/agent_users\");\n                    })]\n                  });\n                } else {\n                  this.dialog.showAlert(res.data.message);\n                  this.setErrorMsg(res.data.msg);\n                }\n\n                _context.next = 15;\n                break;\n\n              case 14:\n                this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\n\n              case 15:\n                _context.next = 18;\n                break;\n\n              case 17:\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n\n              case 18:\n                _context.next = 25;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t0 = _context[\"catch\"](0);\n                this.dialog.showAlert(_context.t0);\n                console.error(\"An unexpected error happened occurred:\", _context.t0);\n                this.setErrorMsg(_context.t0.message);\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n\n      function handleSubmit() {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"handleSelectChange\",\n    value: function handleSelectChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        agent_type: e.target.value\n      });\n    }\n  }, {\n    key: \"handleToggleChange\",\n    value: function handleToggleChange(e) {\n      console.log(\"e.target.value :\" + e.target.value);\n      this.setState({\n        user_enable: e.target.value\n      });\n    }\n  }, {\n    key: \"setErrorMsg\",\n    value: function setErrorMsg(msg) {\n      console.log(msg);\n      this.setState({\n        errorMessage: msg\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!Cookies.get(\"user\")) {\n        Router.push(\"/\");\n      }\n\n      ServiceUser.listSystemRole().then(function (res) {\n        console.log(\"res data=>\" + res.data);\n        var _res$data = res.data,\n            data = _res$data.data,\n            status = _res$data.status;\n        console.log(\"status=>\" + status);\n\n        if (status === 2000) {\n          console.log(\"data :=>\" + data); //setUsers(data);\n\n          _this2.setState({\n            role_data: data\n          }); //console.log(\"data : \" + this.state.data);\n\n        } else {\n          //this.setErrorMsg(res.data.msg);\n          _this2.dialog.showAlert(res.data.message);\n        }\n      });\n      ServiceAgent.listAgent().then(function (res) {\n        console.log(res.data);\n        var _res$data2 = res.data,\n            data = _res$data2.data,\n            status = _res$data2.status;\n        var data_service = [];\n\n        if (status === 2000) {\n          console.log(\"data agent length : \" + data.length);\n\n          _this2.setState({\n            data_agent: data\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var element = __jsx(\"div\", {\n        className: \"toggle-switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        \"data-toggle\": \"toggle\",\n        \"data-on\": \"Ready\",\n        \"data-off\": \"Not Ready\",\n        \"data-onstyle\": \"success\",\n        \"data-offstyle\": \"danger\"\n      }));\n\n      return __jsx(AdminLayoutHoc, {\n        contentTitle: 'Add Agents',\n        contentTitleButton: __jsx(\"i\", {\n          className: \"fa fa-2x fa-id-badge\"\n        }),\n        url: this.props.url\n      }, __jsx(\"div\", {\n        className: \"offset-md-0\"\n      }, __jsx(\"div\", {\n        className: \"card\"\n      }, __jsx(\"div\", {\n        className: \"card-header\"\n      }), __jsx(\"form\", {\n        className: \"form-horizontal\"\n      }, __jsx(\"div\", {\n        className: \"card-body\"\n      }, __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select Agent\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-3\",\n        className: \"form-control\",\n        value: this.state.agent,\n        onChange: this.handleSelectAgentChange\n      }, this.state.data_agent.map(function (agent, index) {\n        return __jsx(\"option\", {\n          value: agent.agent_name,\n          key: index\n        }, agent.agent_name);\n      }))))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"agent code\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex2\" //placeholder=\"agent lineup\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            agent_code: e.target.value\n          });\n        },\n        value: this.state.agent_code,\n        required: true,\n        disabled: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"user name\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"agent name\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            user_name: e.target.value\n          });\n        },\n        value: this.state.user_name,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"user email\")), __jsx(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"validation-ex4\" //placeholder=\"agent detail\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            user_email: e.target.value\n          });\n        },\n        value: this.state.user_email,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Password\")), __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex3\" //placeholder=\"Password\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            password: e.target.value\n          });\n        },\n        value: this.state.password,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"div\", {\n        className: \"input-group mb-3 input-group-sm\"\n      }, __jsx(\"div\", {\n        className: \"input-group-prepend\"\n      }, __jsx(\"span\", {\n        className: \"input-group-text\"\n      }, \"Confirm Password\")), __jsx(\"input\", {\n        type: \"password\",\n        className: \"form-control \",\n        id: \"validation-ex4\" //placeholder=\"Confirm Password\"\n        ,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            confirmpassword: e.target.value\n          });\n        },\n        value: this.state.confirmpassword,\n        required: true\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"label\", {\n        htmlFor: \"select-1\",\n        className: \"col-sm-12 control-label\"\n      }, \"Select user level\"), __jsx(\"div\", {\n        className: \"col-sm-offset-2 col-sm-12\"\n      }, __jsx(\"select\", {\n        id: \"select-1\",\n        className: \"form-control\",\n        value: this.state.rolename,\n        onChange: this.handleSelectChange\n      }, this.state.role_data.map(function (data, index) {\n        return __jsx(\"option\", {\n          key: index,\n          value: data.user_level_name\n        }, data.user_level_name);\n      })))), __jsx(\"div\", {\n        className: \"form-group\"\n      }, __jsx(\"div\", {\n        className: \"col-sm-12\"\n      }, __jsx(\"label\", {\n        \"class\": \"switch\"\n      }, __jsx(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleSwitchChange(1),\n        checked: this.state.switch1\n      }), __jsx(\"span\", {\n        \"class\": \"slider round\"\n      })), __jsx(\"label\", {\n        className: \"control-label\"\n      }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(\"div\", {\n        className: \"d-inline-block btn-block\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: this.handleResetSubmit\n      }, \"Back\"), __jsx(\"button\", {\n        className: \"btn btn-info float-right\",\n        onClick: this.handleSubmit\n      }, \"Save\")))), __jsx(Dialog, {\n        ref: function ref(el) {\n          _this3.dialog = el;\n        }\n      })));\n    }\n  }]);\n\n  return AddAgent;\n}(React.Component);\n\nexport { AddAgent as default };","map":{"version":3,"sources":["D:/WorkSpace/CM/Slot/slot_backend/pages/agent_users/add.js"],"names":["AdminLayoutHoc","Link","React","useState","useEffect","Component","Router","Cookies","ServiceAgent","ServiceUserAgent","ServiceUser","Dialog","AddAgent","props","nr","switchNumber","setState","state","agent_code","user_name","user_email","user_pass","add_date","user_level","user_status","switch1","agent","errorMessage","datas","role_data","mydatas","value","role","rolename","data_agent","handleSelectChange","bind","handleToggleChange","handleSubmit","setErrorMsg","onClick","onConfirmClick","handleResetSubmit","onSearchLevel","onSearchAgentCode","handleSelectAgentChange","SearchAgent","agent_name","console","log","agents","filter","map","index","e","preventDefault","target","set","level_name","myrole","user_level_name","user_level_id","agentdata","agentCode","dialog","showAlert","push","show","title","body","actions","CancelAction","hide","OKAction","bsSize","onHide","password","confirmpassword","a","createUserAgent","res","data","status","message","msg","error","agent_type","user_enable","get","listSystemRole","then","listAgent","data_service","length","element","url","handleSwitchChange","el"],"mappings":"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","sourcesContent":["import AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\r\nimport Link from 'next/link';\r\nimport React, { useState, useEffect, Component } from \"react\";\r\nimport Router from \"next/router\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport { ServiceAgent, ServiceUserAgent, ServiceUser } from \"../../service\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\n\r\nexport default class AddAgent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\r\n            agent_code: \"\",\r\n            user_name: \"\",\r\n            user_email: \"\",\r\n            user_pass: \"\",\r\n            add_date: \"\",\r\n            user_level: \"2\",\r\n            user_status: \"\", //1=enable , 0=disable\r\n            switch1: true,\r\n            agent: \"\",\r\n\r\n            errorMessage: \"\",\r\n            datas: [],\r\n            role_data: [],\r\n            mydatas: {},\r\n            value: \"Master\",\r\n            role: \"\",\r\n            rolename: \"User\",\r\n            data_agent: [],\r\n\r\n        };\r\n\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n        this.handleToggleChange = this.handleToggleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setErrorMsg = this.setErrorMsg.bind(this);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n        this.onConfirmClick = this.onConfirmClick.bind(this)\r\n\r\n        this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n        this.onSearchLevel = this.onSearchLevel.bind(this);\r\n        this.onSearchAgentCode = this.onSearchAgentCode.bind(this);\r\n\r\n        this.handleSelectAgentChange = this.handleSelectAgentChange.bind(this);\r\n        this.SearchAgent = this.SearchAgent.bind(this);\r\n    }\r\n\r\n    SearchAgent(agent_name) {\r\n        console.log('get agent_code');\r\n        const agents = this.state.data_agent.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agent_code = agents.map((agent, index) => {\r\n            return agent.agent_code;\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agent_code[0];\r\n    }\r\n\r\n    handleSelectAgentChange(e) {\r\n        e.preventDefault();\r\n        console.log('e.target.value =>' + e.target.value);\r\n        this.setState({ agent: e.target.value });\r\n        const agent_code = this.SearchAgent(e.target.value);\r\n        Cookies.set('_Agent', agent_code);\r\n        this.setState({ agent_code: agent_code });\r\n    }\r\n\r\n    onSearchLevel(level_name) {\r\n        console.log('get myrole');\r\n        const myrole = this.state.role_data.filter((role) => {\r\n            return role.user_level_name == level_name;\r\n        })\r\n\r\n        const user_level_id = myrole.map((role, index) => {\r\n            return role.user_level_id\r\n        })\r\n        return user_level_id[0];\r\n    }\r\n\r\n    onSearchAgentCode(agent_name) {\r\n        console.log('get Agent Code');\r\n        const agents = this.state.agentdata.filter((agent) => {\r\n            return agent.agent_name == agent_name;\r\n        })\r\n\r\n        const agentCode = agents.map((agent, index) => {\r\n            return agent.agent_code\r\n        })\r\n        //console.log('myrole:' + myrole);\r\n        return agentCode;\r\n    }\r\n\r\n    handleSwitchChange = nr => () => {\r\n        let switchNumber = `switch${nr}`;\r\n        this.setState({\r\n            [switchNumber]: !this.state[switchNumber]\r\n        });\r\n    }\r\n\r\n    onClick() {\r\n        this.dialog.showAlert('Hello Dialog!')\r\n    }\r\n\r\n    handleResetSubmit() {\r\n        Router.push(\"/agent_users\");\r\n    }\r\n\r\n    onConfirmClick() {\r\n        this.dialog.show({\r\n            title: 'Spiderbot confirm',\r\n            body: 'Are you sure?',\r\n            actions: [\r\n                Dialog.CancelAction(() => {\r\n                    dialog.hide();\r\n                }),\r\n                Dialog.OKAction(() => {\r\n\r\n                })\r\n            ],\r\n            bsSize: 'small',\r\n            onHide: (dialog) => {\r\n                dialog.hide()\r\n                console.log('closed by clicking background.')\r\n            }\r\n        })\r\n    }\r\n\r\n    async handleSubmit() {\r\n        try {\r\n            if (this.state.agent_code !== \"\" && this.state.user_name && this.state.user_pass) {\r\n                if (this.state.password === this.state.confirmpassword) {\r\n                    this.setState({ user_level: this.onSearchLevel(this.state.rolename) });\r\n\r\n                    let user_status = 0;\r\n                    if (this.state.switch1) {\r\n                        user_status = 1;\r\n                    }\r\n\r\n                    const a = {\r\n                        agent_code: this.state.agent_code, user_name: this.state.user_name,\r\n                        user_email: this.state.user_email, user_pass: this.state.user_pass, user_level: this.state.user_level,\r\n                        user_status: user_status\r\n                    };\r\n                    const res = await ServiceUserAgent.createUserAgent(a);\r\n                    console.log('res : ' + res.data);\r\n                    if (res.data.status === 2000) {\r\n                        console.log('Add User Agent Success!!!');\r\n                        this.dialog.show({\r\n                            title: 'Slot Admin information',\r\n                            body: 'Add a user agent : ' + a.user_name + ' to system is successfully.',\r\n                            actions: [\r\n                                Dialog.OKAction(() => {\r\n                                    Router.push(\"/agent_users\");\r\n                                })\r\n                            ]\r\n                        })\r\n                    } else {\r\n                        this.dialog.showAlert(res.data.message);\r\n                        this.setErrorMsg(res.data.msg);\r\n                    }\r\n                } else {\r\n                    this.dialog.showAlert('กรุณา confirm password ให้ถูกต้อง!');\r\n                }\r\n\r\n\r\n\r\n            }\r\n            else {\r\n                this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\r\n            }\r\n\r\n        } catch (error) {\r\n            this.dialog.showAlert(error);\r\n            console.error(\"An unexpected error happened occurred:\", error);\r\n            this.setErrorMsg(error.message);\r\n        }\r\n        //e.preventDefault();\r\n    }\r\n\r\n    handleSelectChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ agent_type: e.target.value });\r\n    }\r\n\r\n    handleToggleChange(e) {\r\n        console.log(\"e.target.value :\" + e.target.value);\r\n        this.setState({ user_enable: e.target.value });\r\n    }\r\n\r\n    setErrorMsg(msg) {\r\n        console.log(msg);\r\n        this.setState({ errorMessage: msg });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!Cookies.get(\"user\")) {\r\n            Router.push(\"/\");\r\n        }\r\n\r\n        ServiceUser.listSystemRole().then((res) => {\r\n            console.log(\"res data=>\" + res.data);\r\n            const { data, status } = res.data;\r\n            console.log(\"status=>\" + status);\r\n            if (status === 2000) {\r\n                console.log(\"data :=>\" + data);\r\n                //setUsers(data);\r\n                this.setState({ role_data: data });\r\n                //console.log(\"data : \" + this.state.data);\r\n            } else {\r\n                //this.setErrorMsg(res.data.msg);\r\n                this.dialog.showAlert(res.data.message);\r\n            }\r\n        });\r\n\r\n        ServiceAgent.listAgent().then((res) => {\r\n            console.log(res.data);\r\n            const { data, status } = res.data;\r\n            var data_service = [];\r\n            if (status === 2000) {\r\n                console.log(\"data agent length : \" + data.length);\r\n                this.setState({ data_agent: data });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const element = (\r\n            <div className=\"toggle-switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    data-toggle=\"toggle\"\r\n                    data-on=\"Ready\"\r\n                    data-off=\"Not Ready\"\r\n                    data-onstyle=\"success\"\r\n                    data-offstyle=\"danger\"\r\n                />\r\n            </div>\r\n        );\r\n\r\n        return <AdminLayoutHoc contentTitle={'Add Agents'} contentTitleButton={<i className=\"fa fa-2x fa-id-badge\" />} url={this.props.url}>\r\n            <div className=\"offset-md-0\">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        {/* <h3 className=\"card-title\">New User Form</h3> */}\r\n                    </div>\r\n                    <form className=\"form-horizontal\">\r\n                        <div className=\"card-body\">\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select Agent</label>\r\n                                    <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                        <select id=\"select-3\" className=\"form-control\" value={this.state.agent} onChange={this.handleSelectAgentChange}>\r\n                                            {\r\n                                                this.state.data_agent.map((agent, index) => {\r\n                                                    return (\r\n                                                        <option value={agent.agent_name} key={index}>{agent.agent_name}</option>\r\n                                                    )\r\n                                                })\r\n                                            }\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">agent code</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex2\"\r\n                                            //placeholder=\"agent lineup\"\r\n                                            onChange={(e) => this.setState({ agent_code: e.target.value })}\r\n                                            value={this.state.agent_code}\r\n                                            required\r\n                                            disabled={true} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">user name</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"agent name\"\r\n                                            onChange={(e) => this.setState({ user_name: e.target.value })}\r\n                                            value={this.state.user_name}\r\n                                            required />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">user email</span>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"agent detail\"\r\n                                            onChange={(e) => this.setState({ user_email: e.target.value })}\r\n                                            value={this.state.user_email}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex3\"\r\n                                            //placeholder=\"Password\"\r\n                                            onChange={(e) => this.setState({ password: e.target.value })}\r\n                                            value={this.state.password}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                {/* <label htmlFor=\"validation-ex\" className=\"col-sm-3\">Password</label> */}\r\n                                <div className=\"col-sm-12\">\r\n                                    <div className=\"input-group mb-3 input-group-sm\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <span className=\"input-group-text\">Confirm Password</span>\r\n                                        </div>\r\n                                        <input type=\"password\" className=\"form-control \" id=\"validation-ex4\"\r\n                                            //placeholder=\"Confirm Password\"\r\n                                            onChange={(e) => this.setState({ confirmpassword: e.target.value })}\r\n                                            value={this.state.confirmpassword}\r\n                                            required />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"select-1\" className=\"col-sm-12 control-label\">Select user level</label>\r\n                                <div className=\"col-sm-offset-2 col-sm-12\">\r\n                                    <select id=\"select-1\" className=\"form-control\" value={this.state.rolename} onChange={this.handleSelectChange}>\r\n                                        {this.state.role_data.map((data, index) => {\r\n                                            return (\r\n                                                <option key={index} value={data.user_level_name}>{data.user_level_name}</option>\r\n                                            )\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"col-sm-12\">\r\n                                    <label class=\"switch\">\r\n                                        <input type=\"checkbox\" onChange={this.handleSwitchChange(1)} checked={this.state.switch1} />\r\n                                        <span class=\"slider round\"></span>\r\n                                    </label>\r\n                                    <label className=\"control-label\">&nbsp;&nbsp;Enabled</label>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </form>\r\n\r\n                    <div className=\"card-footer\">\r\n                        <div className=\"d-inline-block btn-block\">\r\n                            <button className=\"btn btn-danger\" onClick={this.handleResetSubmit}>Back</button>\r\n                            <button className=\"btn btn-info float-right\" onClick={this.handleSubmit}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Dialog ref={(el) => { this.dialog = el }} />\r\n            </div>\r\n        </AdminLayoutHoc>\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
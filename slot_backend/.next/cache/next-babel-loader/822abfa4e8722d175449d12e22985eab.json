{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport AdminLayoutHoc from \"../../components/Layout/AdminLayoutHoc\";\nimport Link from 'next/link';\nimport React, { useState, useEffect, Component } from \"react\";\nimport Router from \"next/router\";\nimport Cookies from \"js-cookie\";\nimport { ServiceBrand } from \"../../service\";\nimport { ServiceImage } from \"../../service\";\nimport Dialog from 'react-bootstrap-dialog';\nimport FilesUploadComponent from '../../components/files-upload-component';\nexport default class AddBrand extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSwitchChange\", nr => () => {\n      let switchNumber = `switch${nr}`;\n      this.setState({\n        [switchNumber]: !this.state[switchNumber]\n      });\n    });\n\n    this.state = {\n      //auth: { username: \"\", password: \"\", role: \"3\", rolename: \"User\" },\n      brand_code: \"\",\n      brand_name: \"\",\n      agent_name: \"\",\n      brand_banner: \"\",\n      brand_key: \"\",\n      brand_img: \"\",\n      brand_status: \"\",\n      //1=enable , 0=disable\n      play_url: \"\",\n      switch1: true,\n      errorMessage: \"\",\n      datas: [],\n      role_data: [],\n      mydatas: {},\n      value: \"Master\",\n      image: \"\",\n      imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\"),\n      file: \"\"\n    };\n    this.onFileChange = this.onFileChange.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleToggleChange = this.handleToggleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.setErrorMsg = this.setErrorMsg.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onConfirmClick = this.onConfirmClick.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n    this.onSearchLevel = this.onSearchLevel.bind(this);\n  }\n\n  onFileChange(e) {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.onloadend = () => {\n        this.setState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      this.setState({\n        imagePreviewUrl: ServiceImage.imageshow(\"1594692624651-no-image-available.png\")\n      });\n    }\n  }\n\n  onSearchLevel(level_name) {\n    console.log('get myrole');\n    const myrole = this.state.role_data.filter(role => {\n      return role.user_level_name == level_name;\n    });\n    const user_level_id = myrole.map((role, index) => {\n      return role.user_level_id;\n    });\n    return user_level_id[0];\n  }\n\n  onClick() {\n    this.dialog.showAlert('Hello Dialog!');\n  }\n\n  handleResetSubmit() {\n    Router.push(\"/agents\");\n  }\n\n  onConfirmClick() {\n    this.dialog.show({\n      title: 'Spiderbot confirm',\n      body: 'Are you sure?',\n      actions: [Dialog.CancelAction(() => {\n        dialog.hide();\n      }), Dialog.OKAction(() => {})],\n      bsSize: 'small',\n      onHide: dialog => {\n        dialog.hide();\n        console.log('closed by clicking background.');\n      }\n    });\n  }\n\n  async AddBrand() {\n    let brand_status = 0;\n\n    if (this.state.switch1) {\n      brand_status = 1;\n    }\n\n    const a = {\n      brand_code: this.state.brand_code,\n      brand_name: this.state.brand_name,\n      brand_banner: this.state.brand_img,\n      brand_key: this.state.brand_key,\n      brand_img: this.state.brand_img,\n      brand_status: brand_status,\n      play_url: this.state.play_url\n    };\n    console.log('Add brand start...');\n    const res2 = await ServiceBrand.createBrands(a);\n    console.log('res : ' + res2.data);\n\n    if (res2.data.status === 2000) {\n      console.log('Add Brand Success!!!');\n      this.dialog.show({\n        title: 'Slot Admin information',\n        body: 'บันทึก brand : ' + this.state.brand_name + ' เรียบร้อยแล้ว',\n        actions: [Dialog.OKAction(() => {\n          Router.push(\"/game_bands\");\n        })]\n      });\n    } else {\n      this.dialog.showAlert(res2.data.message);\n      this.setErrorMsg(res2.data.msg);\n    }\n  }\n\n  async handleSubmit() {\n    try {\n      if (this.state.brand_code !== \"\" && this.state.brand_name !== \"\" && this.state.brand_key !== \"\") {\n        if (this.state.file) {\n          const formData = new FormData();\n          formData.append('file', this.state.file);\n          const res = await ServiceImage.imageUpload(formData);\n\n          if (res.data.status === 2000) {\n            const {\n              filename\n            } = res.data.data;\n            console.log('image file name : ' + filename);\n            this.setState({\n              brand_img: filename\n            });\n            this.AddBrand();\n          } else {\n            this.dialog.showAlert('บันทึกข้อมูล Brand ไม่สำเร็จ กรุณาตรวจสอบข้อมูลบันทึกใหม่อีกครั้ง!!!');\n          }\n        } else {\n          this.AddBrand();\n        }\n      } else {\n        this.dialog.showAlert('กรุณาใส่ข้อมูลให้ครบ ก่อนกดปุ่ม Save!');\n      }\n    } catch (error) {\n      //this.dialog.showAlert(error);\n      console.error(\"An unexpected error happened occurred:\", error);\n      this.setErrorMsg(error.message);\n    } //e.preventDefault();\n\n  }\n\n  handleSelectChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      agent_type: e.target.value\n    });\n  }\n\n  handleToggleChange(e) {\n    console.log(\"e.target.value :\" + e.target.value);\n    this.setState({\n      user_enable: e.target.value\n    });\n  }\n\n  setErrorMsg(msg) {\n    console.log(msg);\n    this.setState({\n      errorMessage: msg\n    });\n  }\n\n  componentDidMount() {\n    if (!Cookies.get(\"user\")) {\n      Router.push(\"/\");\n    }\n  }\n\n  render() {\n    const element = __jsx(\"div\", {\n      className: \"toggle-switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      \"data-toggle\": \"toggle\",\n      \"data-on\": \"Ready\",\n      \"data-off\": \"Not Ready\",\n      \"data-onstyle\": \"success\",\n      \"data-offstyle\": \"danger\"\n    }));\n\n    return __jsx(AdminLayoutHoc, {\n      contentTitle: 'Add Brand',\n      contentTitleButton: __jsx(\"i\", {\n        className: \"fa fa-2x fa-cubes\"\n      }),\n      url: this.props.url\n    }, __jsx(\"div\", {\n      className: \"offset-md-0\"\n    }, __jsx(\"div\", {\n      className: \"card\"\n    }, __jsx(\"div\", {\n      className: \"card-header\"\n    }), __jsx(\"form\", {\n      className: \"form-horizontal\"\n    }, __jsx(\"div\", {\n      className: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"brand code\",\n      id: \"validation-ex1\",\n      onChange: e => this.setState({\n        brand_code: e.target.value\n      }),\n      value: this.state.brand_code,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex2\",\n      placeholder: \"brand name\",\n      onChange: e => this.setState({\n        brand_name: e.target.value\n      }),\n      value: this.state.brand_name,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex4\",\n      placeholder: \"brand api key\",\n      onChange: e => this.setState({\n        brand_key: e.target.value\n      }),\n      value: this.state.brand_key,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control \",\n      id: \"validation-ex5\",\n      placeholder: \"play url\",\n      onChange: e => this.setState({\n        play_url: e.target.value\n      }),\n      value: this.state.play_url,\n      required: true\n    }))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"div\", {\n      class: \"card\"\n    }, __jsx(\"div\", {\n      class: \"card-body\"\n    }, __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"h5\", null, \"Logo File Upload\"), __jsx(\"br\", null), __jsx(\"img\", {\n      src: this.state.imagePreviewUrl,\n      style: {\n        flex: 1,\n        width: \"150px\",\n        height: null,\n        resizeMode: 'contain'\n      }\n    })), __jsx(\"div\", {\n      className: \"form-group mt-10\"\n    }, __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange\n    })))))), __jsx(\"div\", {\n      className: \"form-group\"\n    }, __jsx(\"div\", {\n      className: \"col-sm-12\"\n    }, __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"Brand status\\xA0\\xA0\\xA0\\xA0\"), __jsx(\"label\", {\n      class: \"switch\"\n    }, __jsx(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleSwitchChange(1),\n      checked: this.state.switch1\n    }), __jsx(\"span\", {\n      class: \"slider round\"\n    })), __jsx(\"label\", {\n      className: \"control-label\"\n    }, \"\\xA0\\xA0Enabled\"))))), __jsx(\"div\", {\n      className: \"card-footer\"\n    }, __jsx(\"div\", {\n      className: \"d-inline-block btn-block\"\n    }, __jsx(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.handleResetSubmit\n    }, \"Back\"), __jsx(\"button\", {\n      className: \"btn btn-info float-right\",\n      onClick: this.handleSubmit\n    }, \"Save\")))), __jsx(Dialog, {\n      ref: el => {\n        this.dialog = el;\n      }\n    })));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}